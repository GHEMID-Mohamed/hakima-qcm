{"version":3,"sources":["imgs/exam-date.jpg","imgs/exam-correct-answers.png","imgs/ocr-scan.jpg","imgs/contribute.png","imgs/exam.png","imgs/pile-stack-idea.jpg","imgs/pile-password.jpg","imgs/pile-stack-lamp.jpg","imgs/pile-stack.jpg","imgs/panda_koala.jpg","imgs/button-spinner.gif","pass-exam/exam/report-exam/index.js","account-menu/index.js","components/action-button.js","admin/admin-authentication/index.js","components/sorted-table.js","utils.js","admin/admin-exams/index.js","admin/admin-reports/index.js","admin/admin-messages/index.js","admin/index.js","reset-password-form/index.js","authentication-form/index.js","data/cities.js","create-account/index.js","auth-or-create/index.js","confirm-page/index.js","confirm-reset/index.js","contact-us/index.js","contest-exam/index.js","user-added-exams/index.js","components/modal-img/index.js","question-form/index.js","exam-form/index.js","scan-info-card/index.js","contribuate/index.js","pass-exam/exam-with-answers/index.js","pass-exam/exam/index.js","exam-menu-nav/index.js","my-review/exam-session/index.js","footer/index.js","contribute-card/index.js","exam-card/index.js","illustration-idea-cards/idea-card/index.js","illustration-idea-cards/security-card/index.js","illustration-idea-cards/solution-card/index.js","illustration-idea-cards/problem-card/index.js","illustration-idea-cards/index.js","published-exams/index.js","home/index.js","my-review/review-sessions/user-sessions/index.js","my-review/review-sessions/index.js","my-review/index.js","pass-exam/exam-explorer/exams-by-year-univ/index.js","pass-exam/exam-explorer/univ-by-year/index.js","pass-exam/exam-explorer/module-by-year/index.js","pass-exam/exam-explorer/index.js","pass-exam/search-exam/index.js","pass-exam/index.js","who-r-us/index.js","App.js","serviceWorker.js","index.js","imgs/cute_koala.jpg","imgs/app-icon-brand.png"],"names":["module","exports","__webpack_require__","p","_inputRef","withState","provideState","initialState","dropdownOpen","effects","toggle","state","Object","objectSpread","injectState","_ref","history","react_default","a","createElement","reactstrap_es","nav","direction","isOpen","caret","style","color","className","user_md_default","size","backgroundColor","header","serverInstance","auth","user","profile","data","email","onClick","logOut","loading","initialize","_","form","document","getElementById","addEventListener","executeAction","event","_ref3","asyncToGenerator","regenerator_default","mark","_callee","_ref2","action","afterEffect","wrap","_context","prev","next","preventDefault","t0","console","log","handleError","stop","this","_x","_x2","apply","arguments","finalize","_ref4","removeEventListener","_ref5","disabled","outline","text","width","props","block","concat","type","assign","src","ButtonSpinner","alt","height","id","password","handleId","value","target","handlePassword","loginAdmin","credential","UserPasswordCredential","loginWithCredential","sent","setAdminLogged","notifyError","body","marginTop","marginBottom","wrench_default","placeholder","onChange","required","action_button","fontWeight","InputDebounced","debounceDecorator","Input","page","sortDirection","initialSortDirection","undefined","sortIteratee","initialSortIteratee","selectPreviousPage","_setPage","selectNextPage","setPage","_ref2$target","dataset","numberofpages","sortBy","currentTarget","computed","numberItemsPerPage","itemsPerPage","sortedValues","_ref6","filteredCollection","iteratee","orderBy","obj","toLowerCase","numberOfPages","_ref7","Math","ceil","length","visibleValues","_ref8","slice","_ref9","collection","columns","filter","pagination","uniqueKey","md","offset","LoadingIcon","exclamation_default","hover","striped","map","column","key","name","data-sort-iteratee","cursor","caret_down_default","caret_up_default","sort_default","verticalAlign","itemRenderer","addonType","angle_left_default","data-numberofpages","angle_right_default","generateKey","random","toString","substring","allPostedExams","allUnpostedExams","activeTab","getAllPostedExams","getAllUnPostedExams","exams","mongodb","find","completed","sort","date","asArray","_callee2","_context2","acceptExam","_callee3","objectId","_context3","ObjectId","updateOne","_id","$set","approved","upsert","getLastPostedExams","_x3","declineExam","_callee4","_context4","_x4","deleteExam","examId","_callee5","_context5","deleteOne","notifySuccess","_x5","university","moment","examDate","format","creator","seen","eye_default","href","examProof","question_circle_default","generatedKey","Utils","react","check_default","placement","timelapse_default","Link","to","globe_default","hourglass_2_default","window","confirm","trash_default","tabs","fill","classnames","active","tabId","sorted_table","allPostedReports","getAllReports","reports","setAsNotCorrected","corrected","setAsCorrected","reportMessage","close_default","messages","getAllSentMessages","message","adminLogged","admin_exams","admin_reports","admin_messages","admin_authentication","onAdminLogged","resetPasswordEmailSent","resetPassword","getProviderClient","UserPasswordAuthProviderClient","factory","sendResetPasswordEmail","then","catch","err","check_circle_default","resetPasswordView","logIn","authId","signIn","push","displayResetPassword","textDecoration","reset_password_form","algerienCities","code","nom","passwordConfirmation","handleUniversityChange","Cookies","set","handlePasswordConfirmation","submit","emailPassClient","isValidPasswordConfirmation","registerWithEmail","clock_o_default","invalid","Universities","navStyle","params","URLSearchParams","location","hash","split","get","boxShadow","user_default","user_plus_default","padding","sm","authentication_form","create_account","confirmed","emailResent","url","token","tokenId","confirmUser","redirectToAuthenticate","resendEmail","userEmail","resendConfirmationEmail","fontSize","fa_check_default","envelope_default","refresh_default","newPassword","confirmResetPassword","clearAccountConfirmtion","handleNewPassword","messageSent","handleContactUsValues","defineProperty","sendMessage","insertOne","Date","now","CuteKoala","display","paper_plane_default","textAlign","logged","getPostedExams","bell_default","add","lastIndex","picture","onCloseImgModal","answers","correctAnswers","question","questionNum","A","B","C","D","E","validatedQuestion","firstRender","modalCorrectAnswers","correctAnswersRequired","alreadyValidatedQuestion","toggleCorrectAnswersPicture","addQuestion","questionData","onAddQuestion","handleQuestionValues","handleCorrectAnswer","selected","index","indexOf","splice","toConsumableArray","toggleQuestion","onDeleteLastQuestion","isLastQuestion","pencil_default","angle_down_default","includes","info_circle_default","modal_img","CorrectAnswersPicture","answer","plus_default","verified","_university","questions","exam","moduleExists","examCompleted","modalExamPicture","addExam","onHideExamView","keys","valueOf","toggleExamDatePicture","handleExamValues","handleExamDate","addQuestionView","questionKeys","lastKey","pop","deleteLastQuestion","_questions","saveExamForLater","close","verifyModuleExisting","iterator","abrupt","validInitialExamData","year","addExamStarted","lastQuestionIndex","_ref10","_ref11","datePickerProps","dateFormat","placeholderText","Modules","es","play_default","questData","question_form","exclamation_triangle_default","floppy_o_default","ExamDatePicture","collapse","pill","lightbulb_o_default","margin","ScanImg","addExamView","initialExamData","examLoading","queryString","match","_module","displayExamView","hideExamView","scan_info_card","download_default","exam_form","user_added_exams","postedExams","examData","graduation_cap_default","currentQuestion","currentQuestionNum","borderRadius","setExamMode","reportModal","reportSent","getInputRef","inputRef","oppenReportModal","setTimeout","focus","closeReportModal","sendReport","handleReportMessageBody","innerRef","space_shuttle_default","badAnsweredQuestions","selectedAnswers","answered","note","examEnd","examMode","incrementViews","views","selectAnswer","_selectedAnswers","remove","ans","nextQuestion","questionsIndexes","indexOfCurrentQuestion","String","diff","difference","isEmpty","displayAllAnswers","repassBadAnsweredQuestion","shift","questionsLength","allAnswersAreCorrect","vertical","questionStyle","report_exam","exam_with_answers","Footer","top","ContributeImg","puzzle_piece_default","ExamImg","PileStackIdeaImg","PilePassword","PileStackLampImg","PileStackImg","xs","problem_card","solution_card","idea_card","security_card","cloud_upload_default","lastPostedExams","medkit_default","bank_default","play_circle_o_default","illustration_idea_cards","published_exams","contribute_card","exam_card","getPostedexamSessions","examSessions","session","role","aria-valuemin","aria-valuemax","numberOfExistingExams","rocket_default","_initialize","getUserExamSessions","handleSessionInputs","_examSessions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","numberOfExams","Symbol","done","count","return","finish","t1","createReviewSession","user_sessions","review_sessions","collapseExams","loadingExams","toggleExams","getExamsByYearAndUniv","result","$lte","$gte","projection","minus_square_o_default","plus_square_o_default","marginLeft","exams_by_year_univ","years","y","getFullYear","generateYears","univ_by_year","book_default","overflow","overflowX","module_by_year","searchResult","handleSearchExam","_examDate","search_default","control_point_default","search_exam","exam_explorer","PandaKoalaImg","authEmail","userNotConfirmed","noNeedToAuthenticate","authLoading","navbarCollapse","server","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","db","loggedInProviderName","AnonymousCredential","handleAppQueryString","setAuthEmail","logout","limit","search","method","route","origin","pathname","replace","errorMessage","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","_handleError","StitchServiceError","getUserAccount","_x6","_callee6","_context6","_x7","toggleNavbar","Boolean","Helmet","lib","newestOnTop","rtl","pauseOnVisibilityChange","HashRouter","light","expand","AppIcon","navbar","NavLink","activeStyle","home_default","exam_menu_nav","briefcase_default","group_default","account_menu","fluid","Switch","Route","exact","path","component","HomePage","Admin","ConfirmPage","ContactUs","ContestExam","ConfirmReset","AuthOrCreate","PassExam","Exam","WhoRUs","MyReview","ExamSession","Contribuate","footer","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b6ec438.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/exam-date.a5307ef7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exam-correct-answers.f6a6305a.png\";","module.exports = __webpack_public_path__ + \"static/media/ocr-scan.5a2f8493.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contribute.a9fbf540.png\";","module.exports = __webpack_public_path__ + \"static/media/exam.ebbc4cf7.png\";","module.exports = __webpack_public_path__ + \"static/media/pile-stack-idea.cdf73937.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pile-password.6389b4d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pile-stack-lamp.82309d59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pile-stack.b64503d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/panda_koala.dd414cc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/button-spinner.44271f65.gif\";","import ActionButton from '../../../components/action-button'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport SendIcon from 'react-icons/lib/fa/space-shuttle'\nimport WarningIcon from 'react-icons/lib/fa/exclamation-triangle'\nimport CuteKoala from '../../../imgs/cute_koala.jpg'\nimport React from 'react'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nlet _inputRef\n\nconst withState = provideState({\n  initialState: ({ _module, questionNum, examDate }) => ({\n    reportModal: false,\n    reportMessage: `Module: ${_module}\\nSession: ${examDate}\\nQuestion: ${questionNum}\\n\\nErreur: `,\n    reportSent: false,\n  }),\n  effects: {\n    getInputRef: (_, inputRef) => {\n      _inputRef = inputRef\n    },\n    oppenReportModal: () => state => {\n      state.reportModal = true\n      setTimeout(() => {\n        _inputRef && _inputRef.focus()\n      }, 1000)\n    },\n    closeReportModal: () => state => ({\n      ...state,\n      reportModal: false,\n    }),\n    sendReport: effects => async (state, { examId, questionNum }) => {\n      try {\n        await state.mongodb.insertOne({\n          type: 'report',\n          examId,\n          questionNum,\n          reportMessage: state.reportMessage,\n          creator: state.authId,\n          corrected: false,\n          date: Date.now(),\n        })\n        state.reportSent = true\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    handleReportMessageBody: (_, { target: { value } }) => state => ({\n      ...state,\n      reportMessage: value,\n    }),\n  },\n})\n\nconst ReportExam = ({ state, effects, history }) => (\n  <div>\n    <span>\n      <Button size=\"xs\" color=\"light\" onClick={effects.oppenReportModal}>\n        <WarningIcon color=\"orange\" /> Une erreur ! signaler là vite !\n      </Button>\n    </span>\n    <Modal isOpen={state.reportModal} toggle={effects.oppenReportModal}>\n      <ModalHeader\n        toggle={effects.closeReportModal}\n        style={{ backgroundColor: '#e63a3a' }}\n      >\n        Signaler un problème\n      </ModalHeader>\n      <ModalBody>\n        {state.reportSent ? (\n          <div className=\"text-center\" style={{ fontSize: '20px' }}>\n            <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n            <br />\n            <div>\n              Merci, Rapport envoyé avec succés <CheckIcon color=\"green\" />\n            </div>\n            <div>Grace à vous cet examen va être corrigé</div>\n          </div>\n        ) : (\n          <Input\n            type=\"textarea\"\n            value={state.reportMessage}\n            style={{ height: '200px' }}\n            onChange={effects.handleReportMessageBody}\n            innerRef={effects.getInputRef}\n          />\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Row>\n          <Col md=\"6\" />\n          <Col md=\"6\">\n            <div className=\"float-right\">\n              <ActionButton\n                text={\n                  <span>\n                    Envoyer le rapport <SendIcon size=\"20\" />\n                  </span>\n                }\n                action={effects.sendReport}\n                width={'200px'}\n                disabled={state.reportSent}\n              />\n            </div>\n          </Col>\n        </Row>\n      </ModalFooter>\n    </Modal>\n  </div>\n)\n\nexport default withState(injectState(ReportExam))\n","import React from 'react'\nimport UserIcon from 'react-icons/lib/fa/user-md'\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nconst withState = provideState({\n  initialState: () => ({\n    dropdownOpen: false,\n  }),\n  effects: {\n    toggle: () => state => ({\n      ...state,\n      dropdownOpen: !state.dropdownOpen,\n    }),\n  },\n})\n\nconst AccountMenu = ({ effects, state, history }) => (\n  <Dropdown\n    nav\n    direction=\"down\"\n    isOpen={state.dropdownOpen}\n    toggle={effects.toggle}\n  >\n    <DropdownToggle\n      nav\n      caret\n      style={{\n        color: '#e2e3e4',\n      }}\n      className=\"hvr-icon-fade\"\n    >\n      <UserIcon size=\"20\" className=\"hvr-icon\" /> &nbsp; Profile\n    </DropdownToggle>\n    <DropdownMenu style={{ backgroundColor: '#222534' }}>\n      <DropdownItem header>\n        {state.serverInstance.auth.user.profile.data.email}\n      </DropdownItem>\n      <DropdownItem\n        onClick={effects.logOut}\n        style={{ color: '#e2e3e4' }}\n        className=\"hvr-bounce-to-right\"\n      >\n        Déconnecter\n      </DropdownItem>\n    </DropdownMenu>\n  </Dropdown>\n)\n\nexport default withState(injectState(AccountMenu))\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport ButtonSpinner from '../imgs/button-spinner.gif'\n\nconst withState = provideState({\n  initialState: () => ({\n    loading: false,\n  }),\n  effects: {\n    initialize: effects => (_, { form }) => {\n      if (form) {\n        document\n          .getElementById(form)\n          .addEventListener('submit', effects.executeAction)\n      }\n    },\n    executeAction: (effects, event) => async (\n      state,\n      { action, afterEffect }\n    ) => {\n      if (event) {\n        event.preventDefault()\n      }\n      if (action) {\n        state.loading = true\n        try {\n          await action()\n          if (afterEffect) {\n            await afterEffect()\n          }\n        } catch (error) {\n          console.log(error)\n          effects.handleError(error) // Extern\n        }\n        state.loading = false\n      }\n    },\n  },\n  finalize: effects => (_, { form }) => {\n    if (form) {\n      document\n        .getElementById(form)\n        .removeEventListener('submit', effects.executeAction)\n    }\n  },\n})\n\nconst ActionButton = ({\n  color,\n  effects,\n  disabled,\n  outline,\n  state,\n  text,\n  width,\n  form,\n  block,\n}) => {\n  const props = {\n    disabled: state.loading || disabled,\n    outline: outline === 'true' ? true : false,\n    style: { width: `${width}px` },\n  }\n\n  if (color) {\n    props.color = color\n  } else {\n    props.color = 'dark'\n  }\n\n  if (form) {\n    props.type = 'submit'\n  } else {\n    props.onClick = effects.executeAction\n  }\n\n  return (\n    <Button {...props} block>\n      {text} &nbsp;{' '}\n      {state.loading && (\n        <img src={ButtonSpinner} alt=\"button spinner\" height=\"20\" width=\"20\" />\n      )}\n    </Button>\n  )\n}\n\nexport default withState(injectState(ActionButton))\n","import React from 'react'\nimport WorkBench from 'react-icons/lib/fa/wrench'\nimport { Card, Col, Form, FormGroup, Input, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordCredential } from 'mongodb-stitch-browser-sdk'\n\nimport ActionButton from '../../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    password: '',\n  }),\n  effects: {\n    handleId: (_, { target: { value } }) => state => ({\n      ...state,\n      id: value,\n    }),\n    handlePassword: (_, { target: { value } }) => state => ({\n      ...state,\n      password: value,\n    }),\n    loginAdmin: (effects, event) => async (state, props) => {\n      if (event) {\n        event.preventDefault()\n      }\n      if (state.id === 'admin@admin.dz') {\n        try {\n          const credential = new UserPasswordCredential(\n            state.id,\n            state.password\n          )\n          const authId = await state.serverInstance.auth.loginWithCredential(\n            credential\n          )\n          effects.setAdminLogged()\n        } catch (error) {\n          effects.handleError(error)\n        }\n      } else {\n        effects.notifyError('Mot de passe incorrect !')\n      }\n    },\n  },\n})\n\nconst AdminAuth = ({ effects, state }) => (\n  <Card body style={{ marginTop: '50px' }}>\n    <h3 className=\"text-center\" style={{ marginBottom: '30px' }}>\n      Administration <WorkBench />\n    </h3>\n    <Row>\n      <Col>\n        <Form id=\"login-form\">\n          <FormGroup>\n            <Input\n              type=\"email\"\n              placeholder=\"User !\"\n              value={state.id}\n              onChange={effects.handleId}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"password\"\n              placeholder=\"Mot de passe !\"\n              value={state.password}\n              onChange={effects.handlePassword}\n              required\n            />\n          </FormGroup>\n          <ActionButton\n            text={<span style={{ fontWeight: 'bold' }}>Connexion</span>}\n            color=\"info\"\n            action={effects.loginAdmin}\n            form=\"login-form\"\n          />\n          <br />\n        </Form>\n      </Col>\n    </Row>\n  </Card>\n)\n\nexport default withState(injectState(AdminAuth))\n","import AngleLeft from 'react-icons/lib/fa/angle-left'\nimport AngleRight from 'react-icons/lib/fa/angle-right'\nimport CaretDown from 'react-icons/lib/fa/caret-down'\nimport CaretUp from 'react-icons/lib/fa/caret-up'\nimport debounceDecorator from 'debounce-input-decorator'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport React from 'react'\nimport SortIcon from 'react-icons/lib/fa/sort'\nimport { iteratee, map, orderBy } from 'lodash'\nimport { injectState, provideState } from 'reaclette'\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Table,\n} from 'reactstrap'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\n\nconst DEFAULT_ITEMS_PER_PAGE = 10\n\nconst InputDebounced = debounceDecorator(250)(Input)\n\nconst sortIconDirection = sortDirection =>\n  sortDirection === 'desc' ? <CaretDown /> : <CaretUp />\n\nconst createSortByEffect = (sortIteratee, effects) => state => {\n  const sortDirection =\n    state.sortIteratee !== sortIteratee\n      ? 'desc'\n      : state.sortDirection === 'asc'\n      ? 'desc'\n      : 'asc'\n  return {\n    ...state,\n    sortDirection,\n    sortIteratee,\n  }\n}\n\nconst withState = provideState({\n  initialState: ({ initialSortDirection, initialSortIteratee }) => ({\n    page: 1,\n    sortDirection: initialSortDirection || undefined,\n    sortIteratee: initialSortIteratee || undefined,\n  }),\n  effects: {\n    selectPreviousPage: effects => state => {\n      effects._setPage(state.page - 1)\n    },\n    selectNextPage: effects => state => {\n      effects._setPage(state.page + 1)\n    },\n    setPage: (effects, { target: { value, dataset } }) => {\n      value = +value\n      if (value > 0 && value <= dataset.numberofpages) {\n        effects._setPage(value)\n      }\n    },\n    sortBy: (effects, { currentTarget: { dataset } }) =>\n      createSortByEffect(dataset.sortIteratee, effects),\n    _setPage: (_, page) => state => {\n      return { ...state, page }\n    },\n  },\n\n  computed: {\n    numberItemsPerPage: (_, { itemsPerPage }) =>\n      itemsPerPage || DEFAULT_ITEMS_PER_PAGE,\n    sortedValues: ({ sortDirection, sortIteratee }, { filteredCollection }) => {\n      if (sortIteratee === undefined) {\n        return filteredCollection\n      }\n\n      sortIteratee = iteratee(sortIteratee)\n      return orderBy(\n        filteredCollection,\n        obj => {\n          const value = sortIteratee(obj)\n          return typeof value === 'string' ? value.toLowerCase() : value\n        },\n        sortDirection\n      )\n    },\n    numberOfPages: ({ numberItemsPerPage, sortedValues }) =>\n      Math.ceil(sortedValues.length / numberItemsPerPage) || 1,\n    visibleValues: ({ numberItemsPerPage, page, sortedValues }) =>\n      sortedValues.slice(\n        (page - 1) * numberItemsPerPage,\n        page * numberItemsPerPage\n      ),\n  },\n})\n\nconst SortedTable = ({\n  collection,\n  columns,\n  data,\n  effects,\n  filter,\n  filteredCollection,\n  pagination,\n  state,\n  uniqueKey,\n}) => (\n  <div>\n    {collection === undefined ? (\n      <Row className=\"my-3\">\n        <Col md={{ size: 2, offset: 5 }}>\n          <br />\n          <div className=\"text-center\">\n            <img src={LoadingIcon} width=\"50\" height=\"50\" alt=\"Loading...\" />\n          </div>\n          <p className=\"text-muted text-center\">\n            Examens postés en chargement ...\n          </p>\n        </Col>\n      </Row>\n    ) : filteredCollection.length === 0 ? (\n      <h3 className=\"text-center text-muted\">\n        <br />\n        Pas d'examens ajoutés :( &nbsp;\n        <ExclamationIcon size=\"30\" />\n        <br />\n      </h3>\n    ) : (\n      <div>\n        <Row>\n          <Col>\n            <Table hover striped size=\"sm\">\n              <thead>\n                <tr>\n                  {map(columns, column =>\n                    column.sortIteratee === undefined ? (\n                      <th key={column.name}>{column.name}</th>\n                    ) : (\n                      <th\n                        data-sort-iteratee={column.sortIteratee}\n                        key={column.name}\n                        onClick={effects.sortBy}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {column.name} &nbsp;\n                        {state.sortIteratee === column.sortIteratee ? (\n                          sortIconDirection(state.sortDirection)\n                        ) : (\n                          <SortIcon />\n                        )}\n                      </th>\n                    )\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {map(state.visibleValues, value => (\n                  <tr key={value[uniqueKey]}>\n                    {map(columns, column => (\n                      <td key={column.name} style={{ verticalAlign: 'center' }}>\n                        {column.itemRenderer(value, state, effects)}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n        {pagination && (\n          <Row>\n            <Col md={{ size: 6, offset: 3 }}>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <Button\n                    disabled={state.page === 1}\n                    onClick={effects.selectPreviousPage}\n                  >\n                    <AngleLeft /> Previous\n                  </Button>\n                </InputGroupAddon>\n                <InputDebounced\n                  data-numberofpages={state.numberOfPages}\n                  onChange={effects.setPage}\n                  type=\"number\"\n                  value={state.page}\n                />\n                <InputGroupAddon addonType=\"append\">/</InputGroupAddon>\n                <Input disabled value={state.numberOfPages} />\n                <InputGroupAddon addonType=\"append\">\n                  <Button\n                    disabled={state.page === state.numberOfPages}\n                    onClick={effects.selectNextPage}\n                  >\n                    Next <AngleRight />\n                  </Button>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </Row>\n        )}\n      </div>\n    )}\n  </div>\n)\n\nexport default withState(injectState(SortedTable))\n","export const get = (accessor, arg) => {\n  try {\n    return accessor(arg)\n  } catch (error) {\n    if (!(error instanceof TypeError)) {\n      // avoid hiding other errors\n      throw error\n    }\n  }\n}\n\nexport const generateKey = () =>\n  Math.random()\n    .toString(36)\n    .substring(7)\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport IncompletedIcon from 'react-icons/lib/md/timelapse'\nimport CompletedIcon from 'react-icons/lib/md/check'\nimport PublishedIcon from 'react-icons/lib/fa/globe'\nimport ProofIcon from 'react-icons/lib/fa/question-circle'\nimport TrashIcon from 'react-icons/lib/fa/trash'\nimport VerificationIcon from 'react-icons/lib/fa/hourglass-2'\nimport React, { Fragment } from 'react'\nimport {\n  Card,\n  Badge,\n  Button,\n  UncontrolledTooltip,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../../components/sorted-table'\nimport * as Utils from '../../utils'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\nimport classnames from 'classnames'\n\nconst withState = provideState({\n  initialState: () => ({\n    allPostedExams: undefined,\n    allUnpostedExams: undefined,\n    activeTab: 'posted', // posted || unposted\n  }),\n  effects: {\n    initialize: effects => {\n      effects.getAllPostedExams()\n      effects.getAllUnPostedExams()\n    },\n    getAllPostedExams: effects => async state => {\n      try {\n        state.allPostedExams = undefined\n        const exams = await state.mongodb\n          .find({ completed: true }, { sort: { date: -1 } })\n          .asArray()\n        state.allPostedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n    getAllUnPostedExams: effects => async state => {\n      try {\n        state.allUnpostedExams = undefined\n        const exams = await state.mongodb\n          .find({ completed: false }, { sort: { date: -1 } })\n          .asArray()\n        state.allUnpostedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    acceptExam: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              approved: true,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllPostedExams()\n        effects.getLastPostedExams()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    declineExam: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              approved: false,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllPostedExams()\n        effects.getLastPostedExams()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    deleteExam: (effects, examId) => async state => {\n      try {\n        const objectId = new ObjectId(examId)\n        await state.mongodb.deleteOne({ _id: objectId })\n        effects.getAllPostedExams()\n        effects.getAllUnPostedExams()\n        effects.notifySuccess('Examen bien supprimé !')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Module',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"info\">{value.module}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'module',\n  },\n  {\n    name: 'Université',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.university}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'university',\n  },\n  {\n    name: 'Session',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {moment(value.examDate).format('DD-MM-YYYY')}\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'examDate',\n  },\n  {\n    name: 'Date de création',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{moment(value.date).format('DD-MM-YYYY')}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'date',\n  },\n  {\n    name: 'Auteur',\n    itemRenderer: (value, state, effects) => (\n      <Badge color=\"light\">{value.creator}</Badge>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Vue',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {value.seen || 0} &nbsp; <EyeIcon />\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'seen',\n  },\n  {\n    name: 'Preuve',\n    itemRenderer: (value, state, effects) => (\n      <a href={value.examProof} target=\"_blank\">\n        <ProofIcon size=\"20\" />\n      </a>\n    ),\n    sortIteratee: 'seen',\n  },\n  {\n    name: 'Etât',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.completed ? (\n        <Fragment>\n          <CompletedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`complete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`complete-icon-${generatedKey}`}\n          >\n            Complet\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <IncompletedIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`incomplete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`incomplete-icon-${generatedKey}`}\n          >\n            Incomplet\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Action',\n    itemRenderer: (value, state, effects) =>\n      value.completed ? (\n        <Link\n          className=\"btn btn-outline-dark\"\n          to={`/contribuer/${value._id.toString()}`}\n          target=\"_blank\"\n        >\n          Modifier\n        </Link>\n      ) : (\n        <Link\n          className=\"btn btn-outline-info\"\n          target=\"_blank\"\n          to={`/contribuer/${value._id.toString()}`}\n        >\n          Compléter\n        </Link>\n      ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Published',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.approved ? (\n        <Fragment>\n          <PublishedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`published-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`published-icon-${generatedKey}`}\n          >\n            Votre examen est en ligne\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <VerificationIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`on-verification-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`on-verification-icon-${generatedKey}`}\n          >\n            En vérification\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n  {\n    name: '',\n    itemRenderer: (value, state, effects) => (\n      <Button\n        color=\"danger\"\n        outline\n        onClick={() => {\n          const response = window.confirm(\n            'Etes vous sûr de vouloir abondonner cet examen ?'\n          )\n          if (response) {\n            effects.deleteExam(value._id.toString())\n          }\n        }}\n      >\n        <TrashIcon size=\"20\" />\n      </Button>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: '',\n    itemRenderer: (value, state, effects) =>\n      value.approved ? (\n        <Button\n          outline\n          color=\"warning\"\n          onClick={() => effects.declineExam(value._id)}\n        >\n          Cacher\n        </Button>\n      ) : (\n        <Button\n          outline\n          color=\"success\"\n          onClick={() => effects.acceptExam(value._id)}\n        >\n          Publier\n        </Button>\n      ),\n    sortIteratee: undefined,\n  },\n]\n\nconst AdminExams = ({ effects, state, history }) => (\n  <Card body>\n    <Nav tabs fill>\n      <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n        <NavLink\n          className={classnames({ active: state.activeTab === 'posted' })}\n          onClick={() => {\n            effects.toggle('posted')\n          }}\n        >\n          Examen complets\n        </NavLink>\n      </NavItem>\n      <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n        <NavLink\n          className={classnames({ active: state.activeTab === 'unposted' })}\n          onClick={() => {\n            effects.toggle('unposted')\n          }}\n        >\n          Examen incomplets\n        </NavLink>\n      </NavItem>\n    </Nav>\n    <TabContent activeTab={state.activeTab}>\n      <TabPane tabId=\"posted\">\n        <SortedTable\n          columns={columns}\n          collection={state.allPostedExams}\n          filteredCollection={state.allPostedExams}\n          initialSortIteratee={'date'}\n          initialSortDirection={'desc'}\n          pagination={state.allPostedExams && state.allPostedExams.length > 10}\n          uniqueKey={'_id'}\n        />\n      </TabPane>\n      <TabPane tabId=\"unposted\">\n        <SortedTable\n          columns={columns}\n          collection={state.allUnpostedExams}\n          filteredCollection={state.allUnpostedExams}\n          initialSortIteratee={'date'}\n          initialSortDirection={'desc'}\n          pagination={\n            state.allUnpostedExams && state.allUnpostedExams.length > 10\n          }\n          uniqueKey={'_id'}\n        />\n      </TabPane>\n    </TabContent>\n  </Card>\n)\n\nexport default withState(injectState(AdminExams))\n","import CompletedIcon from 'react-icons/lib/md/check'\nimport CloseIcon from 'react-icons/lib/fa/close'\nimport React from 'react'\nimport { Card, Badge, Button } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport SortedTable from '../../components/sorted-table'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  initialState: () => ({\n    allPostedReports: undefined,\n  }),\n  effects: {\n    initialize: effects => {\n      effects.getAllReports()\n    },\n    getAllReports: effects => async state => {\n      try {\n        state.allPostedReports = undefined\n        const reports = await state.mongodb.find({ type: 'report' }).asArray()\n        state.allPostedReports = reports\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    setAsNotCorrected: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              corrected: false,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllReports()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    setAsCorrected: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              corrected: true,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllReports()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Auteur',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.creator}</Badge>\n      </h5>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Message',\n    itemRenderer: (value, state, effects) => (\n      <Card body>{value.reportMessage}</Card>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Action',\n    itemRenderer: (value, state, effects) => (\n      <Link\n        className=\"btn btn-outline-dark\"\n        target=\"_blank\"\n        to={`/contribuer/${value.examId}`}\n      >\n        Modifier\n      </Link>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Corrigé',\n    itemRenderer: (value, state, effects) =>\n      value.corrected ? (\n        <CompletedIcon size=\"25\" color=\"green\" />\n      ) : (\n        <CloseIcon size=\"25\" color=\"red\" />\n      ),\n    sortIteratee: undefined,\n  },\n  {\n    name: '',\n    itemRenderer: (value, state, effects) =>\n      value.corrected ? (\n        <Button\n          outline\n          color=\"dark\"\n          onClick={() => effects.setAsNotCorrected(value._id)}\n        >\n          Marquer comme pas corrigé\n        </Button>\n      ) : (\n        <Button\n          outline\n          color=\"success\"\n          onClick={() => effects.setAsCorrected(value._id)}\n        >\n          Marquer comme corrigé\n        </Button>\n      ),\n    sortIteratee: undefined,\n  },\n]\n\nconst AdminReports = ({ effects, state, history }) => (\n  <Card body>\n    <SortedTable\n      columns={columns}\n      collection={state.allPostedReports}\n      filteredCollection={state.allPostedReports}\n      initialSortIteratee={'date'}\n      initialSortDirection={'desc'}\n      pagination={state.allPostedReports && state.allPostedReports.length > 10}\n      uniqueKey={'_id'}\n    />\n  </Card>\n)\n\nexport default withState(injectState(AdminReports))\n","import React from 'react'\nimport { Card, Badge } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../../components/sorted-table'\n\nconst withState = provideState({\n  initialState: () => ({\n    messages: undefined,\n  }),\n  effects: {\n    initialize: effects => {\n      effects.getAllSentMessages()\n    },\n    getAllSentMessages: effects => async state => {\n      try {\n        state.messages = undefined\n        const messages = await state.mongodb.find({ type: 'message' }).asArray()\n        state.messages = messages\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Auteur',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.creator && value.creator}</Badge>\n      </h5>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Message',\n    itemRenderer: (value, state, effects) => <Card body>{value.message}</Card>,\n    sortIteratee: 'message',\n  },\n  {\n    name: 'Email',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"info\">{value.email}</Badge>\n      </h5>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Date',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{moment(value.date).format('DD-MM-YYYY')}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'date',\n  },\n]\n\nconst AdminReports = ({ effects, state, history }) => (\n  <Card body>\n    <SortedTable\n      columns={columns}\n      collection={state.messages}\n      filteredCollection={state.messages}\n      initialSortIteratee={'date'}\n      initialSortDirection={'desc'}\n      pagination={state.messages && state.messages.length > 10}\n      uniqueKey={'_id'}\n    />\n  </Card>\n)\n\nexport default withState(injectState(AdminReports))\n","import React, { Fragment } from 'react'\nimport {\n  Nav,\n  TabContent,\n  TabPane,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport AdminAuth from './admin-authentication'\nimport AdminExams from './admin-exams'\nimport Reports from './admin-reports'\nimport Messages from './admin-messages'\nimport classnames from 'classnames'\n\nconst withState = provideState({\n  initialState: () => ({\n    activeTab: \"Approbation d'examns\", // Signalisation d'examens || Messages utilisateurs\n  }),\n  effects: {\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n  },\n})\n\nconst Admin = ({ effects, state, history }) => (\n  <Row>\n    <Col>\n      {state.adminLogged && (\n        <Fragment>\n          <Nav tabs fill>\n            <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n              <NavLink\n                className={classnames({\n                  active: state.activeTab === \"Approbation d'examns\",\n                })}\n                onClick={() => {\n                  effects.toggle(\"Approbation d'examns\")\n                }}\n              >\n                Approbation d'examns\n              </NavLink>\n            </NavItem>\n            <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n              <NavLink\n                className={classnames({\n                  active: state.activeTab === \"Signalisation d'examens\",\n                })}\n                onClick={() => {\n                  effects.toggle(\"Signalisation d'examens\")\n                }}\n              >\n                Signalisation d'examens\n              </NavLink>\n            </NavItem>\n            <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n              <NavLink\n                className={classnames({\n                  active: state.activeTab === 'Messages utilisateurs',\n                })}\n                onClick={() => {\n                  effects.toggle('Messages utilisateurs')\n                }}\n              >\n                Messages utilisateurs\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={state.activeTab}>\n            <TabPane tabId=\"Approbation d'examns\">\n              <AdminExams history={history} />\n            </TabPane>\n            <TabPane tabId=\"Signalisation d'examens\">\n              <Reports history={history} />\n            </TabPane>\n            <TabPane tabId=\"Messages utilisateurs\">\n              <Messages history={history} />\n            </TabPane>\n          </TabContent>\n        </Fragment>\n      )}\n\n      {!state.adminLogged && (\n        <Row>\n          <Col md={{ size: 4, offset: 4 }}>\n            <AdminAuth\n              onAdminLogged={effects.setAdminLogged}\n              history={history}\n            />\n          </Col>\n        </Row>\n      )}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(Admin))\n","import React from 'react'\nimport CheckCircleIcon from 'react-icons/lib/fa/check-circle'\nimport { Col, Form, FormGroup, Input, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    resetPasswordEmailSent: false,\n    loading: false,\n  }),\n  effects: {\n    handleId: (_, { target: { value } }) => state => ({\n      ...state,\n      id: value,\n    }),\n    resetPassword: effects => state => {\n      const emailPassClient = state.serverInstance.auth.getProviderClient(\n        UserPasswordAuthProviderClient.factory\n      )\n      // state.loading = true\n      emailPassClient\n        .sendResetPasswordEmail(state.id)\n        .then(() => {\n          // state.loading = false\n          state.resetPasswordEmailSent = true\n        })\n        .catch(err => {\n          effects.handleError(err)\n        })\n    },\n  },\n})\n\nconst ResetPassword = ({ effects, state }) => (\n  <Row>\n    <Col>\n      {state.loading ? (\n        <Col md={{ size: 2, offset: 5 }}>\n          <img src={LoadingIcon} alt=\"Loading...\" height=\"100\" width=\"100\" />\n        </Col>\n      ) : state.resetPasswordEmailSent ? (\n        <div className=\"text-center\">\n          <CheckCircleIcon\n            color=\"green\"\n            size=\"35\"\n            style={{ marginBottom: '5px' }}\n          />\n          <p className=\"text-center\">\n            Un email de rénitialisation de mot de passe est envoyé à votre\n            adresse e-mail\n          </p>\n        </div>\n      ) : (\n        <Form id=\"reset-form\">\n          <FormGroup>\n            <Input\n              type=\"email\"\n              placeholder=\"Entrez votre email !\"\n              value={state.id}\n              onChange={effects.handleId}\n              required\n            />\n          </FormGroup>\n          <ActionButton\n            text={<span style={{ fontWeight: 'bold' }}>Reset password</span>}\n            color=\"success\"\n            action={effects.resetPassword}\n            form=\"reset-form\"\n          />\n        </Form>\n      )}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(ResetPassword))\n","import React from 'react'\nimport { Col, Form, FormGroup, Input, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordCredential } from 'mongodb-stitch-browser-sdk'\n\nimport ResetPasswordForm from '../reset-password-form'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    password: '',\n    resetPasswordView: false,\n  }),\n  effects: {\n    handleId: (_, { target: { value } }) => state => ({\n      ...state,\n      id: value,\n    }),\n    handlePassword: (_, { target: { value } }) => state => ({\n      ...state,\n      password: value,\n    }),\n    logIn: (effects, event) => async (state, props) => {\n      if (event) {\n        event.preventDefault()\n      }\n\n      try {\n        const credential = new UserPasswordCredential(state.id, state.password)\n        const authId = await state.serverInstance.auth.loginWithCredential(\n          credential\n        )\n        await effects.signIn(authId.id)\n        props.history.push('/contribuer')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    displayResetPassword: () => state => ({\n      ...state,\n      resetPasswordView: true,\n    }),\n  },\n})\n\nconst AuthentificationForm = ({ effects, state }) => (\n  <Row>\n    <Col>\n      <Form id=\"login-form\">\n        <FormGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Email !\"\n            value={state.id}\n            onChange={effects.handleId}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Mot de passe !\"\n            value={state.password}\n            onChange={effects.handlePassword}\n            required\n          />\n        </FormGroup>\n        <ActionButton\n          text={<span style={{ fontWeight: 'bold' }}>Connexion</span>}\n          color=\"info\"\n          action={effects.logIn}\n          form=\"login-form\"\n        />\n        <br />\n        <p\n          className=\"text-center text-muted\"\n          style={{\n            textDecoration: 'underline',\n            cursor: 'pointer',\n          }}\n          onClick={effects.displayResetPassword}\n        >\n          Mot de passe oublié !\n        </p>\n      </Form>\n      {state.resetPasswordView && <ResetPasswordForm />}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(AuthentificationForm))\n","const algerienCities = [\n  // { id: '1', code: '1', nom: 'Adrar' },\n  // { id: '2', code: '2', nom: 'Chlef' },\n  // { id: '3', code: '3', nom: 'Laghouat' },\n  // { id: '4', code: '4', nom: 'Oum El Bouaghi' },\n  // { id: '5', code: '5', nom: 'Batna' },\n  // { id: '6', code: '6', nom: 'B\\u00e9ja\\u00efa' },\n  // { id: '7', code: '7', nom: 'Biskra' },\n  // { id: '8', code: '8', nom: 'B\\u00e9char' },\n  // { id: '9', code: '9', nom: 'Blida' },\n  // { id: '10', code: '10', nom: 'Bouira' },\n  // { id: '11', code: '11', nom: 'Tamanrasset' },\n  // { id: '12', code: '12', nom: 'T\\u00e9bessa' },\n  // { id: '13', code: '13', nom: 'Tlemcen' },\n  // { id: '14', code: '14', nom: 'Tiaret' },\n  // { id: '15', code: '15', nom: 'Tizi Ouzou' },\n  // { id: '16', code: '16', nom: 'Alger' },\n  // { id: '17', code: '17', nom: 'Djelfa' },\n  // { id: '18', code: '18', nom: 'Jijel' },\n  // { id: '19', code: '19', nom: 'S\\u00e9tif' },\n  // { id: '20', code: '20', nom: 'Sa\\u00efda' },\n  // { id: '21', code: '21', nom: 'Skikda' },\n  // { id: '22', code: '22', nom: 'Sidi Bel Abb\\u00e8s' },\n  { id: '23', code: '23', nom: 'Annaba' },\n  // { id: '24', code: '24', nom: 'Guelma' },\n  // { id: '25', code: '25', nom: 'Constantine' },\n  // { id: '26', code: '26', nom: 'M\\u00e9d\\u00e9a' },\n  // { id: '27', code: '27', nom: 'Mostaganem' },\n  // { id: '28', code: '28', nom: \"M'Sila\" },\n  // { id: '29', code: '29', nom: 'Mascara' },\n  // { id: '30', code: '30', nom: 'Ouargla' },\n  // { id: '31', code: '31', nom: 'Oran' },\n  // { id: '32', code: '32', nom: 'El Bayadh' },\n  // { id: '33', code: '33', nom: 'Illizi' },\n  // { id: '34', code: '34', nom: 'Bordj Bou Arreridj' },\n  // { id: '35', code: '35', nom: 'Boumerd\\u00e8s' },\n  // { id: '36', code: '36', nom: 'El Tarf' },\n  // { id: '37', code: '37', nom: 'Tindouf' },\n  // { id: '38', code: '38', nom: 'Tissemsilt' },\n  // { id: '39', code: '39', nom: 'El Oued' },\n  // { id: '40', code: '40', nom: 'Khenchela' },\n  // { id: '41', code: '41', nom: 'Souk Ahras' },\n  // { id: '42', code: '42', nom: 'Tipaza' },\n  // { id: '43', code: '43', nom: 'Mila' },\n  // { id: '44', code: '44', nom: 'A\\u00efn Defla' },\n  // { id: '45', code: '45', nom: 'Na\\u00e2ma' },\n  // { id: '46', code: '46', nom: 'A\\u00efn T\\u00e9mouchent' },\n  // { id: '47', code: '47', nom: 'Gharda\\u00efa' },\n  // { id: '48', code: '48', nom: 'Relizane' },\n]\n\nexport default algerienCities\n","import Cookies from 'js-cookie'\nimport React from 'react'\nimport { Col, Form, FormFeedback, FormGroup, Input, Row } from 'reactstrap'\nimport { map } from 'lodash'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\n// import * as Api from '../../api'\nimport Universities from '../data/cities'\nimport ActionButton from '../components/action-button'\nimport CockIcon from 'react-icons/lib/fa/clock-o'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    password: '',\n    passwordConfirmation: '',\n    university: '',\n  }),\n  effects: {\n    handleUniversityChange: (_, { target: { value } }) => state => {\n      Cookies.set('university', value)\n      return {\n        ...state,\n        university: value,\n      }\n    },\n    handleId: (_, { target: { value } }) => (state, { history }) => {\n      return {\n        ...state,\n        id: value,\n      }\n    },\n    handlePassword: (_, { target: { value } }) => state => ({\n      ...state,\n      password: value,\n    }),\n    handlePasswordConfirmation: (_, { target: { value } }) => state => ({\n      ...state,\n      passwordConfirmation: value,\n    }),\n    submit: (effects, event) => async (state, { history }) => {\n      if (event) {\n        event.preventDefault()\n      }\n\n      if (state.isValidPasswordConfirmation) {\n        const emailPassClient = state.serverInstance.auth.getProviderClient(\n          UserPasswordAuthProviderClient.factory\n        )\n\n        try {\n          await emailPassClient.registerWithEmail(state.id, state.password)\n          Cookies.set('authEmail', state.id)\n          history.push('/confirm')\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n    },\n  },\n  computed: {\n    isValidPasswordConfirmation: ({ passwordConfirmation, password }) =>\n      password === passwordConfirmation,\n  },\n})\n\nconst CreateAccount = ({ effects, state }) => (\n  <Row>\n    <Col>\n      <div className=\"text-center text-muted\" style={{ marginBottom: '10px' }}>\n        Créer un compte en 2 secondes <CockIcon />\n      </div>\n      <Form id=\"creation-form\">\n        <FormGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Votre email !\"\n            value={state.id}\n            onChange={effects.handleId}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Mot de passe !\"\n            value={state.password}\n            onChange={effects.handlePassword}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Encore le même mot de passe !\"\n            value={state.passwordConfirmation}\n            onChange={effects.handlePasswordConfirmation}\n            required\n            invalid={!state.isValidPasswordConfirmation}\n          />\n          <FormFeedback>\n            Les mots de passes ne sont pas identiques !\n          </FormFeedback>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            name=\"university\"\n            onChange={effects.handleUniversityChange}\n            required\n            type=\"select\"\n            value={state.university}\n          >\n            <option value=\"\">Faculté *</option>\n            {Universities &&\n              map(Universities, university => (\n                <option key={university.code} value={university.nom}>\n                  {`${university.code} - ${university.nom}`}\n                </option>\n              ))}\n          </Input>\n        </FormGroup>\n        <ActionButton\n          text={<span style={{ fontWeight: 'bold' }}>Inscription</span>}\n          color=\"info\"\n          action={effects.submit}\n          form=\"creation-form\"\n        />\n      </Form>\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(CreateAccount))\n","import PersonAdd from 'react-icons/lib/fa/user-plus'\nimport Person from 'react-icons/lib/fa/user'\nimport React from 'react'\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Card,\n  Col,\n} from 'reactstrap'\nimport classnames from 'classnames'\nimport { injectState, provideState } from 'reaclette'\n\nimport AuthenticationForm from '../authentication-form'\nimport CreateAccount from '../create-account'\n\nconst navStyle = {\n  cursor: 'pointer',\n}\n\nconst withState = provideState({\n  initialState: () => ({\n    activeTab: 'authentication',\n  }),\n  effects: {\n    initialize: () => state => {\n      const params = new URLSearchParams(window.location.hash.split('?')[1])\n      state.activeTab = params.get('toggle') || 'authentication'\n    },\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n  },\n})\n\nconst AuthOrCreate = ({ effects, state, history }) => (\n  <Row>\n    <Col md={{ size: 4, offset: 4 }} style={{ marginTop: '50px' }}>\n      <Card className=\"h-100\" style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}>\n        <Nav tabs fill>\n          <NavItem style={navStyle}>\n            <NavLink\n              className={classnames({\n                active: state.activeTab === 'authentication',\n              })}\n              onClick={() => {\n                effects.toggle('authentication')\n              }}\n              style={\n                state.activeTab === 'authentication'\n                  ? { color: '#0e627f', fontWeight: 'bold' }\n                  : {}\n              }\n            >\n              <Person /> &nbsp;Authentification\n            </NavLink>\n          </NavItem>\n          <NavItem style={navStyle}>\n            <NavLink\n              className={classnames({\n                active: state.activeTab === 'createAccount',\n              })}\n              onClick={() => {\n                effects.toggle('createAccount')\n              }}\n              style={\n                state.activeTab === 'createAccount'\n                  ? { color: '#0e627f', fontWeight: 'bold' }\n                  : {}\n              }\n            >\n              <PersonAdd /> &nbsp;Créer un compte\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={state.activeTab}>\n          <TabPane tabId=\"authentication\" style={{ padding: '20px' }}>\n            <Row>\n              <Col sm=\"12\">\n                <AuthenticationForm history={history} />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"createAccount\" style={{ padding: '20px' }}>\n            <Row>\n              <Col sm=\"12\">\n                <CreateAccount history={history} />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </Card>\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(AuthOrCreate))\n","import Cookies from 'js-cookie'\nimport EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport ResendIcon from 'react-icons/lib/fa/refresh'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport React from 'react'\nimport { Alert, Button, Card, CardBody, CardTitle, Col, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    confirmed: false,\n    loading: false,\n    emailResent: false,\n  }),\n  effects: {\n    initialize: effects => async state => {\n      const url = window.location.hash.split('?')[1]\n      const params = new URLSearchParams(url)\n      const token = params.get('token')\n      const tokenId = params.get('tokenId')\n      if (token && tokenId) {\n        state.loading = true\n        const emailPassClient = state.serverInstance.auth.getProviderClient(\n          UserPasswordAuthProviderClient.factory\n        )\n        try {\n          await emailPassClient.confirmUser(token, tokenId)\n          state.confirmed = true\n        } catch (err) {\n          effects.handleError(err)\n        }\n        state.loading = false\n      }\n    },\n    redirectToAuthenticate: () => (_, { history }) => {\n      history.push('/authenticate')\n    },\n    resendEmail: effects => async state => {\n      const emailPassClient = state.serverInstance.auth.getProviderClient(\n        UserPasswordAuthProviderClient.factory\n      )\n      const userEmail = Cookies.get('authEmail')\n      if (userEmail) {\n        try {\n          console.log('Mail resent to ', userEmail)\n          await emailPassClient.resendConfirmationEmail(userEmail)\n          state.emailResent = true\n        } catch (err) {\n          effects.handleError(err)\n        }\n      }\n    },\n  },\n})\n\nconst ConfirmPage = ({ effects, state }) => {\n  return state.loading ? (\n    <Col md={{ size: 2, offset: 5 }}>\n      <img src={LoadingIcon} alt=\"Loading...\" height=\"100\" width=\"100\" />\n    </Col>\n  ) : state.confirmed ? (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Confirmation de l'inscription\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\" style={{ fontSize: '18px' }}>\n          <CheckIcon color=\"green\" /> &nbsp; Votre inscription est confrimé avec\n          succés, veuillez vous identifier pour activer votre compte\n        </p>\n        <div className=\"text-center\">\n          <Button color=\"warning\" onClick={effects.redirectToAuthenticate}>\n            S'authentifier\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Confirmation de l'inscription\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\" style={{ fontSize: '18px' }}>\n          Vite! vite! Consultez votre email pour confirmer votre inscription{' '}\n          <EnvelopeIcon />\n        </p>\n        <Row>\n          <Col md={{ size: 4, offset: 4 }}>\n            <ActionButton\n              text={\n                <span>\n                  Renvoyer l'email de confirmation <ResendIcon />\n                </span>\n              }\n              action={effects.resendEmail}\n            />\n            <br />\n            {state.emailResent && (\n              <Alert color=\"success\" className=\"text-center\">\n                Email renvoyer avec succés\n              </Alert>\n            )}\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default withState(injectState(ConfirmPage))\n","import ResendIcon from 'react-icons/lib/fa/refresh'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport React from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Row,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    confirmed: false,\n    loading: false,\n    newPassword: '',\n  }),\n  effects: {\n    confirmResetPassword: effects => async state => {\n      const url = window.location.hash.split('?')[1]\n      const params = new URLSearchParams(url)\n      const token = params.get('token')\n      const tokenId = params.get('tokenId')\n      if (token && tokenId) {\n        state.loading = true\n        const emailPassClient = state.serverInstance.auth.getProviderClient(\n          UserPasswordAuthProviderClient.factory\n        )\n        try {\n          await emailPassClient.resetPassword(token, tokenId, state.newPassword)\n          state.confirmed = true\n          effects.clearAccountConfirmtion()\n        } catch (err) {\n          effects.handleError(err)\n        }\n        state.loading = false\n      }\n    },\n    handleNewPassword: (_, { target: { value } }) => state => ({\n      ...state,\n      newPassword: value,\n    }),\n    redirectToAuthenticate: () => (_, { history }) => {\n      history.push('/authenticate')\n    },\n  },\n})\n\nconst ConfirmReset = ({ effects, state }) => {\n  return state.loading ? (\n    <Col md={{ size: 2, offset: 5 }}>\n      <img src={LoadingIcon} alt=\"Loading...\" height=\"100\" width=\"100\" />\n    </Col>\n  ) : state.confirmed ? (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Confirmation de l'inscription\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\">\n          <CheckIcon color=\"green\" /> &nbsp; Votre mot de passe a été bien\n          réinitialisé\n        </p>\n        <div className=\"text-center\">\n          <Button color=\"light\" onClick={effects.redirectToAuthenticate}>\n            S'authentifier <ResendIcon />\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Réinitialisation du mot de passe\n      </CardTitle>\n      <CardBody>\n        <Row>\n          <Col md={{ size: 4, offset: 4 }}>\n            <Form id=\"confirm-reset-password\">\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Entrez votre nouveau mot de passe!\"\n                  value={state.newPassword}\n                  onChange={effects.handleNewPassword}\n                  required\n                />\n              </FormGroup>\n              <ActionButton\n                text={\n                  <span style={{ fontWeight: 'bold' }}>Reset password</span>\n                }\n                color=\"success\"\n                form=\"confirm-reset-password\"\n                action={effects.confirmResetPassword}\n              />\n            </Form>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default withState(injectState(ConfirmReset))\n","import EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport PlaneIcon from 'react-icons/lib/fa/paper-plane'\nimport React from 'react'\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport ActionButton from '../components/action-button'\nimport CuteKoala from '../imgs/cute_koala.jpg'\n\nconst withState = provideState({\n  initialState: () => ({\n    name: '',\n    email: '',\n    message: '',\n    messageSent: false,\n  }),\n  effects: {\n    handleContactUsValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    sendMessage: effects => async state => {\n      let creator = {}\n      if (state.authId) {\n        creator = {\n          creator: state.authId,\n        }\n      }\n      try {\n        await state.mongodb.insertOne({\n          type: 'message',\n          ...creator,\n          name: state.name,\n          email: state.email,\n          message: state.message,\n          date: Date.now(),\n        })\n        state.messageSent = true\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst ContactUs = ({ effects, state }) =>\n  state.messageSent ? (\n    <Card body>\n      <CardTitle\n        className=\"text-center hvr-bounce-to-right\"\n        style={{ fontWeight: 'bold' }}\n      >\n        Contactez-nous\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\" style={{ fontSize: '18px' }}>\n          <CheckIcon color=\"green\" /> &nbsp; Votre message est envoyé avec\n          succés, il sera lu dans les plus bref délais\n        </p>\n        <div className=\"text-center\">\n          <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n        </div>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        className=\"text-center hvr-bounce-to-right\"\n        style={{\n          backgroundColor: '#7bc3d1',\n          color: 'white',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n      >\n        <h5 style={{ marginTop: '10px' }}>\n          Contactez-nous&nbsp;\n          <EnvelopeIcon size=\"22\" />\n        </h5>\n      </span>\n      <CardBody>\n        <CardText>\n          <Form id=\"contact-us-form\">\n            <FormGroup>\n              <Label className=\"text-muted\">Nom</Label>\n              <Input\n                name=\"name\"\n                onChange={effects.handleContactUsValues}\n                required\n                type=\"text\"\n                placeholder=\"Votre nom ! *\"\n                value={state.name}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label className=\"text-muted\">Email</Label>\n              <Input\n                name=\"email\"\n                onChange={effects.handleContactUsValues}\n                required\n                type=\"email\"\n                placeholder=\"Votre email ! *\"\n                value={state.email}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label className=\"text-muted\">Message</Label>\n              <Input\n                name=\"message\"\n                onChange={effects.handleContactUsValues}\n                required\n                type=\"textarea\"\n                placeholder=\"Message *\"\n                value={state.message}\n                style={{ height: '200px' }}\n              />\n            </FormGroup>\n            <Row>\n              <Col md=\"4\" />\n              <Col md=\"4\" />\n              <Col>\n                <ActionButton\n                  text={\n                    <span style={{ fontWeight: 'bold' }}>\n                      Envoyer <PlaneIcon />\n                    </span>\n                  }\n                  color=\"info\"\n                  action={effects.sendMessage}\n                  form=\"contact-us-form\"\n                />\n              </Col>\n            </Row>\n          </Form>\n        </CardText>\n      </CardBody>\n    </Card>\n  )\n\nexport default withState(injectState(ContactUs))\n","import React from 'react'\nimport { Card, CardBody, Button, CardText, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport CuteKoala from '../imgs/cute_koala.jpg'\n\nconst ContestExam = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        <Row>\n          <Col>\n            Il y a pas assez d'examens saisis pour commencer un concours :(\n          </Col>\n        </Row>\n        <Row>\n          <Col>S'il vous plait, pensez à en ajouter un :)</Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <Button\n              color=\"info\"\n              onClick={() => {\n                if (state.logged) {\n                  history.push('/contribuer')\n                } else {\n                  history.push('/authenticate')\n                }\n              }}\n            >\n              Ajouter un examen\n            </Button>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <div className=\"text-center\">\n              <img src={CuteKoala} alt=\"cute koala\" height=\"200\" width=\"200\" />\n            </div>\n          </Col>\n        </Row>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ContestExam)\n","import BellIcon from 'react-icons/lib/fa/bell'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport IncompletedIcon from 'react-icons/lib/md/timelapse'\nimport CompletedIcon from 'react-icons/lib/md/check'\nimport PublishedIcon from 'react-icons/lib/fa/globe'\nimport TrashIcon from 'react-icons/lib/fa/trash'\nimport VerificationIcon from 'react-icons/lib/fa/hourglass-2'\nimport React, { Fragment } from 'react'\nimport { Badge, Button, UncontrolledTooltip } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../components/sorted-table'\nimport * as Utils from '../utils'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  effects: {\n    deleteExam: (effects, examId) => async state => {\n      try {\n        const objectId = new ObjectId(examId)\n        await state.mongodb.deleteOne({ _id: objectId })\n        effects.getPostedExams()\n        effects.notifySuccess('Examen bien supprimé !')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Module',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"info\">{value.module}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'module',\n  },\n  {\n    name: 'Université',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.university}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'university',\n  },\n  {\n    name: 'Session',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {moment(value.examDate).format('DD-MM-YYYY')}\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'examDate',\n  },\n  {\n    name: 'Date de création',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{moment(value.date).format('DD-MM-YYYY')}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'date',\n  },\n  {\n    name: (\n      <span>\n        Doit être publié avant le &nbsp;\n        <BellIcon color=\"red\" size=\"20\" id={`bell-icon`} />\n        <UncontrolledTooltip placement=\"top\" target={`bell-icon`}>\n          Vite terminez cet examen avant qu'il soit supprimé après l'échéance de\n          la date dessous\n        </UncontrolledTooltip>\n      </span>\n    ),\n    itemRenderer: (value, state, effects) =>\n      value.approved ? (\n        <span />\n      ) : (\n        <h5>\n          <Badge color=\"danger\">\n            {moment(value.date)\n              .add(7, 'days')\n              .format('DD-MM-YYYY')}\n          </Badge>\n        </h5>\n      ),\n    sortIteratee: 'date',\n  },\n  {\n    name: 'Vue',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {value.seen || 0} &nbsp; <EyeIcon />\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'seen',\n  },\n  {\n    name: 'Etât',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.completed ? (\n        <Fragment>\n          <CompletedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`complete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`complete-icon-${generatedKey}`}\n          >\n            Complet\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <IncompletedIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`incomplete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`incomplete-icon-${generatedKey}`}\n          >\n            Incomplet\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Action',\n    itemRenderer: (value, state, effects) => (\n      <Fragment>\n        {value.completed ? (\n          <Link\n            className=\"btn btn-outline-dark btn-sm\"\n            target=\"_blank\"\n            to={`/contribuer/${value._id.toString()}`}\n          >\n            Modifier\n          </Link>\n        ) : (\n          <Link\n            className=\"btn btn-outline-info btn-sm\"\n            target=\"_blank\"\n            to={`/contribuer/${value._id.toString()}`}\n          >\n            Compléter\n          </Link>\n        )}\n        &nbsp;\n        {!value.completed && (\n          <Button\n            size=\"sm\"\n            color=\"danger\"\n            outline\n            onClick={() => {\n              const response = window.confirm(\n                'Etes vous sûr de vouloir abondonner cet examen ?'\n              )\n              if (response) {\n                effects.deleteExam(value._id.toString())\n              }\n            }}\n          >\n            <TrashIcon size=\"15\" />\n          </Button>\n        )}\n      </Fragment>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Publication',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.approved ? (\n        <Fragment>\n          <PublishedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`published-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`published-icon-${generatedKey}`}\n          >\n            Votre examen est en ligne\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <VerificationIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`on-verification-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`on-verification-icon-${generatedKey}`}\n          >\n            En vérification\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n]\n\nconst UserAddedExamss = ({ effects, state, lastIndex, exams }) => (\n  <SortedTable\n    columns={columns}\n    collection={exams}\n    filteredCollection={exams}\n    initialSortIteratee={'date'}\n    initialSortDirection={'desc'}\n    pagination={exams && exams.length > 10}\n    uniqueKey={'_id'}\n  />\n)\n\nexport default withState(injectState(UserAddedExamss))\n","import CloseIcon from 'react-icons/lib/fa/close'\nimport React from 'react'\nimport { injectState } from 'reaclette'\n\nimport './modal-img-style.css'\n\nconst ModalImg = ({ effects, picture, onCloseImgModal }) => (\n  <div className=\"img-modal\">\n    <span className=\"close-modal\">\n      <CloseIcon onClick={() => onCloseImgModal()} color=\"white\" />\n    </span>\n    <img\n      className=\"modal-content\"\n      src={picture}\n      alt=\"illustration d'ajout d'examen\"\n    />\n    <div id=\"caption\" />\n  </div>\n)\n\nexport default injectState(ModalImg)\n","import AngleDownIcon from 'react-icons/lib/fa/angle-down'\nimport TrashIcon from 'react-icons/lib/fa/trash'\nimport EditIcon from 'react-icons/lib/fa/pencil'\nimport InfoIcon from 'react-icons/lib/fa/info-circle'\nimport PlusIcon from 'react-icons/lib/fa/plus'\nimport React, { Fragment } from 'react'\nimport {\n  Badge,\n  Card,\n  Col,\n  Collapse,\n  Row,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport ModalImg from '../components/modal-img'\nimport ActionButton from '../components/action-button'\nimport CorrectAnswersPicture from '../imgs/exam-correct-answers.png'\n\nconst withState = provideState({\n  initialState: ({ answers, correctAnswers, question, lastIndex }) => ({\n    question: question || '',\n    questionNum: lastIndex,\n    A: (answers && answers.A) || '',\n    B: (answers && answers.B) || '',\n    C: (answers && answers.C) || '',\n    D: (answers && answers.D) || '',\n    E: (answers && answers.E) || '',\n    correctAnswers: correctAnswers || [],\n    validatedQuestion: false,\n    firstRender: true,\n    modalCorrectAnswers: false,\n    correctAnswersRequired: false,\n  }),\n  effects: {\n    initialize: () => (state, { question }) => {\n      if (state.alreadyValidatedQuestion) {\n        state.validatedQuestion = true\n      }\n    },\n    toggleCorrectAnswersPicture: () => state => ({\n      modalCorrectAnswers: !state.modalCorrectAnswers,\n    }),\n    addQuestion: () => (state, props) => {\n      if (state.correctAnswers.length === 0) {\n        state.correctAnswersRequired = true\n      } else {\n        const questionData = {\n          [state.questionNum]: {\n            question: state.question,\n            answers: {\n              A: state.A,\n              B: state.B,\n              C: state.C,\n              D: state.D,\n              E: state.E,\n            },\n            correctAnswers: state.correctAnswers,\n          },\n        }\n        props.onAddQuestion(questionData)\n        state.validatedQuestion = true\n        state.firstRender = false\n      }\n    },\n    handleQuestionValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    handleCorrectAnswer: (_, selected) => state => {\n      state.correctAnswersRequired = false\n      const index = state.correctAnswers.indexOf(selected)\n      if (index < 0) {\n        state.correctAnswers.push(selected)\n      } else {\n        state.correctAnswers.splice(index, 1)\n      }\n      return {\n        ...state,\n        correctAnswers: [...state.correctAnswers],\n      }\n    },\n    toggleQuestion: () => state => {\n      state.validatedQuestion = !state.validatedQuestion\n    },\n  },\n  computed: {\n    alreadyValidatedQuestion: (_, { question }) => question,\n  },\n})\n\nconst QuestionForm = ({\n  effects,\n  state,\n  lastIndex,\n  onDeleteLastQuestion,\n  isLastQuestion,\n}) => (\n  <div>\n    <InputGroup style={{ marginBottom: '16px' }}>\n      <Input\n        style={{ fontWeight: 'bold' }}\n        disabled\n        value={`Question ${state.questionNum}`}\n      />\n      <Input disabled value={`Réponses ${state.correctAnswers}`} />\n      <InputGroupAddon addonType=\"prepend\">\n        <Button\n          onClick={effects.toggleQuestion}\n          disabled={!state.validatedQuestion}\n          outline\n        >\n          {!state.validatedQuestion ? <AngleDownIcon /> : <EditIcon />}\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n    <Collapse isOpen={!state.validatedQuestion}>\n      <Card body style={{ marginBottom: '30px' }}>\n        <Form id={`question-form-${lastIndex + 1}`}>\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{`Question ${\n                    state.questionNum\n                  }`}</InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  name=\"question\"\n                  onChange={effects.handleQuestionValues}\n                  required\n                  type=\"text\"\n                  placeholder=\"Question *\"\n                  value={state.question}\n                />\n              </InputGroup>\n              <FormGroup />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">A</InputGroupAddon>\n                  <Input\n                    name=\"A\"\n                    value={state.A}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition A\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">B</InputGroupAddon>\n                  <Input\n                    name=\"B\"\n                    value={state.B}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition B\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">C</InputGroupAddon>\n                  <Input\n                    name=\"C\"\n                    value={state.C}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition C\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">D</InputGroupAddon>\n                  <Input\n                    name=\"D\"\n                    value={state.D}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition D\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">E</InputGroupAddon>\n                  <Input\n                    name=\"E\"\n                    value={state.E}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition E\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <span className=\"text-muted\">Bonne réponses &nbsp;</span>\n              <ButtonGroup>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('A')}\n                  active={state.correctAnswers.includes('A')}\n                >\n                  &nbsp;A&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('B')}\n                  active={state.correctAnswers.includes('B')}\n                >\n                  &nbsp;B&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('C')}\n                  active={state.correctAnswers.includes('C')}\n                >\n                  &nbsp;C&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('D')}\n                  active={state.correctAnswers.includes('D')}\n                >\n                  &nbsp;D&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('E')}\n                  active={state.correctAnswers.includes('E')}\n                >\n                  &nbsp;E&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={effects.toggleCorrectAnswersPicture}\n                >\n                  <InfoIcon\n                    color=\"orange\"\n                    size=\"23\"\n                    style={{ verticalAlign: 'bottom' }}\n                  />\n                  {state.modalCorrectAnswers && (\n                    <ModalImg\n                      picture={CorrectAnswersPicture}\n                      onCloseImgModal={effects.toggleCorrectAnswersPicture}\n                    />\n                  )}\n                </Button>\n              </ButtonGroup>\n              &nbsp; &nbsp;\n              {state.correctAnswers.length > 0 && (\n                <Fragment>\n                  <span className=\"text-muted\">\n                    Réponses selectionnées &nbsp;\n                  </span>\n                  <span>\n                    {map(state.correctAnswers, answer => (\n                      <Badge key={answer} color=\"light\">\n                        {answer}\n                      </Badge>\n                    ))}\n                  </span>\n                </Fragment>\n              )}\n            </Col>\n          </Row>\n          {state.correctAnswersRequired && (\n            <Row>\n              <Col>\n                <span style={{ color: 'red' }}>\n                  Il faut choisir au moins une réponse :)\n                </span>\n              </Col>\n            </Row>\n          )}\n          <Row style={{ marginTop: '20px' }}>\n            <Col md=\"5\" />\n            <Col md=\"3\">\n              {isLastQuestion && (\n                <Button\n                  color=\"light\"\n                  block\n                  onClick={() => {\n                    const response = window.confirm(\n                      'Etes vous sûr de vouloir supprimer cette question ?'\n                    )\n                    if (response) {\n                      onDeleteLastQuestion()\n                    }\n                  }}\n                >\n                  Supprimer question <TrashIcon />\n                </Button>\n              )}\n            </Col>\n            <Col md=\"4\">\n              <ActionButton\n                text={\n                  <span>\n                    {!state.alreadyValidatedQuestion\n                      ? 'Ajouter question'\n                      : 'Modifier question'}{' '}\n                    <PlusIcon />\n                  </span>\n                }\n                color=\"info\"\n                block={true}\n                action={effects.addQuestion}\n                form={`question-form-${lastIndex + 1}`}\n              />\n            </Col>\n          </Row>\n        </Form>\n      </Card>\n    </Collapse>\n  </div>\n)\n\nexport default withState(injectState(QuestionForm))\n","import CheckIcon from 'react-icons/lib/fa/check'\nimport WarningIcon from 'react-icons/lib/fa/exclamation-triangle'\nimport CloseIcon from 'react-icons/lib/fa/close'\nimport DatePicker from 'react-datepicker'\nimport FloopyIcon from 'react-icons/lib/fa/floppy-o'\nimport PlusIcon from 'react-icons/lib/fa/plus'\nimport PlayIcon from 'react-icons/lib/fa/play'\nimport InfoIcon from 'react-icons/lib/fa/info-circle'\nimport React, { Fragment } from 'react'\nimport {\n  Alert,\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  UncontrolledTooltip,\n  Label,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport 'react-datepicker/dist/react-datepicker.css'\nimport Universities from '../data/cities'\nimport ActionButton from '../components/action-button'\nimport ExamDatePicture from '../imgs/exam-date.jpg'\nimport ModalImg from '../components/modal-img'\nimport Modules from '../data/modules'\nimport QuestionForm from '../question-form'\n\nimport '../style/hover.css'\nimport './modal-img-style.css'\nimport './input-date-style.css'\n\nconst MIN_QUESTIONS_LENGTH = 10\n\nconst withState = provideState({\n  initialState: ({ data, verified, university }) => ({\n    module: (data && data.module) || '',\n    examDate: (data && data.examDate && new Date(data.examDate)) || '',\n    _university: (data && data.university) || university || '',\n    questions: (data && data.exam) || {},\n    moduleExists: !verified,\n    examCompleted: false,\n    modalExamPicture: false,\n    examProof: (data && data.examProof) || '',\n  }),\n  effects: {\n    addExam: effects => async (state, { onHideExamView }) => {\n      if (Object.keys(state.questions).length < MIN_QUESTIONS_LENGTH) {\n        effects.notifyError(\n          `Il faut au minimum ${MIN_QUESTIONS_LENGTH} questions pour commencer à ajouter un examen`\n        )\n      } else {\n        let creator = {}\n        if (state.authId !== '5c2e153a6071059caef396ac') {\n          creator = { creator: state.authId }\n        }\n        try {\n          await state.mongodb.updateOne(\n            {\n              module: state.module,\n              examDate: new Date(state.examDate).valueOf(),\n              university: state._university,\n            },\n            {\n              $set: {\n                type: 'exam',\n                examDate: new Date(state.examDate).valueOf(),\n                ...creator,\n                date: Date.now(),\n                completed: true,\n                approved: false, //TODO: make it always false\n                university: state._university,\n                examProof: state.examProof,\n                exam: {\n                  ...state.questions,\n                },\n              },\n            },\n            { upsert: true }\n          )\n          state.examCompleted = true\n          effects.notifySuccess(\n            'Merci, votre examen est ajouté avec succés !, Il sera vérifié et publier bientôt :)'\n          )\n          onHideExamView()\n          effects.getPostedExams()\n          effects.getLastPostedExams()\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n    },\n    toggleExamDatePicture: () => state => ({\n      ...state,\n      modalExamPicture: !state.modalExamPicture,\n    }),\n    handleExamValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    handleExamDate: (_, date) => state => {\n      state.examDate = new Date(date)\n    },\n    addQuestionView: () => state => {\n      const questionKeys = Object.keys(state.questions)\n      const lastKey = questionKeys.length > 0 ? +questionKeys.pop() : 0\n      state.questions = {\n        ...state.questions,\n        [lastKey + 1]: {},\n      }\n    },\n    deleteLastQuestion: () => state => {\n      const questionKeys = Object.keys(state.questions)\n      const lastKey = +questionKeys.pop()\n      let _questions = { ...state.questions }\n      delete _questions[lastKey]\n      state.questions = _questions\n    },\n    addQuestion: (_, questionData) => state => {\n      let questions = { ...state.questions }\n      questions = {\n        ...questions,\n        ...questionData,\n      }\n      return {\n        ...state,\n        questions,\n      }\n    },\n    saveExamForLater: (effects, close = true) => async (\n      state,\n      { onHideExamView }\n    ) => {\n      let creator = {}\n      if (state.authId !== '5c2e153a6071059caef396ac') {\n        creator = { creator: state.authId }\n      }\n      try {\n        await state.mongodb.updateOne(\n          {\n            module: state.module,\n            examDate: new Date(state.examDate).valueOf(),\n            university: state._university,\n          },\n          {\n            $set: {\n              type: 'exam',\n              examDate: new Date(state.examDate).valueOf(),\n              ...creator,\n              date: Date.now(),\n              completed: false,\n              approved: false,\n              university: state._university,\n              examProof: state.examProof,\n              exam: {\n                ...state.questions,\n              },\n            },\n          },\n          { upsert: true }\n        )\n        state.examCompleted = true\n        close &&\n          effects.notifySuccess(\n            \"l'examen est sauvegardé avec succées, vous pouvez le compléter dans votre tableau d'examen\"\n          )\n        close && onHideExamView()\n        effects.getPostedExams()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    verifyModuleExisting: effects => async state => {\n      const cursor = await state.mongodb\n        .find({\n          module: state.module,\n          examDate: new Date(state.examDate).valueOf(),\n          university: state._university,\n        })\n        .iterator()\n      const res = await cursor.next()\n      if (res) {\n        effects.notifyError(\n          \"Cet examen est en cours d'être remplis par un autre utilisateur ou existe déjà :( S'il vous plait, choisisssez un autre examen :) S'il vous plait, choisisssez un autre examen :)\"\n        )\n      } else {\n        effects.saveExamForLater(false)\n        return {\n          ...state,\n          moduleExists: false,\n        }\n      }\n    },\n  },\n  computed: {\n    validInitialExamData: ({ year, examDate, module, _university }) =>\n      examDate !== '' && module !== '' && _university !== '',\n    addExamStarted: ({ moduleExists }) => !moduleExists,\n    lastQuestionIndex: ({ questions }) => {\n      const questionKeys = Object.keys(questions)\n      return questionKeys.length > 0 ? +questionKeys.pop() : 0\n    },\n  },\n})\n\nconst ExamForm = ({ effects, state, onHideExamView }) => {\n  const datePickerProps = {\n    dateFormat: 'dd/MM/yyyy',\n    onChange: effects.handleExamDate,\n    placeholderText: 'Date examen *',\n    className: 'input-date-style',\n    disabled: state.addExamStarted,\n  }\n  if (state.examDate !== '') {\n    datePickerProps.selected = state.examDate\n  }\n  return (\n    <div>\n      <Form id=\"exam-form\">\n        <Row>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">Module</Label>\n              <Input\n                name=\"module\"\n                onChange={effects.handleExamValues}\n                required\n                type=\"select\"\n                value={state.module}\n                disabled={state.addExamStarted}\n              >\n                <option value=\"\">Module *</option>\n                {Modules &&\n                  map(Modules, module => (\n                    <option key={module} value={module}>\n                      {module}\n                    </option>\n                  ))}\n              </Input>\n            </FormGroup>\n          </Col>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">Université</Label>\n              <Input\n                name=\"_university\"\n                onChange={effects.handleExamValues}\n                required\n                type=\"select\"\n                value={state._university}\n                disabled={state.addExamStarted}\n              >\n                <option value=\"\">Université *</option>\n                {Universities &&\n                  map(Universities, university => (\n                    <option key={university.code} value={university.nom}>\n                      {`${university.code} - ${university.nom}`}\n                    </option>\n                  ))}\n              </Input>\n            </FormGroup>\n          </Col>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">Date - Session</Label>\n              <InputGroup>\n                <DatePicker {...datePickerProps} />\n                <InputGroupAddon\n                  addonType=\"append\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={effects.toggleExamDatePicture}\n                >\n                  <InputGroupText>\n                    <InfoIcon color=\"orange\" size=\"20\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </FormGroup>\n          </Col>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">&nbsp;</Label>\n              <ActionButton\n                className=\"hvr-icon-forward\"\n                text={\n                  <span>\n                    Commencer &nbsp; <PlayIcon className=\"hvr-icon\" />\n                  </span>\n                }\n                color=\"success\"\n                action={effects.verifyModuleExisting}\n                block={true}\n                disabled={!state.validInitialExamData || !state.moduleExists}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <br />\n        {!state.moduleExists && (\n          <Fragment>\n            {map(state.questions, (questData, index) => (\n              <QuestionForm\n                question={questData.question}\n                answers={questData.answers}\n                correctAnswers={questData.correctAnswers}\n                key={+index}\n                lastIndex={+index}\n                onAddQuestion={effects.addQuestion}\n                onDeleteLastQuestion={effects.deleteLastQuestion}\n                isLastQuestion={state.lastQuestionIndex === +index}\n              />\n            ))}\n            <Row>\n              <Col md=\"8\" />\n              <Col md=\"4\">\n                <Button\n                  className=\"float-right hvr-icon-pulse\"\n                  onClick={effects.addQuestionView}\n                  disabled={!state.validInitialExamData}\n                  color=\"warning\"\n                >\n                  Ajouter une question <PlusIcon className=\"hvr-icon\" />\n                </Button>\n                &nbsp;\n                <Button\n                  color=\"light\"\n                  className=\"float-right\"\n                  id=\"delete-info\"\n                  onClick={() => {}}\n                >\n                  <InfoIcon\n                    color=\"orange\"\n                    size=\"23\"\n                    style={{ verticalAlign: 'bottom' }}\n                  />\n                </Button>\n                <UncontrolledTooltip placement=\"left\" target=\"delete-info\">\n                  Pour Respecter l'ordre des questions ajoutées, Nous vous\n                  offrons la possiblité de supprimer seulement la dernière\n                  question ajoutée\n                </UncontrolledTooltip>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <Label className=\"text-muted\">Preuve d'examen</Label>\n                  <Input\n                    name=\"examProof\"\n                    placeholder=\"Peut être le lien de l'examen dans Drive ou Dropbox. Exemple https://drive.google.com/open?id=1Q3sMhD_BwAczA6gsTVhq_Q43TZTigZXk\"\n                    onChange={effects.handleExamValues}\n                    required\n                    type=\"text\"\n                    value={state.examProof}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Alert color=\"warning\">\n                  <WarningIcon /> Vous avez que 7 jours pour terminer la saisie\n                  de cet examen\n                </Alert>\n              </Col>\n            </Row>\n          </Fragment>\n        )}\n        <br />\n        <br />\n        {state.addExamStarted && (\n          <Row>\n            <Col md=\"2\">\n              <Button\n                className=\"float-left\"\n                color=\"warning\"\n                block\n                onClick={() => {\n                  const response = window.confirm(\n                    \"Etes vous sûr de vouloir quitter sans sauvegarder l'examen pour plus tard ?\"\n                  )\n                  if (response) {\n                    onHideExamView()\n                  }\n                }}\n              >\n                Quitter <CloseIcon color=\"red\" />\n              </Button>\n            </Col>\n            <Col md=\"2\" />\n            <Col md=\"4\">\n              <ActionButton\n                text={\n                  <span>\n                    Sauvegarder pour plus tard <FloopyIcon />\n                  </span>\n                }\n                action={effects.saveExamForLater}\n                disabled={!state.addExamStarted}\n                block={true}\n              />\n            </Col>\n            <Col md=\"4\">\n              <ActionButton\n                text={\n                  <span>\n                    Ajouter l'examen <CheckIcon />\n                  </span>\n                }\n                color=\"success\"\n                action={effects.addExam}\n                form=\"exam-form\"\n                disabled={!state.addExamStarted}\n                block={true}\n              />\n            </Col>\n          </Row>\n        )}\n      </Form>\n      {state.modalExamPicture && (\n        <ModalImg\n          picture={ExamDatePicture}\n          onCloseImgModal={effects.toggleExamDatePicture}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default withState(injectState(ExamForm))\n","import LightIcon from 'react-icons/lib/fa/lightbulb-o'\nimport CloseIcon from 'react-icons/lib/fa/close'\nimport React from 'react'\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport ScanImg from '../imgs/ocr-scan.jpg'\n\nconst withState = provideState({\n  initialState: () => ({\n    collapse: false,\n  }),\n  effects: {\n    toggle: () => state => ({\n      ...state,\n      collapse: !state.collapse,\n    }),\n  },\n})\n\nconst ScanInfoCard = ({ effects, state }) => (\n  <div>\n    <Row>\n      <Col>\n        <h4>\n          <Badge\n            color=\"warning\"\n            pill\n            className=\"hvr-float-shadow\"\n            style={{ cursor: 'pointer' }}\n            onClick={effects.toggle}\n          >\n            Vous n'avez pas à taper l'examen, cliquez ici{' '}\n            <LightIcon size=\"20\" />\n          </Badge>\n        </h4>\n      </Col>\n    </Row>\n    {state.collapse && (\n      <Card\n        style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)', fontSize: '18px' }}\n        className=\"h-100\"\n      >\n        <CardTitle style={{ fontWeight: 'bold', textAlign: 'center' }}>\n          <div style={{ margin: '10px' }}>\n            Utilisez le scanneur de caractères en ligne\n          </div>\n          <div>\n            <img src={ScanImg} alt=\"ocr scan\" width=\"80\" height=\"80\" />\n          </div>\n        </CardTitle>\n        <CardBody>\n          <CardText>\n            Etapes:\n            <ListGroup>\n              <ListGroupItem>\n                <span style={{ fontWeight: 'bold' }}>1.</span> Entrez sur le\n                site{' '}\n                <a href=\"https://www.onlineocr.net/\">\n                  https://www.onlineocr.net/\n                </a>\n              </ListGroupItem>\n              <ListGroupItem>\n                <span style={{ fontWeight: 'bold' }}>2.</span> Créer un compte\n                pour pouvoir scanner des documents qui comportent plusieurs\n                pages\n              </ListGroupItem>\n              <ListGroupItem>\n                <span style={{ fontWeight: 'bold' }}>3.</span> Selectionnez un\n                examen après avoir vérifier qu'il n'existe pas encore dans\n                Hakima QCM\n              </ListGroupItem>\n              <ListGroupItem>\n                <span style={{ fontWeight: 'bold' }}>4.</span> Choisissez{' '}\n                <strong>Text Plain (txt)</strong> comme format de sortie\n              </ListGroupItem>\n              <ListGroupItem>\n                <span style={{ fontWeight: 'bold' }}>5.</span> Cliquez sur le\n                boutton <strong>Convert</strong> et voilà vous avez votre examen\n                scanné\n              </ListGroupItem>\n              <ListGroupItem>\n                <span style={{ fontWeight: 'bold' }}>6.</span> Maintenant vous\n                n'avez qu'à organiser les questions et les réponses en les\n                copiant sur l'outil de saisit des examens de{' '}\n                <strong>Hakima QCM</strong>\n              </ListGroupItem>\n            </ListGroup>\n          </CardText>\n          <div className=\"float-right\">\n            <Button onClick={effects.toggle} size=\"sm\">\n              fermer <CloseIcon />\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    )}\n  </div>\n)\n\nexport default withState(injectState(ScanInfoCard))\n","import PlusIcon from 'react-icons/lib/fa/plus'\nimport GlobeIcon from 'react-icons/lib/fa/globe'\nimport DownloadIcon from 'react-icons/lib/fa/download'\nimport React from 'react'\nimport { Badge, Button, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport UserAddedExams from '../user-added-exams'\nimport ExamForm from '../exam-form'\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ScanInfoCard from '../scan-info-card'\n\nimport '../style/hover.css'\n\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  initialState: () => ({\n    addExamView: false,\n    initialExamData: undefined,\n    examLoading: false,\n    queryString: false,\n  }),\n  effects: {\n    initialize: effects => async (state, { match }) => {\n      const examId = match && match.params && match.params.examId\n      if (examId) {\n        state.examLoading = true\n        const objectId = new ObjectId(examId)\n        const exam = await state.mongodb.find({ _id: objectId }).asArray()\n        state.initialExamData = exam.pop()\n        state.examLoading = false\n        state.addExamView = true\n      }\n      const params = new URLSearchParams(window.location.hash.split('?')[1])\n      const _module = params.get('module')\n      const university = params.get('university')\n      if (_module && university) {\n        state.queryString = true\n        state.initialExamData = {\n          module: _module,\n          university: university,\n        }\n        effects.displayExamView()\n      }\n    },\n    displayExamView: () => state => ({\n      ...state,\n      addExamView: true,\n    }),\n    hideExamView: () => state => ({\n      ...state,\n      addExamView: false,\n    }),\n  },\n})\n\nconst Contribuate = ({ effects, state }) => (\n  <div style={{ marginTop: '20px' }}>\n    <Row>\n      <Col>\n        <ScanInfoCard />\n      </Col>\n      <Col>\n        <h4 className=\"float-right\">\n          <a\n            href=\"https://mega.nz/#F!auwVTA4B!qkw06O3Sq8pnXcFxPgiL0w\"\n            target=\"_blank\"\n            style={{\n              textDecoration: 'none',\n            }}\n          >\n            <Badge\n              color=\"info\"\n              pill\n              className=\"hvr-float-shadow\"\n              style={{ cursor: 'pointer' }}\n            >\n              2017-2018 EMD Scannés <DownloadIcon />{' '}\n            </Badge>\n          </a>\n        </h4>\n      </Col>\n    </Row>\n    <br />\n    <Row>\n      <Col md=\"9\">\n        <h5 className=\"text-muted hvr-icon-spin\">\n          Le monde n'a pas été crée en un jour{' '}\n          <GlobeIcon\n            size=\"22\"\n            className=\"hvr-icon\"\n            style={{ color: '#0e627f' }}\n          />\n        </h5>\n      </Col>\n      <Col md=\"3\">\n        <Button\n          className=\"float-right hvr-icon-pulse-grow\"\n          onClick={effects.displayExamView}\n          disabled={state.addExamView}\n          block\n          color=\"success\"\n        >\n          <span style={{ fontSize: '16px', fontWeight: 'bold' }}>\n            Ajouter un examen\n          </span>{' '}\n          <PlusIcon color=\"white\" size=\"20\" className=\"hvr-icon\" />\n        </Button>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        {state.examLoading ? (\n          <Row className=\"my-3\">\n            <Col md={{ size: 2, offset: 5 }}>\n              <br />\n              <div className=\"text-center\">\n                <img\n                  src={LoadingIcon}\n                  width=\"50\"\n                  height=\"50\"\n                  alt=\"Loading...\"\n                />\n              </div>\n              <p className=\"text-muted text-center\">Examen en chargement ...</p>\n            </Col>\n          </Row>\n        ) : (\n          state.addExamView && (\n            <ExamForm\n              data={state.initialExamData}\n              onHideExamView={effects.hideExamView}\n              verified={\n                state.queryString ? false : state.initialExamData ? true : false\n              }\n              university={state.university}\n            />\n          )\n        )}\n      </Col>\n    </Row>\n    <br />\n    <hr />\n    {state.authId && (\n      <Row>\n        <Col>\n          <p className=\"text-muted\" style={{ fontWeight: 'bold' }}>\n            Mes examens postés\n          </p>\n          <UserAddedExams exams={state.postedExams} />\n        </Col>\n      </Row>\n    )}\n  </div>\n)\n\nexport default withState(injectState(Contribuate))\n","import GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport moment from 'moment'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nconst GREEN_COLOR = '#408f0a'\n\nconst withState = provideState({\n  initialState: ({ examData }) => ({ examData }),\n})\n\nconst Exam = ({ state, effects, history }) => {\n  return (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        className=\"text-center\"\n        style={{\n          backgroundColor: '#f5c018',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n      >\n        <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n          QCM&nbsp;\n          <GraduateIcon size=\"25\" />\n        </h5>\n      </span>\n      <CardBody>\n        <div>\n          <Row>\n            <Col>\n              <h4>\n                <Badge color=\"light\" className=\"float-left\">\n                  {state.examData && state.examData.university}\n                </Badge>\n              </h4>\n            </Col>\n            <Col>\n              <h4 className=\"text-center\">\n                <Badge color=\"dark\">\n                  {state.examData && state.examData.module}\n                </Badge>\n              </h4>\n            </Col>\n            <Col>\n              <h4>\n                <Badge color=\"light\" className=\"float-right\">\n                  {moment(state.examData && state.examData.examDate).format(\n                    'DD-MM-YYYY'\n                  )}\n                </Badge>\n              </h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ size: 8, offset: 2 }}>\n              {map(\n                state.examData.exam,\n                (currentQuestion, currentQuestionNum) => (\n                  <Card body style={{ marginBottom: '10px' }}>\n                    {state.currentQuestion && (\n                      <div style={{ marginBottom: '10px' }}>\n                        <h5>\n                          {currentQuestionNum}. {currentQuestion.question}\n                        </h5>\n                        <br />\n                        <ListGroup>\n                          {map(currentQuestion.answers, (answer, key) => (\n                            <div style={{ marginBottom: '8px' }}>\n                              <ListGroupItem\n                                style={\n                                  currentQuestion.correctAnswers.includes(key)\n                                    ? {\n                                        backgroundColor: GREEN_COLOR,\n                                        cursor: 'pointer',\n                                        color: 'white',\n                                        borderRadius: '10px',\n                                      }\n                                    : {\n                                        cursor: 'pointer',\n                                        borderRadius: '10px',\n                                      }\n                                }\n                              >\n                                {key}. {answer}\n                              </ListGroupItem>\n                            </div>\n                          ))}\n                        </ListGroup>\n                      </div>\n                    )}\n                  </Card>\n                )\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className=\"text-center\">\n                <Button color=\"dark\" onClick={effects.setExamMode}>\n                  Passer cet examen\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default withState(injectState(Exam))\n","import ResendIcon from 'react-icons/lib/fa/refresh'\nimport GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport moment from 'moment'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport LoadingIcon from '../../imgs/button-spinner.gif'\nimport ExamWithAnswers from '../exam-with-answers'\nimport ReportExam from './report-exam'\nimport { map, remove, isEmpty, difference } from 'lodash'\nimport { ObjectId } from 'bson'\n\nimport CuteKoala from '../../imgs/cute_koala.jpg'\n\nconst RED_COLOR = '#bc1e10'\nconst GREEN_COLOR = '#408f0a'\n\nconst withState = provideState({\n  initialState: () => ({\n    examData: undefined,\n    examLoading: false,\n    badAnsweredQuestions: {},\n    currentQuestionNum: 1,\n    selectedAnswers: [],\n    answered: false,\n    note: 0,\n    examEnd: false,\n    examMode: true,\n  }),\n  effects: {\n    initialize: effects => async (state, { match }) => {\n      const examId = match && match.params && match.params.examId\n      if (examId) {\n        state.examLoading = true\n        try {\n          const objectId = new ObjectId(examId)\n          const exam = await state.mongodb.find({ _id: objectId }).asArray()\n          state.examData = exam.pop()\n          effects.incrementViews(objectId, state.examData.seen || 0)\n        } catch (error) {\n          effects.handleError(error)\n        }\n        state.examLoading = false\n      }\n    },\n    incrementViews: (effects, examId, views) => async state => {\n      try {\n        await state.mongodb.updateOne(\n          {\n            _id: examId,\n          },\n          {\n            $set: {\n              seen: views + 1,\n            },\n          },\n          { upsert: true }\n        )\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    selectAnswer: (effects, answer) => state => {\n      if (state.selectedAnswers.includes(answer)) {\n        const _selectedAnswers = [...state.selectedAnswers]\n        remove(_selectedAnswers, ans => ans === answer)\n        state.selectedAnswers = _selectedAnswers\n      } else {\n        state.selectedAnswers = [...state.selectedAnswers, answer]\n      }\n    },\n    nextQuestion: () => state => {\n      if (state.isLastQuestion && state.answered) {\n        state.examEnd = true\n      }\n      if (!state.isLastQuestion && state.answered) {\n        state.selectedAnswers = []\n        const questionsIndexes = Object.keys(state.examData.exam)\n        const indexOfCurrentQuestion = questionsIndexes.indexOf(\n          String(state.currentQuestionNum)\n        )\n        state.currentQuestionNum = +questionsIndexes[indexOfCurrentQuestion + 1]\n        state.answered = false\n      } else if (!state.answered) {\n        state.answered = true\n        const diff = difference(\n          state.currentQuestion.correctAnswers,\n          state.selectedAnswers\n        )\n        if (isEmpty(diff)) {\n          // Good answer\n          state.note = state.note + 1\n        } else {\n          // Bad answer\n          state.badAnsweredQuestions = {\n            ...state.badAnsweredQuestions,\n            [state.currentQuestionNum]: state.currentQuestion,\n          }\n        }\n      }\n    },\n    displayAllAnswers: () => state => ({\n      ...state,\n      examMode: false,\n    }),\n    repassBadAnsweredQuestion: () => state => {\n      state.examData = { ...state.examData, exam: state.badAnsweredQuestions }\n      state.selectedAnswers = []\n      state.currentQuestionNum = +Object.keys(\n        state.badAnsweredQuestions\n      ).shift()\n      state.answered = false\n      state.examEnd = false\n      state.note = 0\n      state.badAnsweredQuestions = {}\n    },\n    setExamMode: () => state => ({\n      ...state,\n      examMode: true,\n    }),\n  },\n  computed: {\n    currentQuestion: ({ examData, currentQuestionNum }) => {\n      if (examData) {\n        return examData.exam[currentQuestionNum]\n      }\n    },\n    isLastQuestion: ({ questionsLength, currentQuestionNum }) =>\n      questionsLength === currentQuestionNum,\n    questionsLength: ({ examData }) =>\n      examData ? Object.keys(examData.exam).length : 0,\n    allAnswersAreCorrect: ({ questionsLength, note }) =>\n      questionsLength === note,\n  },\n})\n\nconst Exam = ({ state, effects, history }) => {\n  const questionStyle = key => {\n    if (state.answered && state.currentQuestion.correctAnswers.includes(key)) {\n      return {\n        backgroundColor: GREEN_COLOR,\n        cursor: 'pointer',\n        color: 'white',\n        borderRadius: '10px',\n      }\n    } else if (\n      state.answered &&\n      !state.currentQuestion.correctAnswers.includes(key) &&\n      state.selectedAnswers.includes(key)\n    ) {\n      return {\n        backgroundColor: RED_COLOR,\n        cursor: 'pointer',\n        color: 'white',\n        borderRadius: '10px',\n      }\n    } else if (!state.answered && state.selectedAnswers.includes(key)) {\n      return {\n        backgroundColor: '#7bc3d1',\n        cursor: 'pointer',\n        borderRadius: '10px',\n      }\n    } else {\n      return { cursor: 'pointer', borderRadius: '10px' }\n    }\n  }\n  return state.examMode ? (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        className=\"text-center hvr-bounce-to-right\"\n        style={{\n          backgroundColor: '#7bc3d1',\n          color: 'white',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n      >\n        <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n          QCM&nbsp;\n          <GraduateIcon size=\"25\" />\n        </h5>\n      </span>\n      <CardBody>\n        {state.examLoading ? (\n          <Row className=\"my-3\">\n            <Col md={{ size: 2, offset: 5 }}>\n              <br />\n              <div className=\"text-center\">\n                <img\n                  src={LoadingIcon}\n                  width=\"50\"\n                  height=\"50\"\n                  alt=\"Loading...\"\n                />\n              </div>\n              <p className=\"text-muted text-center\">Examen en chargement ...</p>\n            </Col>\n          </Row>\n        ) : state.examEnd ? (\n          <div style={{ marginTop: '20px' }}>\n            <h4 className=\"text-center\">\n              <Badge color=\"light\">\n                Note&nbsp;&nbsp;\n                <Badge color=\"dark\">\n                  {state.note} / {state.questionsLength}\n                </Badge>\n              </Badge>\n            </h4>\n            <div className=\"text-center\" style={{ margin: '15px' }}>\n              <ButtonGroup vertical>\n                {!state.allAnswersAreCorrect && (\n                  <Button outline onClick={effects.repassBadAnsweredQuestion}>\n                    Repasser les questions mal répondus <ResendIcon />\n                  </Button>\n                )}\n                <Button\n                  outline\n                  onClick={() => {\n                    history.push('/examen')\n                  }}\n                >\n                  Passer un autre examen\n                </Button>\n                <Button outline onClick={effects.displayAllAnswers}>\n                  Afficher toutes les réponses\n                </Button>\n              </ButtonGroup>\n            </div>\n            <div className=\"text-center\">\n              <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n            </div>\n          </div>\n        ) : (\n          <div>\n            <Row>\n              <Col>\n                <h4>\n                  <Badge color=\"light\" className=\"float-left\">\n                    {state.examData && state.examData.university}\n                  </Badge>\n                </h4>\n              </Col>\n              <Col>\n                <h4 className=\"text-center\">\n                  <Badge color=\"dark\">\n                    {state.examData && state.examData.module}\n                  </Badge>\n                </h4>\n              </Col>\n              <Col>\n                <h4>\n                  <Badge color=\"light\" className=\"float-right\">\n                    {moment(state.examData && state.examData.examDate).format(\n                      'DD-MM-YYYY'\n                    )}\n                  </Badge>\n                </h4>\n              </Col>\n            </Row>\n            <Row style={{ marginBottom: '10px' }}>\n              <Col md={{ size: 8, offset: 2 }}>\n                <div className=\"float-left\">\n                  <Button\n                    size=\"xs\"\n                    color=\"success\"\n                    outline\n                    onClick={effects.displayAllAnswers}\n                  >\n                    Afficher toutes les réponses\n                  </Button>\n                </div>\n                <h4 className=\"float-right\">\n                  <Badge color=\"light\">\n                    {state.currentQuestionNum} / {state.questionsLength}{' '}\n                    <span className=\"text-muted\">Questions</span>\n                  </Badge>\n                </h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={{ size: 8, offset: 2 }}>\n                <Card body>\n                  {state.currentQuestion && (\n                    <div style={{ marginBottom: '10px' }}>\n                      <h5>\n                        <strong>{state.currentQuestionNum}</strong>.{' '}\n                        {state.currentQuestion.question}\n                      </h5>\n                      <br />\n                      <ListGroup>\n                        {map(state.currentQuestion.answers, (answer, key) => (\n                          <div style={{ marginBottom: '8px' }}>\n                            <ListGroupItem\n                              className=\"hvr-bounce-in\"\n                              style={questionStyle(key)}\n                              onClick={() => effects.selectAnswer(key)}\n                            >\n                              <strong>{key}</strong>. {answer}\n                            </ListGroupItem>\n                          </div>\n                        ))}\n                      </ListGroup>\n                    </div>\n                  )}\n                  <Row>\n                    <Col>\n                      <span className=\"float-left\">\n                        <ReportExam\n                          _module={state.examData && state.examData.module}\n                          examId={state.examData && state.examData._id}\n                          questionNum={state.currentQuestionNum}\n                          examDate={moment(\n                            state.examData && state.examData.examDate\n                          ).format('DD-MM-YYYY')}\n                        />\n                      </span>\n                    </Col>\n                    <Col>\n                      <Button\n                        color=\"dark\"\n                        className=\"float-right\"\n                        onClick={effects.nextQuestion}\n                      >\n                        {state.isLastQuestion && state.answered\n                          ? 'Terminer'\n                          : state.answered\n                          ? 'Suivant >>'\n                          : 'Corriger'}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  ) : (\n    <ExamWithAnswers examData={state.examData} />\n  )\n}\n\nexport default withState(injectState(Exam))\n","import React from 'react'\nimport GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { Link } from 'react-router-dom'\n\nconst withState = provideState({\n  initialState: () => ({\n    dropdownOpen: false,\n  }),\n  effects: {\n    toggle: () => state => ({\n      ...state,\n      dropdownOpen: !state.dropdownOpen,\n    }),\n  },\n})\n\nconst AccountMenu = ({ effects, state, history }) => (\n  <Dropdown\n    nav\n    direction=\"down\"\n    isOpen={state.dropdownOpen}\n    toggle={effects.toggle}\n  >\n    <DropdownToggle\n      nav\n      caret\n      style={{\n        color: '#e2e3e4',\n      }}\n      className=\"hvr-icon-fade\"\n    >\n      <GraduateIcon size=\"20\" className=\"hvr-icon\" /> &nbsp; Réviser un module\n    </DropdownToggle>\n    <DropdownMenu style={{ backgroundColor: '#222534' }}>\n      <DropdownItem\n        style={{ color: '#e2e3e4' }}\n        className=\"hvr-bounce-to-right\"\n      >\n        <Link to={`/examen`} style={{ color: 'white', textDecoration: 'none' }}>\n          Chercher un QCM\n        </Link>\n      </DropdownItem>\n      <DropdownItem\n        style={{ color: '#e2e3e4' }}\n        className=\"hvr-bounce-to-right\"\n      >\n        <Link\n          to={`/marevision`}\n          style={{ color: 'white', textDecoration: 'none' }}\n        >\n          Ma révision\n        </Link>\n      </DropdownItem>\n    </DropdownMenu>\n  </Dropdown>\n)\n\nexport default withState(injectState(AccountMenu))\n","import EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport PlaneIcon from 'react-icons/lib/fa/paper-plane'\nimport React from 'react'\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nconst withState = provideState({\n  initialState: () => ({}),\n  effects: {\n    handleContactUsValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n  },\n})\n\nconst ContactUs = ({ effects, state }) => (\n  <div>\n    <Row>\n      <Col md=\"3\">\n        <Row style={{ marginBottom: '10px' }}>\n          <Col>\n            <Card body className=\"h-100\">\n              <CardTitle\n                className=\"text-center hvr-bounce-to-right\"\n                style={{ fontWeight: 'bold' }}\n              >\n                Examen pas encore passés\n              </CardTitle>\n              <CardBody>hello world</CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Card body className=\"h-100\">\n              <CardTitle\n                className=\"text-center hvr-bounce-to-right\"\n                style={{ fontWeight: 'bold' }}\n              >\n                Examen passés\n              </CardTitle>\n              <CardBody>helloo world</CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Col>\n      <Col md=\"9\">\n        <Card body className=\"h-100\">\n          <CardTitle\n            className=\"text-center hvr-bounce-to-right\"\n            style={{ fontWeight: 'bold' }}\n          >\n            Session examen **** MODULE ****\n          </CardTitle>\n          <CardBody>></CardBody>\n        </Card>\n      </Col>\n    </Row>\n  </div>\n)\n\nexport default withState(injectState(ContactUs))\n","import React from 'react'\nimport CheckIcon from 'react-icons/lib/fa/check-circle'\n\nconst Footer = () => (\n  <footer\n    className=\"navbar fixed-bottom text-muted\"\n    style={{\n      backgroundColor: '#efefef',\n    }}\n  >\n    <div>\n      Tous les examens publiés sont vérfiés <CheckIcon size=\"20\" color=\"green\"/>{' '}\n    </div>\n    <div>© copyright Datcha Group</div>\n  </footer>\n)\n\nexport default Footer\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport PuzzleIcon from 'react-icons/lib/fa/puzzle-piece'\nimport React from 'react'\nimport {\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  CardImg,\n  UncontrolledTooltip,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport ContributeImg from '../imgs/contribute.png'\n\nconst ContributeCard = ({ history, state }) => (\n  <Card\n    style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}\n    className=\"h-100 hvr-sweep-to-bottom\"\n  >\n    <CardImg\n      top\n      width=\"100%\"\n      src={ContributeImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n    />\n    <span\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Contribuer&nbsp;\n        <PuzzleIcon size=\"22\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Vous avez passez un examen ? Pourquoi pas l'ajouter pour que vos\n        succusseurs en bénéficieront, ou peut être vous le trouverez quand vous\n        réviserez pour le concours. Vivez l'expérience du bénévolat et regardez\n        l'ampleur de votre contribution <EyeIcon /> avec Hakima QCM\n        <div style={{ marginTop: '10px' }}>\n          <Button\n            id=\"contribute-tooltip\"\n            onClick={() => {\n              if (state.logged) {\n                history.push('/contribuer')\n              } else {\n                history.push('/authenticate')\n              }\n            }}\n            style={{ backgroundColor: '#e63a3a' }}\n          >\n            Contribuer\n          </Button>\n          <UncontrolledTooltip placement=\"top\" target=\"contribute-tooltip\">\n            Dieu a dit: Quiconque viendra avec le bien aura dix fois autant. Al\n            An-aam-6-160\n          </UncontrolledTooltip>\n        </div>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ContributeCard)\n","import GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport React from 'react'\nimport { Card, CardBody, Button, CardText, CardImg } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport ExamImg from '../imgs/exam.png'\n\nconst ExamCard = ({ history, state }) => (\n  <Card\n    style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}\n    className=\"h-100 hvr-sweep-to-bottom\"\n  >\n    <CardImg\n      top\n      width=\"100%\"\n      style={{ cursor: 'pointer' }}\n      src={ExamImg}\n      alt=\"Card image cap\"\n      onClick={() => {\n        history.push('/examen')\n      }}\n    />\n    <span\n      onClick={() => {\n        history.push('/examen')\n      }}\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Passer un examen&nbsp;\n        <GraduateIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Envie de savoir où vous en êtes dans votre révision ? remontez le niveau\n        en passant des <strong>QCM</strong> en ligne. Vous voulez encore plus ?\n        Créer un compte et profitez du suvie de révision crée spécialement par\n        des experts de E-learning pour organiser votre révision.\n        <div style={{ marginTop: '10px' }}>\n          <Button\n            style={{ backgroundColor: '#e63a3a' }}\n            onClick={() => {\n              history.push('/examen')\n            }}\n          >\n            Passer un examen\n          </Button>\n        </div>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ExamCard)\n","import React from 'react'\nimport { Card, CardBody, CardText, CardImg } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PileStackIdeaImg from '../../imgs/pile-stack-idea.jpg'\nimport '../../style/hover.css'\n\nconst IdeaCard = ({ history, state }) => (\n  <Card\n    style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}\n    className=\"h-100 hvr-sweep-to-bottom\"\n  >\n    <CardImg\n      top\n      width=\"100%\"\n      src={PileStackIdeaImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Dites au revoir aux papeparasses, créez votre monde par vous même en\n        partageant les examens avec vos collègues ainsi pour les générations à\n        venir\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(IdeaCard)\n","import React from 'react'\nimport { Card, CardBody, CardText, CardImg } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PilePassword from '../../imgs/pile-password.jpg'\nimport '../../style/hover.css'\n\nconst SecurityCard = ({ history, state }) => (\n  <Card\n    style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}\n    className=\"h-100 hvr-sweep-to-bottom\"\n  >\n    <CardImg\n      top\n      width=\"100%\"\n      src={PilePassword}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Créez un compte et suivez votre révision jusqu'au concours\n      </CardText>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Hakima QCM vous aide à vous focaliser sur vos faiblesses\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SecurityCard)\n","import React from 'react'\nimport { Card, CardBody, CardText, CardImg } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PileStackLampImg from '../../imgs/pile-stack-lamp.jpg'\nimport '../../style/hover.css'\n\nconst SolutionCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100 hvr-sweep-to-bottom\">\n    <CardImg\n      top\n      width=\"100%\"\n      src={PileStackLampImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        <strong>Hakima QCM</strong> vous aide à\n        mieux réviser en organisant et triant les examens à votre place\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SolutionCard)\n","import React from 'react'\nimport { Card, CardBody, CardText, CardImg } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PileStackImg from '../../imgs/pile-stack.jpg'\nimport '../../style/hover.css'\n\nconst SolutionCard = ({ history, state }) => (\n  <Card\n    style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}\n    className=\"h-100 hvr-sweep-to-bottom\"\n  >\n    <CardImg\n      top\n      width=\"100%\"\n      src={PileStackImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Etudiant(e) en médecine ?\n      </CardText>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Marre d'acheter des EMD ?\n      </CardText>\n      <CardText style={{ textAlign: 'center', fontSize: '18px' }}>\n        Fatigué d'organiser votre révision ?\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SolutionCard)\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\n\nimport IdeaCard from './idea-card'\nimport SecurityCard from './security-card'\nimport SolutionCard from './solution-card'\nimport ProblemCard from './problem-card'\n\nconst IllustrationIdeaCard = ({ history, state }) => (\n  <Row>\n    <Col md=\"3\" xs=\"12\" style={{ marginBottom: '15px' }}>\n      <ProblemCard />\n    </Col>\n    <Col md=\"3\" xs=\"12\" style={{ marginBottom: '15px' }}>\n      <SolutionCard />\n    </Col>\n    <Col md=\"3\" xs=\"12\" style={{ marginBottom: '15px' }}>\n      <IdeaCard />\n    </Col>\n    <Col md=\"3\" xs=\"12\" style={{ marginBottom: '15px' }}>\n      <SecurityCard />\n    </Col>\n  </Row>\n)\n\nexport default injectState(IllustrationIdeaCard)\n","import React from 'react'\nimport BankIcon from 'react-icons/lib/fa/bank'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport moment from 'moment'\nimport { Badge, Button, Card, CardBody, Table, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport { map } from 'lodash'\nimport PublishedIcon from 'react-icons/lib/fa/cloud-upload'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\n\nimport '../style/hover.css'\n\nconst PublishedExams = ({ state, history }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center hvr-bounce-to-right\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Examens ajoutés Récements&nbsp;&nbsp;\n        <PublishedIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <Table hover size=\"sm\">\n        <tbody>\n          {!state.lastPostedExams ? (\n            <Row className=\"my-3\">\n              <Col md={{ size: 2, offset: 5 }}>\n                <br />\n                <div className=\"text-center\">\n                  <img\n                    src={LoadingIcon}\n                    width=\"50\"\n                    height=\"50\"\n                    alt=\"Loading...\"\n                  />\n                </div>\n              </Col>\n            </Row>\n          ) : state.lastPostedExams && state.lastPostedExams.length === 0 ? (\n            <h3 className=\"text-center text-muted\">\n              <br />\n              Pas d'examens ajoutés :( &nbsp;\n              <ExclamationIcon size=\"30\" />\n              <br />\n            </h3>\n          ) : (\n            map(state.lastPostedExams, exam => (\n              <tr>\n                <td className=\"text-center\">\n                  <h5>\n                    <Badge color=\"info\">\n                      <ModuleIcon />\n                      &nbsp;{exam.module}\n                    </Badge>\n                  </h5>\n                  <h5>\n                    <Badge color=\"light\">\n                      {moment(exam.examDate).format('DD-MM-YYYY')}\n                    </Badge>\n                  </h5>\n                </td>\n                <td>\n                  <h5>\n                    <Badge color=\"light\">\n                      <BankIcon /> {exam.university}\n                    </Badge>\n                  </h5>\n                </td>\n                <td className=\"align-items-center\">\n                  <h6>\n                    <EyeIcon size=\"18\" color=\"gray\" />\n                    &nbsp;\n                    <Badge color=\"light\">{exam.seen || 0}</Badge>\n                  </h6>\n                </td>\n                <td>\n                  <Button\n                    className=\"float-right hvr-icon-fade\"\n                    color=\"dark\"\n                    size=\"sm\"\n                    onClick={() => {\n                      history.push(`/examen/${exam._id}`)\n                    }}\n                  >\n                    &nbsp;\n                    <StartIcon size=\"18\" className=\"hvr-icon\" />\n                    &nbsp;\n                  </Button>\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </Table>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(PublishedExams)\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport ContributeCard from '../contribute-card'\nimport ExamCard from '../exam-card'\nimport IllustrationIdeaCard from '../illustration-idea-cards'\nimport PublishedExams from '../published-exams'\n\nconst withState = provideState({\n  initialState: () => ({\n    activeTab: 'authentication',\n  }),\n  effects: {\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n  },\n})\n\nconst Home = ({ effects, state, history }) => (\n  <div>\n    <IllustrationIdeaCard />\n    <br />\n    <Row>\n      <Col md=\"6\" style={{ marginBottom: '15px' }}>\n        <PublishedExams history={history} />\n      </Col>\n      <Col md=\"3\" style={{ marginBottom: '15px' }}>\n        <ContributeCard history={history} />\n      </Col>\n      <Col md=\"3\" style={{ marginBottom: '15px' }}>\n        <ExamCard history={history} />\n      </Col>\n    </Row>\n  </div>\n)\n\nexport default withState(injectState(Home))\n","import React, { Fragment } from 'react'\nimport RocketIcon from 'react-icons/lib/fa/rocket'\nimport { Badge, Button, Table, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport moment from 'moment'\n\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\nimport LoadingIcon from '../../../imgs/button-spinner.gif'\n\nconst withState = provideState({\n  effects: {\n    deleteExam: (effects, examId) => async state => {\n      try {\n        const objectId = new ObjectId(examId)\n        await state.mongodb.deleteOne({ _id: objectId })\n        effects.getPostedexamSessions()\n        effects.notifySuccess('Examen bien supprimé !')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst userSessions = ({ examSessions }) =>\n  !examSessions ? (\n    <Row className=\"my-3\">\n      <Col md={{ size: 2, offset: 5 }}>\n        <br />\n        <div className=\"text-center\">\n          <img src={LoadingIcon} width=\"50\" height=\"50\" alt=\"Loading...\" />\n        </div>\n      </Col>\n    </Row>\n  ) : (\n    <Table size=\"sm\">\n      <thead>\n        <th>Module</th>\n        <th>Progrès par rapports aux examens complétés</th>\n        <th>\n          <span className=\"float-right\">action</span>\n        </th>\n      </thead>\n      <tbody>\n        {examSessions && examSessions.length === 0 ? (\n          <h3 className=\"text-center text-muted\">\n            <br />\n            Pas de sessions ajoutés :( &nbsp;\n            <br />\n          </h3>\n        ) : (\n          <Fragment>\n            {map(examSessions, session => (\n              <tr>\n                <td>\n                  <h5>\n                    <Badge color=\"info\">{session.module}</Badge>\n                  </h5>\n                </td>\n                <td>\n                  <div className=\"progress\">\n                    <span\n                      className=\"progress-bar progress-bar-striped\"\n                      role=\"progressbar\"\n                      style={{ width: '70%' }}\n                      // aria-valuenow=\"50\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                    />\n                  </div>\n                  <h5>\n                    <span className=\"badge badge-light float-right\">\n                      {`0/${session.numberOfExistingExams} examen passé`}\n                    </span>\n                  </h5>\n                </td>\n                <td>\n                  <Link\n                    className=\"btn btn-dark btn-sm float-right hvr-icon-fade hvr-icon-float-away\"\n                    target=\"_blank\"\n                    to={`/contribuer/${session._id.toString()}`}\n                  >\n                    Suivre <RocketIcon className=\"hvr-icon\" />\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </Fragment>\n        )}\n      </tbody>\n    </Table>\n  )\n\nexport default withState(injectState(userSessions))\n","import PlusIcon from 'react-icons/lib/fa/plus'\nimport React, { Fragment } from 'react'\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport Modules from '../../data/modules.json'\nimport UserSessions from './user-sessions'\nimport ActionButton from '../../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    examSessions: undefined,\n    module: '',\n  }),\n  effects: {\n    initialize: async effects => {\n      await effects.getUserExamSessions()\n    },\n    handleSessionInputs: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    getUserExamSessions: effects => async state => {\n      try {\n        const _examSessions = await state.mongodb\n          .find(\n            { type: 'review', creator: state.authId },\n            {\n              sort: { date: -1 },\n            }\n          )\n          .asArray()\n        for (let session of _examSessions) {\n          const numberOfExams = await state.mongodb.count({\n            type: 'exam',\n            module: session.module,\n          })\n          session.numberOfExistingExams = numberOfExams\n        }\n        state.examSessions = _examSessions\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    createReviewSession: effects => async state => {\n      try {\n        // Verifying if session exists\n        const cursor = await state.mongodb\n          .find({\n            type: 'review',\n            creator: state.authId,\n            module: state.module,\n          })\n          .iterator()\n        const res = await cursor.next()\n        if (res) {\n          effects.notifyError(\n            'Vous avez déjà ouvert une session pour ce module !'\n          )\n        } else {\n          // Start creating the session\n          await state.mongodb.insertOne({\n            type: 'review',\n            creator: state.authId,\n            module: state.module,\n            date: Date.now(),\n          })\n          effects.notifySuccess(\n            'Session créée avec succés, Vous pouvez la commencer en appuyant sur le boutton [suivre] sur votre tableau de révision dessous'\n          )\n          await effects.getUserExamSessions()\n        }\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst ReviewSessions = ({ effects, state }) => (\n  <Fragment>\n    <Row>\n      <Col>\n        <span className=\"text-muted\" style={{ fontSize: '16px' }}>\n          Suivez votre révision en créant une session pour le module que vous\n          souhaitez réviser\n        </span>\n        <span className=\"float-right\">\n          <Form id=\"session-form\">\n            <FormGroup>\n              <InputGroup>\n                <Input\n                  name=\"module\"\n                  onChange={effects.handleSessionInputs}\n                  required\n                  type=\"select\"\n                  value={state.module}\n                  disabled={state.addExamStarted}\n                >\n                  <option value=\"\">Module *</option>\n                  {Modules &&\n                    map(Modules, module => (\n                      <option key={module} value={module}>\n                        {module}\n                      </option>\n                    ))}\n                </Input>\n                <InputGroupAddon\n                  addonType=\"append\"\n                  style={{ cursor: 'pointer' }}\n                >\n                  <ActionButton\n                    className=\"hvr-icon-forward\"\n                    text={\n                      <span>\n                        Créer une session <PlusIcon className=\"hvr-icon\" />\n                      </span>\n                    }\n                    color=\"info\"\n                    action={effects.createReviewSession}\n                    form=\"session-form\"\n                  />\n                </InputGroupAddon>\n              </InputGroup>\n            </FormGroup>\n          </Form>\n        </span>\n      </Col>\n    </Row>\n    <hr />\n    <Row>\n      <Col>\n        <span className=\"text-muted\">Mes sessions de révision</span>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <UserSessions examSessions={state.examSessions} />\n      </Col>\n    </Row>\n  </Fragment>\n)\n\nexport default withState(injectState(ReviewSessions))\n","import GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport UserPlusIcon from 'react-icons/lib/fa/user-plus'\nimport UserIcon from 'react-icons/lib/fa/user-md'\nimport React from 'react'\nimport ReviewSessions from './review-sessions'\nimport { Button, Card, CardBody, CardText, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport CuteKoala from '../imgs/cute_koala.jpg'\n\nconst withState = provideState({\n  initialState: () => ({}),\n  effects: {},\n})\n\nconst MyReviewCard = ({ history, state, effects }) =>\n  state.logged ? (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        style={{\n          backgroundColor: '#7bc3d1',\n          color: 'white',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n        className=\"text-center\"\n      >\n        <h5 style={{ marginTop: '10px' }}>\n          Ma révision&nbsp;\n          <GraduateIcon size=\"22\" />\n        </h5>\n      </span>\n      <CardBody>\n        <CardText>\n          <ReviewSessions />\n        </CardText>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <CardBody>\n        <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n          <Row>\n            <Col>\n              Voulez vous suivre votre révision ? trier les examens déjà passé ?\n              avoir la possibilité de voir votre progression ?\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              Créez un compte et profitez du suivie intelligent de{' '}\n              <strong>Hakima QCM</strong>\n            </Col>\n          </Row>\n          <br />\n          <Row style={{ marginBottom: '10px' }}>\n            <Col>\n              <Button\n                color=\"dark\"\n                onClick={() => {\n                  history.push('/authenticate?toggle=authentication')\n                }}\n                className=\"hvr-icon-fade\"\n              >\n                Se connecter&nbsp;\n                <UserIcon size=\"18\" className=\"hvr-icon\" />\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                color=\"info\"\n                onClick={() => {\n                  history.push('/authenticate?toggle=createAccount')\n                }}\n                className=\"hvr-icon-fade\"\n              >\n                Créer un compte&nbsp;\n                <UserPlusIcon size=\"18\" className=\"hvr-icon\" />\n              </Button>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col>\n              <div className=\"text-center\">\n                <img\n                  src={CuteKoala}\n                  alt=\"cute koala\"\n                  height=\"200\"\n                  width=\"200\"\n                />\n              </div>\n            </Col>\n          </Row>\n        </CardText>\n      </CardBody>\n    </Card>\n  )\n\nexport default withState(injectState(MyReviewCard))\n","import PlusIcon from 'react-icons/lib/fa/plus-square-o'\nimport MinusIcon from 'react-icons/lib/fa/minus-square-o'\nimport React from 'react'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport moment from 'moment'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport { Badge, Button, Row, Col, Table } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport LoadingIcon from '../../../imgs/button-spinner.gif'\n\nconst withState = provideState({\n  initialState: () => ({\n    collapseExams: false,\n    loadingExams: false,\n    exams: undefined,\n  }),\n  effects: {\n    toggleExams: effects => async state => {\n      if (!state.collapseExams) {\n        await effects.getExamsByYearAndUniv()\n      }\n      return {\n        ...state,\n        collapseExams: !state.collapseExams,\n      }\n    },\n    getExamsByYearAndUniv: () => async (\n      state,\n      { year, university, _module }\n    ) => {\n      state.loadingExams = true\n      const result = await state.mongodb\n        .find(\n          {\n            type: 'exam',\n            module: _module,\n            university: university,\n            examDate: {\n              $lte: moment(`30/12/${year}`, 'DD-MM-YYYY').valueOf(),\n              $gte: moment(`01/01/${year}`, 'DD-MM-YYYY').valueOf(),\n            },\n          },\n          {\n            sort: { examDate: -1 },\n            projection: {\n              _id: 1,\n              examDate: 1,\n              university: 1,\n              module: 1,\n              seen: 1,\n            },\n          }\n        )\n        .asArray()\n      state.exams = result\n      state.loadingExams = false\n    },\n  },\n})\n\nconst UnivByYear = ({ state, effects, history, university }) => (\n  <Row>\n    <Col>\n      <span\n        style={{ cursor: 'pointer' }}\n        onClick={effects.toggleExams}\n        className=\"hvr-bounce-in\"\n      >\n        {state.loadingExams ? (\n          <img src={LoadingIcon} alt=\"loading\" height=\"20\" width=\"20\" />\n        ) : !state.collapseExams ? (\n          <PlusIcon size=\"20\" />\n        ) : (\n          <MinusIcon size=\"20\" />\n        )}\n        {university}\n      </span>\n      {state.collapseExams && state.exams && state.exams.length === 0 && (\n        <div style={{ marginLeft: '10px' }} className=\"text-muted\">\n          Pas d'examens trouvés\n        </div>\n      )}\n      {state.collapseExams && state.exams && state.exams.length > 0 && (\n        <Table hover size=\"sm\">\n          <tbody>\n            {map(state.exams, exam => (\n              <tr>\n                <td className=\"text-center\">\n                  <h5>\n                    <Badge color=\"info\">{exam.module}</Badge>\n                  </h5>\n                  <h5>\n                    <Badge color=\"light\">\n                      {moment(exam.examDate).format('DD-MM-YYYY')}\n                    </Badge>\n                  </h5>\n                </td>\n                <td>\n                  <h5>\n                    <Badge color=\"light\">{exam.seen || 0}</Badge> &nbsp;\n                    <EyeIcon size=\"20\" />\n                  </h5>\n                </td>\n                <td>\n                  <Button\n                    color=\"dark\"\n                    size=\"sm\"\n                    onClick={() => {\n                      history.push(`/examen/${exam._id}`)\n                    }}\n                    className=\"hvr-icon-fade\"\n                  >\n                    &nbsp;\n                    <StartIcon size=\"18\" className=\"hvr-icon\" />\n                    &nbsp;\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(UnivByYear))\n","import PlusIcon from 'react-icons/lib/fa/plus-square-o'\nimport MinusIcon from 'react-icons/lib/fa/minus-square-o'\nimport React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport Universities from '../../../data/cities'\nimport ExamsByYearUniv from '../exams-by-year-univ'\n\nconst withState = provideState({\n  initialState: () => ({\n    collapse: false,\n  }),\n  effects: {\n    toggle: () => state => {\n      state.collapse = !state.collapse\n    },\n  },\n})\n\nconst UnivByYear = ({ state, effects, year, _module, history }) => (\n  <Row>\n    <Col>\n      <span\n        style={{ cursor: 'pointer' }}\n        onClick={effects.toggle}\n        className=\"hvr-bounce-in\"\n      >\n        {!state.collapse ? <PlusIcon size=\"20\" /> : <MinusIcon size=\"20\" />}{' '}\n        {year}\n      </span>\n      {state.collapse &&\n        map(Universities, university => (\n          <div style={{ marginLeft: '10px' }}>\n            <ExamsByYearUniv\n              _module={_module}\n              year={year}\n              university={university.nom}\n              history={history}\n            />\n          </div>\n        ))}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(UnivByYear))\n","import PlusIcon from 'react-icons/lib/fa/plus-square-o'\nimport MinusIcon from 'react-icons/lib/fa/minus-square-o'\nimport React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport UnivByYear from '../univ-by-year'\n\nconst generateYears = () => {\n  const years = []\n  for (\n    let y = new Date().getFullYear();\n    y > new Date().getFullYear() - 15;\n    y--\n  ) {\n    years.push(y)\n  }\n  return years\n}\n\nconst withState = provideState({\n  initialState: () => ({\n    collapse: false,\n  }),\n  effects: {\n    toggle: () => state => {\n      state.collapse = !state.collapse\n    },\n  },\n})\n\nconst ModuleByYear = ({ state, effects, history, _module }) => (\n  <Row>\n    <Col>\n      <span\n        style={{ cursor: 'pointer' }}\n        onClick={effects.toggle}\n        className=\"hvr-bounce-in\"\n      >\n        {!state.collapse ? <PlusIcon size=\"20\" /> : <MinusIcon size=\"20\" />}{' '}\n        {_module}\n      </span>\n      {state.collapse &&\n        map(generateYears(), year => (\n          <div style={{ marginLeft: '10px' }}>\n            <UnivByYear _module={_module} year={year} history={history} />\n          </div>\n        ))}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(ModuleByYear))\n","import BookIcon from 'react-icons/lib/fa/book'\nimport React from 'react'\nimport Modules from '../../data/modules'\nimport { Card, CardBody } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport { map } from 'lodash'\nimport ModuleByYear from './module-by-year'\n\nconst ExamExplorer = ({ state, history }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center hvr-bounce-to-right\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n        Explorateur d'examens&nbsp;\n        <BookIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody\n      style={{\n        height: '300px',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        fontSize: '18px',\n      }}\n    >\n      {map(Modules, _module => (\n        <ModuleByYear history={history} _module={_module} />\n      ))}\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ExamExplorer)\n","import AddExamIcon from 'react-icons/lib/md/control-point'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport SearchIcon from 'react-icons/lib/fa/search'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport React, { Fragment } from 'react'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport moment from 'moment'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Table,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport ActionButton from '../../components/action-button'\nimport CuteKoala from '../../imgs/cute_koala.jpg'\nimport Universities from '../../data/cities'\nimport Modules from '../../data/modules'\n\nconst generateYears = () => {\n  const years = []\n  for (\n    let y = new Date().getFullYear();\n    y > new Date().getFullYear() - 25;\n    y--\n  ) {\n    years.push(y)\n  }\n  return years\n}\n\nconst withState = provideState({\n  initialState: () => ({\n    module: '',\n    year: '',\n    _university: '',\n    searchResult: undefined,\n  }),\n  effects: {\n    handleExamValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    handleSearchExam: () => async state => {\n      let _examDate = {}\n      if (state.year !== '') {\n        _examDate = {\n          examDate: {\n            $lte: moment(`30/12/${state.year}`, 'DD-MM-YYYY').valueOf(),\n            $gte: moment(`01/01/${state.year}`, 'DD-MM-YYYY').valueOf(),\n          },\n        }\n      }\n      const result = await state.mongodb\n        .find(\n          {\n            type: 'exam',\n            module: state.module,\n            university: state._university,\n            ..._examDate,\n          },\n          {\n            projection: {\n              _id: 1,\n              examDate: 1,\n              university: 1,\n              module: 1,\n              seen: 1,\n            },\n          }\n        )\n        .asArray()\n      state.searchResult = result\n    },\n  },\n})\n\nconst SearchExams = ({ history, state, effects }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center hvr-bounce-to-right\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n        Chercher un examen &nbsp;\n        <SearchIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText>\n        <Form id=\"search-exam-form\">\n          <FormGroup>\n            <Input\n              name=\"module\"\n              onChange={effects.handleExamValues}\n              required\n              type=\"select\"\n              value={state.module}\n              disabled={state.addExamStarted}\n            >\n              <option value=\"\">Module *</option>\n              {Modules &&\n                map(Modules, module => (\n                  <option key={module} value={module}>\n                    {module}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              name=\"_university\"\n              onChange={effects.handleExamValues}\n              required\n              type=\"select\"\n              value={state._university}\n              disabled={state.addExamStarted}\n            >\n              <option value=\"\">Université *</option>\n              {Universities &&\n                map(Universities, university => (\n                  <option key={university.code} value={university.nom}>\n                    {`${university.code} - ${university.nom}`}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              name=\"year\"\n              onChange={effects.handleExamValues}\n              type=\"select\"\n              value={state.year}\n            >\n              <option value=\"\">Année</option>\n              {Modules &&\n                map(generateYears(), year => (\n                  <option key={year} value={year}>\n                    {year}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n          <ActionButton\n            text={\n              <span>\n                Chercher &nbsp; <SearchIcon />\n              </span>\n            }\n            action={effects.handleSearchExam}\n            block={true}\n            form=\"search-exam-form\"\n          />\n        </Form>\n        <br />\n        {state.searchResult !== undefined ? (\n          <Fragment>\n            <span className=\"text-muted\">Résultat de recherches</span>\n            <hr />\n          </Fragment>\n        ) : (\n          <div className=\"text-center\">\n            <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n          </div>\n        )}\n        <div>\n          {state.searchResult && state.searchResult.length === 0 ? (\n            <div className=\"text-center text-muted\">\n              <br />\n              <h3>\n                Pas d'examens trouvés :( &nbsp;\n                <ExclamationIcon size=\"30\" />\n              </h3>\n              <br />\n              <div>\n                <Button\n                  color=\"warning\"\n                  onClick={() => {\n                    if (state.logged) {\n                      history.push(\n                        `/contribuer?module=${state.module}&university=${\n                          state._university\n                        }`\n                      )\n                    } else {\n                      history.push('/authenticate')\n                    }\n                  }}\n                >\n                  Saisir cet examen <AddExamIcon size=\"18\" />\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <Table size=\"sm\" hover>\n              <tbody>\n                {map(state.searchResult, exam => (\n                  <tr>\n                    <td className=\"text-center\">\n                      <h5>\n                        <Badge color=\"info\">\n                          <ModuleIcon />\n                          &nbsp;{exam.module}\n                        </Badge>\n                      </h5>\n                      <h5>\n                        <Badge color=\"light\">\n                          {moment(exam.examDate).format('DD-MM-YYYY')}\n                        </Badge>\n                      </h5>\n                    </td>\n                    <td>\n                      <h5>\n                        <Badge color=\"light\">{exam.seen || 0}</Badge> &nbsp;\n                        <EyeIcon size=\"20\" />\n                      </h5>\n                    </td>\n                    <td>\n                      <Button\n                        size=\"sm\"\n                        className=\"hvr-icon-fade\"\n                        color=\"dark\"\n                        onClick={() => {\n                          history.push(`/examen/${exam._id}`)\n                        }}\n                      >\n                        &nbsp;\n                        <StartIcon size=\"18\" className=\"hvr-icon\" />\n                        &nbsp;\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </div>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default withState(injectState(SearchExams))\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport ExamExplorer from './exam-explorer'\nimport SearchExams from './search-exam'\n\nconst withState = provideState({\n  initialState: () => ({\n    addExamView: false,\n    initialExamData: undefined,\n    examLoading: false,\n  }),\n  effects: {\n    displayExamView: () => state => ({\n      ...state,\n      addExamView: true,\n    }),\n    hideExamView: () => state => ({\n      ...state,\n      addExamView: false,\n    }),\n  },\n})\n\nconst PassExam = ({ effects, state, history }) => (\n  <div style={{ marginTop: '20px' }}>\n    <Row>\n      <Col md=\"6\">\n        <Row>\n          <Col>\n            <SearchExams history={history} />\n          </Col>\n        </Row>\n      </Col>\n      <Col md=\"6\">\n        <ExamExplorer history={history} />\n      </Col>\n    </Row>\n  </div>\n)\n\nexport default withState(injectState(PassExam))\n","import React from 'react'\nimport { Card, CardBody, CardText, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport { Link } from 'react-router-dom'\n\nimport PandaKoalaImg from '../imgs/panda_koala.jpg'\n\nconst WhoRus = ({ history, state }) => (\n  <Card\n    style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)', fontSize: '18px' }}\n    className=\"h-100\"\n  >\n    <CardBody>\n      <CardText>\n        Nous sommes une équipe qui travaille sur le E-learning. Nous veillons à\n        vous offrir les meilleurs moyens pour mémoriser l'information et la\n        faire graver au plus profond de vos cerveaux.\n      </CardText>\n      <CardText>\n        Nous utilisons l'intelligence artificiel pour identifier les choses que\n        vous avez mal à retenir, ensuite, appuyer là dessus pour vous aider à\n        surmonter tous les défis de la révision par qcm.\n      </CardText>\n      <CardText>\n        Toutes fois, nous avons besoin de votre{' '}\n        <Link target=\"_blank\" to=\"/contribuer\">\n          collaboration\n        </Link>{' '}\n        que ce soit dans la saisit des examens où dans les{' '}\n        <Link target=\"_blank\" to=\"/contacteznous\">\n          retours\n        </Link>{' '}\n        de votre expérience de l'utilisation de <strong>Hakima QCM</strong>.\n      </CardText>\n      <CardText>\n        Nous avons besoin de coopérer, avoir le sens de partage, être\n        responsable de l'enseignement des générations à venir. Je vous invite à{' '}\n        <Link target=\"_blank\" to=\"/authenticate?toggle=createAccount\">\n          créer à un compte\n        </Link>{' '}\n        et ajouter qu'un seul examen, laissez votre trace avant de vous lancer\n        dans la vie professionel. Votre contribution sera une aide pour des\n        milliers d'étudiants qui vont vous succéder et vous sera aussi très\n        bénifique quand vous préparerez pour le <strong>concours</strong>. Or,\n        si vous êtes croyant, votre contribution sera un aumône perpetuel que\n        vous trouverez dans l'haut delàs.\n      </CardText>\n      <hr />\n      <CardText>\n        <div>\n          <a href=\"mailto:ghemidp8@gmail.com\" className=\"float-right\">\n            Contactez le développeur{' '}\n          </a>\n        </div>\n      </CardText>\n    </CardBody>\n    <Row>\n      <Col>\n        <div className=\"text-center\">\n          <img src={PandaKoalaImg} alt=\"panda koala\" width=\"300\" height=\"300\" />\n        </div>\n        <div className=\"text-muted text-center\">Memory of Koala and Panda</div>\n      </Col>\n    </Row>\n    <br />\n  </Card>\n)\n\nexport default injectState(WhoRus)\n","import Cookies from 'js-cookie'\nimport React, { Fragment } from 'react'\nimport ContributeIcon from 'react-icons/lib/fa/puzzle-piece'\nimport GroupIcon from 'react-icons/lib/fa/group'\nimport EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport HomeIcon from 'react-icons/lib/fa/home'\nimport ConcoursIcon from 'react-icons/lib/fa/briefcase'\nimport {\n  Stitch,\n  RemoteMongoClient,\n  StitchServiceError,\n  AnonymousCredential,\n} from 'mongodb-stitch-browser-sdk'\nimport { Helmet } from 'react-helmet'\nimport {\n  Badge,\n  Container,\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { ToastContainer, toast } from 'react-toastify'\nimport {\n  HashRouter as Router,\n  Link,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport { provideState, injectState } from 'reaclette'\nimport { isEmpty } from 'lodash'\n\nimport AccountMenu from './account-menu'\nimport Admin from './admin'\nimport AppIcon from './imgs/app-icon-brand.png'\nimport AuthOrCreate from './auth-or-create'\nimport ConfirmPage from './confirm-page'\nimport ConfirmReset from './confirm-reset'\nimport ContactUs from './contact-us'\nimport ContestExam from './contest-exam'\nimport Contribuate from './contribuate'\nimport Exam from './pass-exam/exam'\nimport ExamMenuNav from './exam-menu-nav'\nimport ExamSession from './my-review/exam-session'\nimport Footer from './footer'\nimport HomePage from './home'\nimport LoadingIcon from './imgs/button-spinner.gif'\nimport MyReview from './my-review'\nimport PassExam from './pass-exam'\nimport WhoRUs from './who-r-us'\n\nimport './style/hover.css'\n\nconst withState = provideState({\n  initialState: () => ({\n    authId: undefined,\n    authEmail: undefined,\n    university: undefined,\n    mongodb: undefined,\n    serverInstance: undefined,\n    userNotConfirmed: undefined,\n    postedExams: undefined,\n    adminLogged: false,\n    lastPostedExams: undefined,\n    noNeedToAuthenticate: false,\n    authLoading: true,\n    navbarCollapse: true,\n  }),\n  effects: {\n    initialize: effects => async state => {\n      state.authLoading = true\n      const server = Stitch.initializeDefaultAppClient('med-dz-qcm-idjwm')\n      state.serverInstance = server\n      state.mongodb = server\n        .getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas')\n        .db('med-dz-qcm')\n        .collection('qcm')\n      if (server.auth.user) {\n        // logged\n        if (server.auth.user.loggedInProviderName !== 'anon-user') {\n          effects.signIn(server.auth.user.id)\n        }\n      } else {\n        // user not logged\n        try {\n          await server.auth.loginWithCredential(new AnonymousCredential())\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n      await effects.handleAppQueryString()\n      state.authLoading = false\n      await effects.getLastPostedExams()\n      // await state.mongodb.deleteMany({ creator: state.authId })\n      // console.log(await state.mongodb.find({}).asArray())\n    },\n    setAuthEmail: (_, authEmail) => state => ({\n      ...state,\n      authEmail,\n    }),\n    setAdminLogged: effects => state => {\n      state.adminLogged = true\n    },\n    logOut: () => state => {\n      state.serverInstance.auth.logout()\n      state.authId = undefined\n    },\n    getPostedExams: effects => async state => {\n      try {\n        const exams = await state.mongodb\n          .find(\n            { creator: state.authId, type: 'exam' },\n            {\n              projection: {\n                _id: 1,\n                examDate: 1,\n                date: 1,\n                approved: 1,\n                completed: 1,\n                university: 1,\n                module: 1,\n                seen: 1,\n              },\n            }\n          )\n          .asArray()\n        state.postedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    getLastPostedExams: effects => async state => {\n      try {\n        const exams = await state.mongodb\n          .find(\n            { approved: true },\n            {\n              limit: 7,\n              sort: { date: -1 },\n              projection: {\n                _id: 1,\n                examDate: 1,\n                university: 1,\n                module: 1,\n                seen: 1,\n              },\n            }\n          )\n          .asArray()\n        state.lastPostedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    handleAppQueryString: () => state => {\n      const url = window.location.search\n      const params = new URLSearchParams(url)\n      const token = params.get('token')\n      const tokenId = params.get('tokenId')\n      const method = params.get('method')\n\n      if (token && tokenId) {\n        state.noNeedToAuthenticate = true\n        if (method === 'confirm') {\n          const route = `${window.location.origin}${\n            window.location.pathname\n          }#/confirm?token=${token}&tokenId=${tokenId}`\n          window.location.replace(route)\n        }\n\n        if (method === 'reset') {\n          const route = `${window.location.origin}${\n            window.location.pathname\n          }#/reset?token=${token}&tokenId=${tokenId}`\n          window.location.replace(route)\n        }\n      }\n    },\n    notifyError: (_, errorMessage) => state => {\n      toast.error(errorMessage, {\n        position: 'top-right',\n        autoClose: 15000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n    },\n    notifySuccess: (_, errorMessage) => state => {\n      toast.success(errorMessage, {\n        position: 'top-right',\n        autoClose: 15000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n    },\n    handleError: async (effects, error) => {\n      console.log(error)\n      if (error instanceof StitchServiceError) {\n        await effects.notifyError(error.message)\n      } else {\n        await effects.notifyError(\n          \"Oops, something went wrong! Don't worry, our team is already on it\"\n        )\n      }\n    },\n    getUserAccount: (effects, authId) => async state => {\n      const university = Cookies.get('university') || 'Alger'\n      state.university = university\n      let user\n      try {\n        user = await state.mongodb\n          .find({ type: 'user', authId, university })\n          .asArray()\n      } catch (error) {\n        effects.handleError(error)\n      }\n      if (isEmpty(user)) {\n        try {\n          await state.mongodb.insertOne({ type: 'user', authId, university })\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n    },\n    signIn: (effects, authId) => async state => {\n      await effects.getUserAccount(authId)\n      Cookies.set('authId', authId)\n      state.authId = authId\n      effects.getPostedExams()\n    },\n    toggleNavbar: () => state => ({\n      ...state,\n      navbarCollapse: !state.navbarCollapse,\n    }),\n  },\n  computed: {\n    logged: ({ authId }) => Boolean(authId),\n  },\n})\n\nconst App = ({ effects, state }) => (\n  <div className=\"App\">\n    <Helmet>\n      <title>Hakima QCM</title>\n    </Helmet>\n    <ToastContainer\n      position=\"top-center\"\n      autoClose={20000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnVisibilityChange\n      draggable\n      pauseOnHover\n    />\n    {state.authLoading ? (\n      <Row className=\"my-3\">\n        <Col md={{ size: 2, offset: 5 }}>\n          <br />\n          <div className=\"text-center\">\n            <img src={LoadingIcon} width=\"50\" height=\"50\" alt=\"Loading...\" />\n          </div>\n          <p className=\"text-muted text-center\">\n            Application en chargement ...\n          </p>\n        </Col>\n      </Row>\n    ) : (\n      state.mongodb &&\n      state.serverInstance && (\n        <Router>\n          <Row>\n            <Col xs=\"12\" md=\"12\">\n              <Navbar\n                light\n                expand=\"lg\"\n                style={{\n                  backgroundColor: '#222534',\n                  fontSize: '16px',\n                  boxShadow: '0 3px 5px rgba(0,0,0,.1)',\n                }}\n              >\n                <NavbarBrand\n                  href=\"#\"\n                  style={{ margin: 0 }}\n                  className=\"hvr-icon-spin\"\n                >\n                  <img\n                    src={AppIcon}\n                    alt=\"icon\"\n                    height=\"50\"\n                    width=\"60\"\n                    className=\"hvr-icon\"\n                  />{' '}\n                  <span\n                    style={{\n                      color: 'white',\n                      fontSize: '22px',\n                      verticalAlign: 'middle',\n                    }}\n                  >\n                    Haki<strong style={{ color: '#7bc3d1' }}>ma</strong> QCM\n                  </span>\n                </NavbarBrand>\n                <NavbarToggler\n                  onClick={effects.toggleNavbar}\n                  className=\"mr-2\"\n                  style={{ backgroundColor: '#e2e3e4' }}\n                />\n                <Collapse isOpen={!state.navbarCollapse} navbar>\n                  <Nav className=\"ml-auto\" navbar>\n                    <NavItem active={false} className=\"hvr-icon-fade\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/accueil\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <HomeIcon size=\"20\" className=\"hvr-icon\" /> Accueil\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"hvr-icon-fade\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to={\n                          state.logged\n                            ? '/contribuer'\n                            : '/authenticate?toggle=authentication'\n                        }\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <ContributeIcon size=\"20\" className=\"hvr-icon\" />{' '}\n                        Contribuer\n                      </NavLink>\n                    </NavItem>\n                    <ExamMenuNav />\n                    <NavItem className=\"hvr-icon-fade\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/concours\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <ConcoursIcon size=\"18\" className=\"hvr-icon\" /> Passer\n                        un concours{' '}\n                        <Badge style={{ backgroundColor: '#e63a3a' }}>\n                          New\n                        </Badge>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"hvr-icon-fade\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/quisommesnous\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <GroupIcon size=\"20\" className=\"hvr-icon\" /> Qui sommes\n                        nous ?\n                      </NavLink>\n                    </NavItem>\n                    <NavItem className=\"hvr-icon-fade\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/contacteznous\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <EnvelopeIcon size=\"20\" className=\"hvr-icon\" />{' '}\n                        Contacter nous\n                      </NavLink>\n                    </NavItem>\n                    &nbsp;\n                    {!state.logged && (\n                      <Fragment>\n                        <Link\n                          className=\"btn btn-light\"\n                          to={`/authenticate?toggle=createAccount`}\n                        >\n                          S'inscrire\n                        </Link>\n                        &nbsp;\n                        <Link\n                          className=\"btn btn-info\"\n                          to={`/authenticate?toggle=authentication`}\n                        >\n                          Se connecter\n                        </Link>\n                      </Fragment>\n                    )}\n                    {state.logged && <AccountMenu />}\n                  </Nav>\n                </Collapse>\n              </Navbar>\n              <Container fluid style={{ marginTop: '20px' }}>\n                <Row>\n                  <Col md={{ size: 10, offset: 1 }} xs=\"12\">\n                    <Switch>\n                      <Route exact path=\"/accueil\" component={HomePage} />\n                      <Route exact path=\"/\" component={HomePage} />\n                      <Route path=\"/admin\" component={Admin} />\n                      <Route path=\"/confirm\" component={ConfirmPage} />\n                      <Route path=\"/contacteznous\" component={ContactUs} />\n                      <Route path=\"/concours\" component={ContestExam} />\n                      <Route path=\"/reset\" component={ConfirmReset} />\n                      <Route path=\"/authenticate\" component={AuthOrCreate} />\n                      <Route exact path=\"/examen\" component={PassExam} />\n                      <Route path=\"/examen/:examId\" component={Exam} />\n                      <Route path=\"/quisommesnous\" component={WhoRUs} />\n                      <Route exact path=\"/marevision\" component={MyReview} />\n                      <Route\n                        exact\n                        path=\"/marevision/:reviewId\"\n                        component={ExamSession}\n                      />\n                      {state.logged && (\n                        <Fragment>\n                          <Route\n                            exact\n                            path=\"/contribuer\"\n                            component={Contribuate}\n                          />\n                          <Route\n                            path=\"/contribuer/:examId\"\n                            component={Contribuate}\n                          />\n                        </Fragment>\n                      )}\n                      <Route exact component={HomePage} />\n                    </Switch>\n                  </Col>\n                </Row>\n              </Container>\n            </Col>\n          </Row>\n        </Router>\n      )\n    )}\n    <Footer />\n  </div>\n)\n\nexport default withState(injectState(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style/general-style.css'\nimport './style/hover.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cute_koala.4127e90e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/app-icon-brand.47dd4006.png\";"],"sourceRoot":""}