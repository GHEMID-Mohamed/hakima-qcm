{"version":3,"sources":["imgs/exam-date.jpg","imgs/exam-correct-answers.png","imgs/contribute.png","imgs/exam.png","imgs/pile-stack-idea.jpg","imgs/pile-password.jpg","imgs/pile-stack-lamp.jpg","imgs/pile-stack.jpg","imgs/share-exam.png","imgs/search-exam.png","imgs/button-spinner.gif","pass-exam/exam/report-exam/index.js","components/action-button.js","admin/admin-authentication/index.js","components/sorted-table.js","utils.js","admin/admin-exams/index.js","admin/admin-reports/index.js","admin/admin-messages/index.js","admin/index.js","reset-password-form/index.js","authentication-form/index.js","data/cities.js","create-account/index.js","auth-or-create/index.js","account-menu/index.js","user-added-exams/index.js","components/modal-img/index.js","question-form/index.js","exam-form/index.js","contribuate/index.js","contact-us/index.js","contest-exam/index.js","contribute-card/index.js","exam-card/index.js","illustration-idea-cards/idea-card/index.js","illustration-idea-cards/security-card/index.js","illustration-idea-cards/solution-card/index.js","illustration-idea-cards/problem-card/index.js","illustration-idea-cards/index.js","published-exams/index.js","share-exam-card/index.js","search-exam-card/index.js","home/index.js","confirm-page/index.js","confirm-reset/index.js","footer/index.js","pass-exam/exam-with-answers/index.js","pass-exam/exam/index.js","pass-exam/passed-exams/index.js","pass-exam/exam-explorer/exams-by-year-univ/index.js","pass-exam/exam-explorer/univ-by-year/index.js","pass-exam/exam-explorer/module-by-year/index.js","pass-exam/exam-explorer/index.js","pass-exam/search-exam/index.js","pass-exam/index.js","App.js","serviceWorker.js","index.js","imgs/cute_koala.jpg","imgs/app-icon-brand.png"],"names":["module","exports","__webpack_require__","p","_inputRef","withState","provideState","initialState","loading","effects","initialize","_","_ref","form","document","getElementById","addEventListener","executeAction","event","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee","state","_ref2","action","afterEffect","wrap","_context","prev","next","preventDefault","t0","console","log","handleError","stop","this","_x","_x2","apply","arguments","finalize","_ref4","removeEventListener","injectState","_ref5","color","disabled","outline","text","width","props","block","style","concat","type","onClick","react_default","createElement","reactstrap_es","assign","src","ButtonSpinner","alt","height","id","password","handleId","value","target","objectSpread","handlePassword","loginAdmin","credential","UserPasswordCredential","serverInstance","auth","loginWithCredential","sent","setAdminLogged","notifyError","body","marginTop","className","marginBottom","wrench_default","placeholder","onChange","required","action_button","fontWeight","InputDebounced","debounceDecorator","Input","page","sortDirection","initialSortDirection","undefined","sortIteratee","initialSortIteratee","selectPreviousPage","_setPage","selectNextPage","setPage","_ref2$target","dataset","numberofpages","sortBy","currentTarget","computed","numberItemsPerPage","itemsPerPage","sortedValues","_ref6","filteredCollection","iteratee","orderBy","obj","toLowerCase","numberOfPages","_ref7","Math","ceil","length","visibleValues","_ref8","slice","_ref9","collection","columns","data","filter","pagination","uniqueKey","md","size","offset","LoadingIcon","exclamation_default","hover","striped","map","column","key","name","data-sort-iteratee","cursor","caret_down_default","caret_up_default","sort_default","verticalAlign","itemRenderer","addonType","angle_left_default","data-numberofpages","angle_right_default","generateKey","random","toString","substring","allPostedExams","allUnpostedExams","activeTab","getAllPostedExams","getAllUnPostedExams","exams","mongodb","find","completed","sort","date","asArray","toggle","_callee2","_context2","acceptExam","_callee3","objectId","_context3","ObjectId","updateOne","_id","$set","approved","upsert","getLastPostedExams","_x3","declineExam","_callee4","_context4","_x4","deleteExam","examId","_callee5","_context5","deleteOne","notifySuccess","_x5","university","moment","examDate","format","creator","seen","eye_default","href","examProof","question_circle_default","generatedKey","Utils","react","check_default","placement","timelapse_default","Link","to","globe_default","hourglass_2_default","window","confirm","trash_default","history","tabs","fill","classnames","active","tabId","sorted_table","allPostedReports","getAllReports","reports","setAsNotCorrected","corrected","setAsCorrected","reportMessage","close_default","messages","getAllSentMessages","message","email","adminLogged","admin_exams","admin_reports","admin_messages","admin_authentication","onAdminLogged","resetPasswordEmailSent","resetPassword","getProviderClient","UserPasswordAuthProviderClient","factory","sendResetPasswordEmail","then","catch","err","check_circle_default","resetPasswordView","logIn","authId","signIn","push","displayResetPassword","textDecoration","reset_password_form","algerienCities","code","nom","passwordConfirmation","handleUniversityChange","Cookies","set","handlePasswordConfirmation","submit","emailPassClient","isValidPasswordConfirmation","registerWithEmail","clock_o_default","invalid","Universities","navStyle","params","URLSearchParams","location","hash","split","get","boxShadow","user_default","user_plus_default","padding","sm","authentication_form","create_account","dropdownOpen","nav","direction","isOpen","caret","user_md_default","header","user","profile","divider","logOut","getPostedExams","bell_default","add","lastIndex","picture","onCloseImgModal","answers","correctAnswers","question","questionNum","A","B","C","D","E","validatedQuestion","firstRender","modalCorrectAnswers","correctAnswersRequired","alreadyValidatedQuestion","toggleCorrectAnswersPicture","addQuestion","questionData","defineProperty","onAddQuestion","handleQuestionValues","handleCorrectAnswer","selected","index","indexOf","splice","toConsumableArray","toggleQuestion","onDeleteLastQuestion","isLastQuestion","pencil_default","angle_down_default","includes","info_circle_default","modal_img","CorrectAnswersPicture","answer","plus_default","verified","Date","_university","questions","exam","moduleExists","examCompleted","modalExamPicture","addExam","onHideExamView","keys","valueOf","now","toggleExamDatePicture","handleExamValues","handleExamDate","addQuestionView","questionKeys","lastKey","pop","deleteLastQuestion","_questions","saveExamForLater","close","verifyModuleExisting","iterator","abrupt","validInitialExamData","year","addExamStarted","lastQuestionIndex","_ref10","_ref11","datePickerProps","dateFormat","placeholderText","Modules","es","play_default","questData","question_form","exclamation_triangle_default","floppy_o_default","fa_check_default","ExamDatePicture","addExamView","initialExamData","examLoading","queryString","match","_module","displayExamView","hideExamView","exam_form","user_added_exams","postedExams","messageSent","handleContactUsValues","sendMessage","insertOne","fontSize","CuteKoala","backgroundColor","display","envelope_default","paper_plane_default","textAlign","logged","top","ContributeImg","puzzle_piece_default","ExamImg","graduation_cap_default","PileStackIdeaImg","PilePassword","PileStackLampImg","PileStackImg","xs","problem_card","solution_card","idea_card","security_card","cloud_upload_default","lastPostedExams","medkit_default","bank_default","play_circle_o_default","ShareExamImg","illustration_idea_cards","published_exams","contribute_card","exam_card","search_exam_card","share_exam_card","confirmed","emailResent","url","token","tokenId","confirmUser","redirectToAuthenticate","resendEmail","userEmail","resendConfirmationEmail","refresh_default","newPassword","confirmResetPassword","clearAccountConfirmtion","handleNewPassword","Footer","examData","currentQuestion","currentQuestionNum","borderRadius","setExamMode","reportModal","reportSent","getInputRef","inputRef","oppenReportModal","setTimeout","focus","closeReportModal","sendReport","handleReportMessageBody","innerRef","space_shuttle_default","badAnsweredQuestions","selectedAnswers","answered","note","examEnd","examMode","incrementViews","views","selectAnswer","_selectedAnswers","remove","ans","nextQuestion","questionsIndexes","indexOfCurrentQuestion","String","diff","difference","isEmpty","displayAllAnswers","repassBadAnsweredQuestion","shift","questionsLength","allAnswersAreCorrect","margin","vertical","questionStyle","report_exam","exam_with_answers","history_default","collapseExams","loadingExams","toggleExams","getExamsByYearAndUniv","result","$lte","$gte","minus_square_o_default","plus_square_o_default","marginLeft","collapse","exams_by_year_univ","years","y","getFullYear","generateYears","univ_by_year","book_default","overflow","overflowX","module_by_year","searchResult","handleSearchExam","_examDate","search_default","control_point_default","pass_exam_search_exam","exam_explorer","authEmail","userNotConfirmed","noNeedToAuthenticate","authLoading","navbarCollapse","server","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","db","loggedInProviderName","AnonymousCredential","handleAppQueryString","setAuthEmail","logout","limit","search","pathname","route","protocol","host","replace","errorMessage","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","_handleError","StitchServiceError","getUserAccount","t1","_x6","_callee6","_context6","_x7","toggleNavbar","Boolean","Helmet","lib","newestOnTop","rtl","pauseOnVisibilityChange","HashRouter","light","expand","AppIcon","navbar","NavLink","activeStyle","home_default","file_text_o_default","account_menu","fluid","Switch","Route","exact","path","component","HomePage","Admin","ConfirmPage","ContactUs","ContestExam","ConfirmReset","AuthOrCreate","PassExam","Exam","Contribuate","footer","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e60f600b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/exam-date.a5307ef7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exam-correct-answers.f6a6305a.png\";","module.exports = __webpack_public_path__ + \"static/media/contribute.a9fbf540.png\";","module.exports = __webpack_public_path__ + \"static/media/exam.ebbc4cf7.png\";","module.exports = __webpack_public_path__ + \"static/media/pile-stack-idea.f8d48990.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pile-password.d8b00bc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pile-stack-lamp.5effd0a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pile-stack.8f6ea529.jpg\";","module.exports = __webpack_public_path__ + \"static/media/share-exam.9ac28879.png\";","module.exports = __webpack_public_path__ + \"static/media/search-exam.10c2f224.png\";","module.exports = __webpack_public_path__ + \"static/media/button-spinner.44271f65.gif\";","import ActionButton from '../../../components/action-button'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport SendIcon from 'react-icons/lib/fa/space-shuttle'\nimport WarningIcon from 'react-icons/lib/fa/exclamation-triangle'\nimport CuteKoala from '../../../imgs/cute_koala.jpg'\nimport React from 'react'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nlet _inputRef\n\nconst withState = provideState({\n  initialState: ({ _module, questionNum, examDate }) => ({\n    reportModal: false,\n    reportMessage: `Module: ${_module}\\nSession: ${examDate}\\nQuestion: ${questionNum}\\n\\nErreur: `,\n    reportSent: false,\n  }),\n  effects: {\n    getInputRef: (_, inputRef) => {\n      _inputRef = inputRef\n    },\n    oppenReportModal: () => state => {\n      state.reportModal = true\n      setTimeout(() => {\n        _inputRef && _inputRef.focus()\n      }, 1000)\n    },\n    closeReportModal: () => state => ({\n      ...state,\n      reportModal: false,\n    }),\n    sendReport: effects => async (state, { examId, questionNum }) => {\n      try {\n        await state.mongodb.insertOne({\n          type: 'report',\n          examId,\n          questionNum,\n          reportMessage: state.reportMessage,\n          creator: state.authId,\n          corrected: false,\n        })\n        state.reportSent = true\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    handleReportMessageBody: (_, { target: { value } }) => state => ({\n      ...state,\n      reportMessage: value,\n    }),\n  },\n})\n\nconst ReportExam = ({ state, effects, history }) => (\n  <div>\n    <span>\n      <Button size=\"xs\" color=\"light\" onClick={effects.oppenReportModal}>\n        <WarningIcon color=\"orange\" /> Une erreur ! signaler là vite !\n      </Button>\n    </span>\n    <Modal isOpen={state.reportModal} toggle={effects.oppenReportModal}>\n      <ModalHeader\n        toggle={effects.closeReportModal}\n        style={{ backgroundColor: 'orange' }}\n      >\n        Signaler un problème\n      </ModalHeader>\n      <ModalBody>\n        {state.reportSent ? (\n          <div className=\"text-center\" style={{ fontSize: '20px' }}>\n            <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n            <br />\n            <div>\n              Merci, Rapport envoyé avec succés <CheckIcon color=\"green\" />\n            </div>\n            <div>Grace à vous cet examen va être corrigé</div>\n          </div>\n        ) : (\n          <Input\n            type=\"textarea\"\n            value={state.reportMessage}\n            style={{ height: '200px' }}\n            onChange={effects.handleReportMessageBody}\n            innerRef={effects.getInputRef}\n          />\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Row>\n          <Col md=\"6\" />\n          <Col md=\"6\">\n            <div className=\"float-right\">\n              <ActionButton\n                text={\n                  <span>\n                    Envoyer le rapport <SendIcon size=\"20\" />\n                  </span>\n                }\n                action={effects.sendReport}\n                width={'200px'}\n                disabled={state.reportSent}\n              />\n            </div>\n          </Col>\n        </Row>\n      </ModalFooter>\n    </Modal>\n  </div>\n)\n\nexport default withState(injectState(ReportExam))\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport ButtonSpinner from '../imgs/button-spinner.gif'\n\nconst withState = provideState({\n  initialState: () => ({\n    loading: false,\n  }),\n  effects: {\n    initialize: effects => (_, { form }) => {\n      if (form) {\n        document\n          .getElementById(form)\n          .addEventListener('submit', effects.executeAction)\n      }\n    },\n    executeAction: (effects, event) => async (\n      state,\n      { action, afterEffect }\n    ) => {\n      if (event) {\n        event.preventDefault()\n      }\n      if (action) {\n        state.loading = true\n        try {\n          await action()\n          if (afterEffect) {\n            await afterEffect()\n          }\n        } catch (error) {\n          console.log(error)\n          effects.handleError(error) // Extern\n        }\n        state.loading = false\n      }\n    },\n  },\n  finalize: effects => (_, { form }) => {\n    if (form) {\n      document\n        .getElementById(form)\n        .removeEventListener('submit', effects.executeAction)\n    }\n  },\n})\n\nconst ActionButton = ({\n  color,\n  effects,\n  disabled,\n  outline,\n  state,\n  text,\n  width,\n  form,\n  block,\n}) => {\n  const props = {\n    disabled: state.loading || disabled,\n    outline: outline === 'true' ? true : false,\n    style: { width: `${width}px` },\n  }\n\n  if (color) {\n    props.color = color\n  } else {\n    props.color = 'dark'\n  }\n\n  if (form) {\n    props.type = 'submit'\n  } else {\n    props.onClick = effects.executeAction\n  }\n\n  return (\n    <Button {...props} block>\n      {text} &nbsp;{' '}\n      {state.loading && (\n        <img src={ButtonSpinner} alt=\"button spinner\" height=\"20\" width=\"20\" />\n      )}\n    </Button>\n  )\n}\n\nexport default withState(injectState(ActionButton))\n","import React from 'react'\nimport WorkBench from 'react-icons/lib/fa/wrench'\nimport { Card, Col, Form, FormGroup, Input, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordCredential } from 'mongodb-stitch-browser-sdk'\n\nimport ActionButton from '../../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    password: '',\n  }),\n  effects: {\n    handleId: (_, { target: { value } }) => state => ({\n      ...state,\n      id: value,\n    }),\n    handlePassword: (_, { target: { value } }) => state => ({\n      ...state,\n      password: value,\n    }),\n    loginAdmin: (effects, event) => async (state, props) => {\n      if (event) {\n        event.preventDefault()\n      }\n      if (state.id === 'admin@admin.dz') {\n        try {\n          const credential = new UserPasswordCredential(\n            state.id,\n            state.password\n          )\n          const authId = await state.serverInstance.auth.loginWithCredential(\n            credential\n          )\n          effects.setAdminLogged()\n        } catch (error) {\n          effects.handleError(error)\n        }\n      } else {\n        effects.notifyError('Mot de passe incorrect !')\n      }\n    },\n  },\n})\n\nconst AdminAuth = ({ effects, state }) => (\n  <Card body style={{ marginTop: '50px' }}>\n    <h3 className=\"text-center\" style={{ marginBottom: '30px' }}>\n      Administration <WorkBench />\n    </h3>\n    <Row>\n      <Col>\n        <Form id=\"login-form\">\n          <FormGroup>\n            <Input\n              type=\"email\"\n              placeholder=\"User !\"\n              value={state.id}\n              onChange={effects.handleId}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"password\"\n              placeholder=\"Mot de passe !\"\n              value={state.password}\n              onChange={effects.handlePassword}\n              required\n            />\n          </FormGroup>\n          <ActionButton\n            text={<span style={{ fontWeight: 'bold' }}>Connexion</span>}\n            color=\"info\"\n            action={effects.loginAdmin}\n            form=\"login-form\"\n          />\n          <br />\n        </Form>\n      </Col>\n    </Row>\n  </Card>\n)\n\nexport default withState(injectState(AdminAuth))\n","import AngleLeft from 'react-icons/lib/fa/angle-left'\nimport AngleRight from 'react-icons/lib/fa/angle-right'\nimport CaretDown from 'react-icons/lib/fa/caret-down'\nimport CaretUp from 'react-icons/lib/fa/caret-up'\nimport debounceDecorator from 'debounce-input-decorator'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport React from 'react'\nimport SortIcon from 'react-icons/lib/fa/sort'\nimport { iteratee, map, orderBy } from 'lodash'\nimport { injectState, provideState } from 'reaclette'\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Table,\n} from 'reactstrap'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\n\nconst DEFAULT_ITEMS_PER_PAGE = 10\n\nconst InputDebounced = debounceDecorator(250)(Input)\n\nconst sortIconDirection = sortDirection =>\n  sortDirection === 'desc' ? <CaretDown /> : <CaretUp />\n\nconst createSortByEffect = (sortIteratee, effects) => state => {\n  const sortDirection =\n    state.sortIteratee !== sortIteratee\n      ? 'desc'\n      : state.sortDirection === 'asc'\n      ? 'desc'\n      : 'asc'\n  return {\n    ...state,\n    sortDirection,\n    sortIteratee,\n  }\n}\n\nconst withState = provideState({\n  initialState: ({ initialSortDirection, initialSortIteratee }) => ({\n    page: 1,\n    sortDirection: initialSortDirection || undefined,\n    sortIteratee: initialSortIteratee || undefined,\n  }),\n  effects: {\n    selectPreviousPage: effects => state => {\n      effects._setPage(state.page - 1)\n    },\n    selectNextPage: effects => state => {\n      effects._setPage(state.page + 1)\n    },\n    setPage: (effects, { target: { value, dataset } }) => {\n      value = +value\n      if (value > 0 && value <= dataset.numberofpages) {\n        effects._setPage(value)\n      }\n    },\n    sortBy: (effects, { currentTarget: { dataset } }) =>\n      createSortByEffect(dataset.sortIteratee, effects),\n    _setPage: (_, page) => state => {\n      return { ...state, page }\n    },\n  },\n\n  computed: {\n    numberItemsPerPage: (_, { itemsPerPage }) =>\n      itemsPerPage || DEFAULT_ITEMS_PER_PAGE,\n    sortedValues: ({ sortDirection, sortIteratee }, { filteredCollection }) => {\n      if (sortIteratee === undefined) {\n        return filteredCollection\n      }\n\n      sortIteratee = iteratee(sortIteratee)\n      return orderBy(\n        filteredCollection,\n        obj => {\n          const value = sortIteratee(obj)\n          return typeof value === 'string' ? value.toLowerCase() : value\n        },\n        sortDirection\n      )\n    },\n    numberOfPages: ({ numberItemsPerPage, sortedValues }) =>\n      Math.ceil(sortedValues.length / numberItemsPerPage) || 1,\n    visibleValues: ({ numberItemsPerPage, page, sortedValues }) =>\n      sortedValues.slice(\n        (page - 1) * numberItemsPerPage,\n        page * numberItemsPerPage\n      ),\n  },\n})\n\nconst SortedTable = ({\n  collection,\n  columns,\n  data,\n  effects,\n  filter,\n  filteredCollection,\n  pagination,\n  state,\n  uniqueKey,\n}) => (\n  <div>\n    {collection === undefined ? (\n      <Row className=\"my-3\">\n        <Col md={{ size: 2, offset: 5 }}>\n          <br />\n          <div className=\"text-center\">\n            <img src={LoadingIcon} width=\"50\" height=\"50\" alt=\"Loading...\" />\n          </div>\n          <p className=\"text-muted text-center\">\n            Examens postés en chargement ...\n          </p>\n        </Col>\n      </Row>\n    ) : filteredCollection.length === 0 ? (\n      <h3 className=\"text-center text-muted\">\n        <br />\n        Pas d'examens ajoutés :( &nbsp;\n        <ExclamationIcon size=\"30\" />\n        <br />\n      </h3>\n    ) : (\n      <div>\n        <Row>\n          <Col>\n            <Table hover striped size=\"sm\">\n              <thead>\n                <tr>\n                  {map(columns, column =>\n                    column.sortIteratee === undefined ? (\n                      <th key={column.name}>{column.name}</th>\n                    ) : (\n                      <th\n                        data-sort-iteratee={column.sortIteratee}\n                        key={column.name}\n                        onClick={effects.sortBy}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {column.name} &nbsp;\n                        {state.sortIteratee === column.sortIteratee ? (\n                          sortIconDirection(state.sortDirection)\n                        ) : (\n                          <SortIcon />\n                        )}\n                      </th>\n                    )\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {map(state.visibleValues, value => (\n                  <tr key={value[uniqueKey]}>\n                    {map(columns, column => (\n                      <td key={column.name} style={{ verticalAlign: 'center' }}>\n                        {column.itemRenderer(value, state, effects)}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n        {pagination && (\n          <Row>\n            <Col md={{ size: 6, offset: 3 }}>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <Button\n                    disabled={state.page === 1}\n                    onClick={effects.selectPreviousPage}\n                  >\n                    <AngleLeft /> Previous\n                  </Button>\n                </InputGroupAddon>\n                <InputDebounced\n                  data-numberofpages={state.numberOfPages}\n                  onChange={effects.setPage}\n                  type=\"number\"\n                  value={state.page}\n                />\n                <InputGroupAddon addonType=\"append\">/</InputGroupAddon>\n                <Input disabled value={state.numberOfPages} />\n                <InputGroupAddon addonType=\"append\">\n                  <Button\n                    disabled={state.page === state.numberOfPages}\n                    onClick={effects.selectNextPage}\n                  >\n                    Next <AngleRight />\n                  </Button>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </Row>\n        )}\n      </div>\n    )}\n  </div>\n)\n\nexport default withState(injectState(SortedTable))\n","export const get = (accessor, arg) => {\n  try {\n    return accessor(arg)\n  } catch (error) {\n    if (!(error instanceof TypeError)) {\n      // avoid hiding other errors\n      throw error\n    }\n  }\n}\n\nexport const generateKey = () =>\n  Math.random()\n    .toString(36)\n    .substring(7)\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport IncompletedIcon from 'react-icons/lib/md/timelapse'\nimport CompletedIcon from 'react-icons/lib/md/check'\nimport PublishedIcon from 'react-icons/lib/fa/globe'\nimport ProofIcon from 'react-icons/lib/fa/question-circle'\nimport TrashIcon from 'react-icons/lib/fa/trash'\nimport VerificationIcon from 'react-icons/lib/fa/hourglass-2'\nimport React, { Fragment } from 'react'\nimport {\n  Card,\n  Badge,\n  Button,\n  UncontrolledTooltip,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../../components/sorted-table'\nimport * as Utils from '../../utils'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\nimport classnames from 'classnames'\n\nconst withState = provideState({\n  initialState: () => ({\n    allPostedExams: undefined,\n    allUnpostedExams: undefined,\n    activeTab: 'posted', // posted || unposted\n  }),\n  effects: {\n    initialize: effects => {\n      effects.getAllPostedExams()\n      effects.getAllUnPostedExams()\n    },\n    getAllPostedExams: effects => async state => {\n      try {\n        state.allPostedExams = undefined\n        const exams = await state.mongodb\n          .find({ completed: true }, { sort: { date: -1 } })\n          .asArray()\n        state.allPostedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n    getAllUnPostedExams: effects => async state => {\n      try {\n        state.allUnpostedExams = undefined\n        const exams = await state.mongodb\n          .find({ completed: false }, { sort: { date: -1 } })\n          .asArray()\n        state.allUnpostedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    acceptExam: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              approved: true,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllPostedExams()\n        effects.getLastPostedExams()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    declineExam: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              approved: false,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllPostedExams()\n        effects.getLastPostedExams()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    deleteExam: (effects, examId) => async state => {\n      try {\n        const objectId = new ObjectId(examId)\n        await state.mongodb.deleteOne({ _id: objectId })\n        effects.getAllPostedExams()\n        effects.notifySuccess('Examen bien supprimé !')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Module',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"info\">{value.module}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'module',\n  },\n  {\n    name: 'Université',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.university}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'university',\n  },\n  {\n    name: 'Session',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {moment(value.examDate).format('DD-MM-YYYY')}\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'examDate',\n  },\n  {\n    name: 'Date de création',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{moment(value.date).format('DD-MM-YYYY')}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'date',\n  },\n  {\n    name: 'Auteur',\n    itemRenderer: (value, state, effects) => (\n      <Badge color=\"light\">{value.creator}</Badge>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Vue',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {value.seen || 0} &nbsp; <EyeIcon />\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'seen',\n  },\n  {\n    name: 'Preuve',\n    itemRenderer: (value, state, effects) => (\n      <a href={value.examProof} target=\"_blank\">\n        <ProofIcon size=\"20\" />\n      </a>\n    ),\n    sortIteratee: 'seen',\n  },\n  {\n    name: 'Etât',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.completed ? (\n        <Fragment>\n          <CompletedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`complete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`complete-icon-${generatedKey}`}\n          >\n            Complet\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <IncompletedIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`incomplete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`incomplete-icon-${generatedKey}`}\n          >\n            Incomplet\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Action',\n    itemRenderer: (value, state, effects) =>\n      value.completed ? (\n        <Link\n          className=\"btn btn-outline-dark\"\n          to={`/contribuer/${value._id.toString()}`}\n        >\n          Modifier\n        </Link>\n      ) : (\n        <Link\n          className=\"btn btn-outline-info\"\n          target=\"_blank\"\n          to={`/contribuer/${value._id.toString()}`}\n        >\n          Compléter\n        </Link>\n      ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Published',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.approved ? (\n        <Fragment>\n          <PublishedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`published-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`published-icon-${generatedKey}`}\n          >\n            Votre examen est en ligne\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <VerificationIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`on-verification-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`on-verification-icon-${generatedKey}`}\n          >\n            En vérification\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n  {\n    name: '',\n    itemRenderer: (value, state, effects) => (\n      <Button\n        color=\"danger\"\n        outline\n        onClick={() => {\n          const response = window.confirm(\n            'Etes vous sûr de vouloir abondonner cet examen ?'\n          )\n          if (response) {\n            effects.deleteExam(value._id.toString())\n          }\n        }}\n      >\n        <TrashIcon size=\"20\" />\n      </Button>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: '',\n    itemRenderer: (value, state, effects) =>\n      value.approved ? (\n        <Button\n          outline\n          color=\"warning\"\n          onClick={() => effects.declineExam(value._id)}\n        >\n          Cacher\n        </Button>\n      ) : (\n        <Button\n          outline\n          color=\"success\"\n          onClick={() => effects.acceptExam(value._id)}\n        >\n          Publier\n        </Button>\n      ),\n    sortIteratee: undefined,\n  },\n]\n\nconst AdminExams = ({ effects, state, history }) => (\n  <Card body>\n    <Nav tabs fill>\n      <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n        <NavLink\n          className={classnames({ active: state.activeTab === 'posted' })}\n          onClick={() => {\n            effects.toggle('posted')\n          }}\n        >\n          Posted exams\n        </NavLink>\n      </NavItem>\n      <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n        <NavLink\n          className={classnames({ active: state.activeTab === 'unposted' })}\n          onClick={() => {\n            effects.toggle('unposted')\n          }}\n        >\n          Unposted exams\n        </NavLink>\n      </NavItem>\n    </Nav>\n    <TabContent activeTab={state.activeTab}>\n      <TabPane tabId=\"posted\">\n        <SortedTable\n          columns={columns}\n          collection={state.allPostedExams}\n          filteredCollection={state.allPostedExams}\n          initialSortIteratee={'date'}\n          initialSortDirection={'desc'}\n          pagination={state.allPostedExams && state.allPostedExams.length > 10}\n          uniqueKey={'_id'}\n        />\n      </TabPane>\n      <TabPane tabId=\"unposted\">\n        <SortedTable\n          columns={columns}\n          collection={state.allUnpostedExams}\n          filteredCollection={state.allUnpostedExams}\n          initialSortIteratee={'date'}\n          initialSortDirection={'desc'}\n          pagination={\n            state.allUnpostedExams && state.allUnpostedExams.length > 10\n          }\n          uniqueKey={'_id'}\n        />\n      </TabPane>\n    </TabContent>\n  </Card>\n)\n\nexport default withState(injectState(AdminExams))\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport IncompletedIcon from 'react-icons/lib/md/timelapse'\nimport CompletedIcon from 'react-icons/lib/md/check'\nimport PublishedIcon from 'react-icons/lib/fa/globe'\nimport ProofIcon from 'react-icons/lib/fa/question-circle'\nimport VerificationIcon from 'react-icons/lib/fa/hourglass-2'\nimport CloseIcon from 'react-icons/lib/fa/close'\nimport React, { Fragment } from 'react'\nimport { Card, Badge, Button, UncontrolledTooltip, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../../components/sorted-table'\nimport * as Utils from '../../utils'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  initialState: () => ({\n    allPostedReports: undefined,\n  }),\n  effects: {\n    initialize: effects => {\n      effects.getAllReports()\n    },\n    getAllReports: effects => async state => {\n      try {\n        state.allPostedReports = undefined\n        const reports = await state.mongodb.find({ type: 'report' }).asArray()\n        state.allPostedReports = reports\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    setAsNotCorrected: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              corrected: false,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllReports()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    setAsCorrected: (effects, id) => async state => {\n      try {\n        const objectId = new ObjectId(id)\n        await state.mongodb.updateOne(\n          {\n            _id: objectId,\n          },\n          {\n            $set: {\n              corrected: true,\n            },\n          },\n          { upsert: true }\n        )\n        effects.getAllReports()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Auteur',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.creator}</Badge>\n      </h5>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Message',\n    itemRenderer: (value, state, effects) => (\n      <Card body>{value.reportMessage}</Card>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Action',\n    itemRenderer: (value, state, effects) => (\n      <Link\n        className=\"btn btn-outline-dark\"\n        target=\"_blank\"\n        to={`/contribuer/${value.examId}`}\n      >\n        Modifier\n      </Link>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Corrigé',\n    itemRenderer: (value, state, effects) =>\n      value.corrected ? (\n        <CompletedIcon size=\"25\" color=\"green\" />\n      ) : (\n        <CloseIcon size=\"25\" color=\"red\" />\n      ),\n    sortIteratee: undefined,\n  },\n  {\n    name: '',\n    itemRenderer: (value, state, effects) =>\n      value.corrected ? (\n        <Button\n          outline\n          color=\"dark\"\n          onClick={() => effects.setAsNotCorrected(value._id)}\n        >\n          Marquer comme pas corrigé\n        </Button>\n      ) : (\n        <Button\n          outline\n          color=\"success\"\n          onClick={() => effects.setAsCorrected(value._id)}\n        >\n          Marquer comme corrigé\n        </Button>\n      ),\n    sortIteratee: undefined,\n  },\n]\n\nconst AdminReports = ({ effects, state, history }) => (\n  <Card body>\n    <SortedTable\n      columns={columns}\n      collection={state.allPostedReports}\n      filteredCollection={state.allPostedReports}\n      initialSortIteratee={'date'}\n      initialSortDirection={'desc'}\n      pagination={state.allPostedReports && state.allPostedReports.length > 10}\n      uniqueKey={'_id'}\n    />\n  </Card>\n)\n\nexport default withState(injectState(AdminReports))\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport IncompletedIcon from 'react-icons/lib/md/timelapse'\nimport CompletedIcon from 'react-icons/lib/md/check'\nimport PublishedIcon from 'react-icons/lib/fa/globe'\nimport ProofIcon from 'react-icons/lib/fa/question-circle'\nimport VerificationIcon from 'react-icons/lib/fa/hourglass-2'\nimport CloseIcon from 'react-icons/lib/fa/close'\nimport React, { Fragment } from 'react'\nimport { Card, Badge, Button, UncontrolledTooltip, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../../components/sorted-table'\nimport * as Utils from '../../utils'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  initialState: () => ({\n    messages: undefined,\n  }),\n  effects: {\n    initialize: effects => {\n      effects.getAllSentMessages()\n    },\n    getAllSentMessages: effects => async state => {\n      try {\n        state.messages = undefined\n        const messages = await state.mongodb.find({ type: 'message' }).asArray()\n        state.messages = messages\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Auteur',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.creator && value.creator}</Badge>\n      </h5>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Message',\n    itemRenderer: (value, state, effects) => <Card body>{value.message}</Card>,\n    sortIteratee: 'message',\n  },\n  {\n    name: 'Email',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"info\">{value.email}</Badge>\n      </h5>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Date',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{moment(value.date).format('DD-MM-YYYY')}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'date',\n  },\n]\n\nconst AdminReports = ({ effects, state, history }) => (\n  <Card body>\n    <SortedTable\n      columns={columns}\n      collection={state.messages}\n      filteredCollection={state.messages}\n      initialSortIteratee={'date'}\n      initialSortDirection={'desc'}\n      pagination={state.messages && state.messages.length > 10}\n      uniqueKey={'_id'}\n    />\n  </Card>\n)\n\nexport default withState(injectState(AdminReports))\n","import React, { Fragment } from 'react'\nimport WorkBench from 'react-icons/lib/fa/wrench'\nimport {\n  Nav,\n  TabContent,\n  TabPane,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport AdminAuth from './admin-authentication'\nimport AdminExams from './admin-exams'\nimport Reports from './admin-reports'\nimport Messages from './admin-messages'\nimport classnames from 'classnames'\n\nconst withState = provideState({\n  initialState: () => ({\n    activeTab: \"Approbation d'examns\", // Signalisation d'examens || Messages utilisateurs\n  }),\n  effects: {\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n  },\n})\n\nconst Admin = ({ effects, state, history }) => (\n  <Row>\n    <Col>\n      {state.adminLogged && (\n        <Fragment>\n          <Nav tabs fill>\n            <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n              <NavLink\n                className={classnames({\n                  active: state.activeTab === \"Approbation d'examns\",\n                })}\n                onClick={() => {\n                  effects.toggle(\"Approbation d'examns\")\n                }}\n              >\n                Approbation d'examns\n              </NavLink>\n            </NavItem>\n            <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n              <NavLink\n                className={classnames({\n                  active: state.activeTab === \"Signalisation d'examens\",\n                })}\n                onClick={() => {\n                  effects.toggle(\"Signalisation d'examens\")\n                }}\n              >\n                Signalisation d'examens\n              </NavLink>\n            </NavItem>\n            <NavItem style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n              <NavLink\n                className={classnames({\n                  active: state.activeTab === 'Messages utilisateurs',\n                })}\n                onClick={() => {\n                  effects.toggle('Messages utilisateurs')\n                }}\n              >\n                Messages utilisateurs\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={state.activeTab}>\n            <TabPane tabId=\"Approbation d'examns\">\n              <AdminExams history={history} />\n            </TabPane>\n            <TabPane tabId=\"Signalisation d'examens\">\n              <Reports history={history} />\n            </TabPane>\n            <TabPane tabId=\"Messages utilisateurs\">\n              <Messages history={history} />\n            </TabPane>\n          </TabContent>\n        </Fragment>\n      )}\n\n      {!state.adminLogged && (\n        <Row>\n          <Col md={{ size: 4, offset: 4 }}>\n            <AdminAuth\n              onAdminLogged={effects.setAdminLogged}\n              history={history}\n            />\n          </Col>\n        </Row>\n      )}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(Admin))\n","import React from 'react'\nimport CheckCircleIcon from 'react-icons/lib/fa/check-circle'\nimport { Col, Form, FormGroup, Input, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    resetPasswordEmailSent: false,\n    loading: false,\n  }),\n  effects: {\n    handleId: (_, { target: { value } }) => state => ({\n      ...state,\n      id: value,\n    }),\n    resetPassword: effects => state => {\n      const emailPassClient = state.serverInstance.auth.getProviderClient(\n        UserPasswordAuthProviderClient.factory\n      )\n      // state.loading = true\n      emailPassClient\n        .sendResetPasswordEmail(state.id)\n        .then(() => {\n          // state.loading = false\n          state.resetPasswordEmailSent = true\n        })\n        .catch(err => {\n          effects.handleError(err)\n        })\n    },\n  },\n})\n\nconst ResetPassword = ({ effects, state }) => (\n  <Row>\n    <Col>\n      {state.loading ? (\n        <Col md={{ size: 2, offset: 5 }}>\n          <img src={LoadingIcon} alt=\"Loading...\" height=\"100\" width=\"100\" />\n        </Col>\n      ) : state.resetPasswordEmailSent ? (\n        <div className=\"text-center\">\n          <CheckCircleIcon\n            color=\"green\"\n            size=\"35\"\n            style={{ marginBottom: '5px' }}\n          />\n          <p className=\"text-center\">\n            Un email de rénitialisation de mot de passe est envoyé à votre\n            adresse e-mail\n          </p>\n        </div>\n      ) : (\n        <Form id=\"reset-form\">\n          <FormGroup>\n            <Input\n              type=\"email\"\n              placeholder=\"Entrez votre email !\"\n              value={state.id}\n              onChange={effects.handleId}\n              required\n            />\n          </FormGroup>\n          <ActionButton\n            text={<span style={{ fontWeight: 'bold' }}>Reset password</span>}\n            color=\"success\"\n            action={effects.resetPassword}\n            form=\"reset-form\"\n          />\n        </Form>\n      )}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(ResetPassword))\n","import React from 'react'\nimport { Col, Form, FormGroup, Input, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordCredential } from 'mongodb-stitch-browser-sdk'\n\nimport ResetPasswordForm from '../reset-password-form'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    password: '',\n    resetPasswordView: false,\n  }),\n  effects: {\n    handleId: (_, { target: { value } }) => state => ({\n      ...state,\n      id: value,\n    }),\n    handlePassword: (_, { target: { value } }) => state => ({\n      ...state,\n      password: value,\n    }),\n    logIn: (effects, event) => async (state, props) => {\n      if (event) {\n        event.preventDefault()\n      }\n\n      try {\n        const credential = new UserPasswordCredential(state.id, state.password)\n        const authId = await state.serverInstance.auth.loginWithCredential(\n          credential\n        )\n        await effects.signIn(authId.id)\n        props.history.push('/contribuer')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    displayResetPassword: () => state => ({\n      ...state,\n      resetPasswordView: true,\n    }),\n  },\n})\n\nconst AuthentificationForm = ({ effects, state }) => (\n  <Row>\n    <Col>\n      <Form id=\"login-form\">\n        <FormGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Email !\"\n            value={state.id}\n            onChange={effects.handleId}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Mot de passe !\"\n            value={state.password}\n            onChange={effects.handlePassword}\n            required\n          />\n        </FormGroup>\n        <ActionButton\n          text={<span style={{ fontWeight: 'bold' }}>Connexion</span>}\n          color=\"info\"\n          action={effects.logIn}\n          form=\"login-form\"\n        />\n        <br />\n        <p\n          className=\"text-center text-muted\"\n          style={{\n            textDecoration: 'underline',\n            cursor: 'pointer',\n          }}\n          onClick={effects.displayResetPassword}\n        >\n          Mot de passe oublié !\n        </p>\n      </Form>\n      {state.resetPasswordView && <ResetPasswordForm />}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(AuthentificationForm))\n","const algerienCities = [\n  // { id: '1', code: '1', nom: 'Adrar' },\n  // { id: '2', code: '2', nom: 'Chlef' },\n  // { id: '3', code: '3', nom: 'Laghouat' },\n  // { id: '4', code: '4', nom: 'Oum El Bouaghi' },\n  { id: '5', code: '5', nom: 'Batna' },\n  // { id: '6', code: '6', nom: 'B\\u00e9ja\\u00efa' },\n  // { id: '7', code: '7', nom: 'Biskra' },\n  // { id: '8', code: '8', nom: 'B\\u00e9char' },\n  { id: '9', code: '9', nom: 'Blida' },\n  // { id: '10', code: '10', nom: 'Bouira' },\n  // { id: '11', code: '11', nom: 'Tamanrasset' },\n  // { id: '12', code: '12', nom: 'T\\u00e9bessa' },\n  { id: '13', code: '13', nom: 'Tlemcen' },\n  // { id: '14', code: '14', nom: 'Tiaret' },\n  { id: '15', code: '15', nom: 'Tizi Ouzou' },\n  { id: '16', code: '16', nom: 'Alger' },\n  // { id: '17', code: '17', nom: 'Djelfa' },\n  // { id: '18', code: '18', nom: 'Jijel' },\n  { id: '19', code: '19', nom: 'S\\u00e9tif' },\n  // { id: '20', code: '20', nom: 'Sa\\u00efda' },\n  // { id: '21', code: '21', nom: 'Skikda' },\n  // { id: '22', code: '22', nom: 'Sidi Bel Abb\\u00e8s' },\n  { id: '23', code: '23', nom: 'Annaba' },\n  // { id: '24', code: '24', nom: 'Guelma' },\n  { id: '25', code: '25', nom: 'Constantine' },\n  // { id: '26', code: '26', nom: 'M\\u00e9d\\u00e9a' },\n  // { id: '27', code: '27', nom: 'Mostaganem' },\n  // { id: '28', code: '28', nom: \"M'Sila\" },\n  // { id: '29', code: '29', nom: 'Mascara' },\n  // { id: '30', code: '30', nom: 'Ouargla' },\n  { id: '31', code: '31', nom: 'Oran' },\n  // { id: '32', code: '32', nom: 'El Bayadh' },\n  // { id: '33', code: '33', nom: 'Illizi' },\n  // { id: '34', code: '34', nom: 'Bordj Bou Arreridj' },\n  // { id: '35', code: '35', nom: 'Boumerd\\u00e8s' },\n  // { id: '36', code: '36', nom: 'El Tarf' },\n  // { id: '37', code: '37', nom: 'Tindouf' },\n  // { id: '38', code: '38', nom: 'Tissemsilt' },\n  // { id: '39', code: '39', nom: 'El Oued' },\n  // { id: '40', code: '40', nom: 'Khenchela' },\n  // { id: '41', code: '41', nom: 'Souk Ahras' },\n  // { id: '42', code: '42', nom: 'Tipaza' },\n  // { id: '43', code: '43', nom: 'Mila' },\n  // { id: '44', code: '44', nom: 'A\\u00efn Defla' },\n  // { id: '45', code: '45', nom: 'Na\\u00e2ma' },\n  // { id: '46', code: '46', nom: 'A\\u00efn T\\u00e9mouchent' },\n  // { id: '47', code: '47', nom: 'Gharda\\u00efa' },\n  // { id: '48', code: '48', nom: 'Relizane' },\n]\n\nexport default algerienCities\n","import Cookies from 'js-cookie'\nimport React from 'react'\nimport { Col, Form, FormFeedback, FormGroup, Input, Row } from 'reactstrap'\nimport { map } from 'lodash'\nimport { injectState, provideState } from 'reaclette'\nimport {\n  UserPasswordAuthProviderClient,\n  AnonymousCredential,\n} from 'mongodb-stitch-browser-sdk'\n\n// import * as Api from '../../api'\nimport Universities from '../data/cities'\nimport ActionButton from '../components/action-button'\nimport CockIcon from 'react-icons/lib/fa/clock-o'\n\nconst withState = provideState({\n  initialState: () => ({\n    id: '',\n    password: '',\n    passwordConfirmation: '',\n    university: '',\n  }),\n  effects: {\n    handleUniversityChange: (_, { target: { value } }) => state => {\n      Cookies.set('university', value)\n      return {\n        ...state,\n        university: value,\n      }\n    },\n    handleId: (_, { target: { value } }) => (state, { history }) => {\n      return {\n        ...state,\n        id: value,\n      }\n    },\n    handlePassword: (_, { target: { value } }) => state => ({\n      ...state,\n      password: value,\n    }),\n    handlePasswordConfirmation: (_, { target: { value } }) => state => ({\n      ...state,\n      passwordConfirmation: value,\n    }),\n    submit: (effects, event) => async (state, { history }) => {\n      if (event) {\n        event.preventDefault()\n      }\n\n      if (state.isValidPasswordConfirmation) {\n        const emailPassClient = state.serverInstance.auth.getProviderClient(\n          UserPasswordAuthProviderClient.factory\n        )\n\n        try {\n          await emailPassClient.registerWithEmail(state.id, state.password)\n          Cookies.set('authEmail', state.id)\n          history.push('/confirm')\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n    },\n  },\n  computed: {\n    isValidPasswordConfirmation: ({ passwordConfirmation, password }) =>\n      password === passwordConfirmation,\n  },\n})\n\nconst CreateAccount = ({ effects, state }) => (\n  <Row>\n    <Col>\n      <div className=\"text-center text-muted\" style={{ marginBottom: '10px' }}>\n        Créer un compte en 2 secondes <CockIcon />\n      </div>\n      <Form id=\"creation-form\">\n        <FormGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Votre email !\"\n            value={state.id}\n            onChange={effects.handleId}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Mot de passe !\"\n            value={state.password}\n            onChange={effects.handlePassword}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Encore le même mot de passe !\"\n            value={state.passwordConfirmation}\n            onChange={effects.handlePasswordConfirmation}\n            required\n            invalid={!state.isValidPasswordConfirmation}\n          />\n          <FormFeedback>\n            Les mots de passes ne sont pas identiques !\n          </FormFeedback>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            name=\"university\"\n            onChange={effects.handleUniversityChange}\n            required\n            type=\"select\"\n            value={state.university}\n          >\n            <option value=\"\">Faculté *</option>\n            {Universities &&\n              map(Universities, university => (\n                <option key={university.code} value={university.nom}>\n                  {`${university.code} - ${university.nom}`}\n                </option>\n              ))}\n          </Input>\n        </FormGroup>\n        <ActionButton\n          text={<span style={{ fontWeight: 'bold' }}>Inscription</span>}\n          color=\"info\"\n          action={effects.submit}\n          form=\"creation-form\"\n        />\n      </Form>\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(CreateAccount))\n","import PersonAdd from 'react-icons/lib/fa/user-plus'\nimport Person from 'react-icons/lib/fa/user'\nimport React from 'react'\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Card,\n  Col,\n} from 'reactstrap'\nimport classnames from 'classnames'\nimport { injectState, provideState } from 'reaclette'\n\nimport AuthenticationForm from '../authentication-form'\nimport CreateAccount from '../create-account'\n\nconst navStyle = {\n  cursor: 'pointer',\n}\n\nconst withState = provideState({\n  initialState: () => ({\n    activeTab: 'authentication',\n  }),\n  effects: {\n    initialize: () => state => {\n      const params = new URLSearchParams(window.location.hash.split('?')[1])\n      state.activeTab = params.get('toggle') || 'authentication'\n    },\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n  },\n})\n\nconst AuthOrCreate = ({ effects, state, history }) => (\n  <Row>\n    <Col md={{ size: 4, offset: 4 }} style={{ marginTop: '50px' }}>\n      <Card className=\"h-100\" style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }}>\n        <Nav tabs fill>\n          <NavItem style={navStyle}>\n            <NavLink\n              className={classnames({\n                active: state.activeTab === 'authentication',\n              })}\n              onClick={() => {\n                effects.toggle('authentication')\n              }}\n              style={\n                state.activeTab === 'authentication'\n                  ? { color: '#0e627f', fontWeight: 'bold' }\n                  : {}\n              }\n            >\n              <Person /> &nbsp;Authentification\n            </NavLink>\n          </NavItem>\n          <NavItem style={navStyle}>\n            <NavLink\n              className={classnames({\n                active: state.activeTab === 'createAccount',\n              })}\n              onClick={() => {\n                effects.toggle('createAccount')\n              }}\n              style={\n                state.activeTab === 'createAccount'\n                  ? { color: '#0e627f', fontWeight: 'bold' }\n                  : {}\n              }\n            >\n              <PersonAdd /> &nbsp;Créer un compte\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={state.activeTab}>\n          <TabPane tabId=\"authentication\" style={{ padding: '20px' }}>\n            <Row>\n              <Col sm=\"12\">\n                <AuthenticationForm history={history} />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"createAccount\" style={{ padding: '20px' }}>\n            <Row>\n              <Col sm=\"12\">\n                <CreateAccount history={history} />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </Card>\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(AuthOrCreate))\n","import React from 'react'\nimport UserIcon from 'react-icons/lib/fa/user-md'\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nconst withState = provideState({\n  initialState: () => ({\n    dropdownOpen: false,\n  }),\n  effects: {\n    toggle: () => state => ({\n      ...state,\n      dropdownOpen: !state.dropdownOpen,\n    }),\n  },\n})\n\nconst AccountMenu = ({ effects, state }) => (\n  <Dropdown\n    nav\n    direction=\"down\"\n    isOpen={state.dropdownOpen}\n    toggle={effects.toggle}\n  >\n    <DropdownToggle\n      nav\n      caret\n      style={{\n        color: '#e2e3e4',\n      }}\n    >\n      <UserIcon size=\"20\" /> &nbsp; Profile\n    </DropdownToggle>\n    <DropdownMenu>\n      <DropdownItem header>\n        {state.serverInstance.auth.user.profile.data.email}\n      </DropdownItem>\n      <DropdownItem divider />\n      <DropdownItem onClick={effects.logOut}>Déconnecter</DropdownItem>\n    </DropdownMenu>\n  </Dropdown>\n)\n\nexport default withState(injectState(AccountMenu))\n","import BellIcon from 'react-icons/lib/fa/bell'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport IncompletedIcon from 'react-icons/lib/md/timelapse'\nimport CompletedIcon from 'react-icons/lib/md/check'\nimport PublishedIcon from 'react-icons/lib/fa/globe'\nimport TrashIcon from 'react-icons/lib/fa/trash'\nimport VerificationIcon from 'react-icons/lib/fa/hourglass-2'\nimport React, { Fragment } from 'react'\nimport { Badge, Button, UncontrolledTooltip } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport moment from 'moment'\n\nimport SortedTable from '../components/sorted-table'\nimport * as Utils from '../utils'\nimport { Link } from 'react-router-dom'\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  effects: {\n    deleteExam: (effects, examId) => async state => {\n      try {\n        const objectId = new ObjectId(examId)\n        await state.mongodb.deleteOne({ _id: objectId })\n        effects.getPostedExams()\n        effects.notifySuccess('Examen bien supprimé !')\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst columns = [\n  {\n    name: 'Module',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"info\">{value.module}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'module',\n  },\n  {\n    name: 'Université',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{value.university}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'university',\n  },\n  {\n    name: 'Session',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {moment(value.examDate).format('DD-MM-YYYY')}\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'examDate',\n  },\n  {\n    name: 'Date de création',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">{moment(value.date).format('DD-MM-YYYY')}</Badge>\n      </h5>\n    ),\n    sortIteratee: 'date',\n  },\n  {\n    name: (\n      <span>\n        Doit être publié avant le &nbsp;\n        <BellIcon color=\"red\" size=\"20\" id={`bell-icon`} />\n        <UncontrolledTooltip placement=\"top\" target={`bell-icon`}>\n          Vite terminez cet examen avant qu'il soit supprimé après l'échéance de\n          la date dessous\n        </UncontrolledTooltip>\n      </span>\n    ),\n    itemRenderer: (value, state, effects) =>\n      value.approved ? (\n        <span />\n      ) : (\n        <h5>\n          <Badge color=\"danger\">\n            {moment(value.date)\n              .add(7, 'days')\n              .format('DD-MM-YYYY')}\n          </Badge>\n        </h5>\n      ),\n    sortIteratee: 'date',\n  },\n  {\n    name: 'Vue',\n    itemRenderer: (value, state, effects) => (\n      <h5>\n        <Badge color=\"light\">\n          {value.seen || 0} &nbsp; <EyeIcon />\n        </Badge>\n      </h5>\n    ),\n    sortIteratee: 'seen',\n  },\n  {\n    name: 'Etât',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.completed ? (\n        <Fragment>\n          <CompletedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`complete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`complete-icon-${generatedKey}`}\n          >\n            Complet\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <IncompletedIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`incomplete-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`incomplete-icon-${generatedKey}`}\n          >\n            Incomplet\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Action',\n    itemRenderer: (value, state, effects) => (\n      <Fragment>\n        {value.completed ? (\n          <Link\n            className=\"btn btn-outline-dark\"\n            target=\"_blank\"\n            to={`/contribuer/${value._id.toString()}`}\n          >\n            Modifier\n          </Link>\n        ) : (\n          <Link\n            className=\"btn btn-outline-info\"\n            target=\"_blank\"\n            to={`/contribuer/${value._id.toString()}`}\n          >\n            Compléter\n          </Link>\n        )}\n        &nbsp;\n        {!value.completed && (\n          <Button\n            color=\"danger\"\n            outline\n            onClick={() => {\n              const response = window.confirm(\n                'Etes vous sûr de vouloir abondonner cet examen ?'\n              )\n              if (response) {\n                effects.deleteExam(value._id.toString())\n              }\n            }}\n          >\n            <TrashIcon size=\"20\" />\n          </Button>\n        )}\n      </Fragment>\n    ),\n    sortIteratee: undefined,\n  },\n  {\n    name: 'Publication',\n    itemRenderer: (value, state, effects) => {\n      const generatedKey = Utils.generateKey()\n      return value.approved ? (\n        <Fragment>\n          <PublishedIcon\n            color=\"green\"\n            size=\"25\"\n            id={`published-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`published-icon-${generatedKey}`}\n          >\n            Votre examen est en ligne\n          </UncontrolledTooltip>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <VerificationIcon\n            color=\"orange\"\n            size=\"25\"\n            id={`on-verification-icon-${generatedKey}`}\n          />\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`on-verification-icon-${generatedKey}`}\n          >\n            En vérification\n          </UncontrolledTooltip>\n        </Fragment>\n      )\n    },\n    sortIteratee: undefined,\n  },\n]\n\nconst UserAddedExamss = ({ effects, state, lastIndex, exams }) => (\n  <SortedTable\n    columns={columns}\n    collection={exams}\n    filteredCollection={exams}\n    initialSortIteratee={'date'}\n    initialSortDirection={'desc'}\n    pagination={exams && exams.length > 10}\n    uniqueKey={'_id'}\n  />\n)\n\nexport default withState(injectState(UserAddedExamss))\n","import CloseIcon from 'react-icons/lib/fa/close'\nimport React from 'react'\nimport { injectState } from 'reaclette'\n\nimport './modal-img-style.css'\n\nconst ModalImg = ({ effects, picture, onCloseImgModal }) => (\n  <div className=\"img-modal\">\n    <span className=\"close-modal\">\n      <CloseIcon onClick={() => onCloseImgModal()} color=\"white\" />\n    </span>\n    <img className=\"modal-content\" src={picture} alt=\"modal picture\" />\n    <div id=\"caption\" />\n  </div>\n)\n\nexport default injectState(ModalImg)\n","import AngleDownIcon from 'react-icons/lib/fa/angle-down'\nimport TrashIcon from 'react-icons/lib/fa/trash'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport EditIcon from 'react-icons/lib/fa/pencil'\nimport InfoIcon from 'react-icons/lib/fa/info-circle'\nimport PlusIcon from 'react-icons/lib/fa/plus'\nimport React, { Fragment } from 'react'\nimport {\n  Badge,\n  Card,\n  Col,\n  Collapse,\n  Row,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport ModalImg from '../components/modal-img'\nimport ActionButton from '../components/action-button'\nimport CorrectAnswersPicture from '../imgs/exam-correct-answers.png'\n\nconst withState = provideState({\n  initialState: ({ answers, correctAnswers, question, lastIndex }) => ({\n    question: question || '',\n    questionNum: lastIndex,\n    A: (answers && answers.A) || '',\n    B: (answers && answers.B) || '',\n    C: (answers && answers.C) || '',\n    D: (answers && answers.D) || '',\n    E: (answers && answers.E) || '',\n    correctAnswers: correctAnswers || [],\n    validatedQuestion: false,\n    firstRender: true,\n    modalCorrectAnswers: false,\n    correctAnswersRequired: false,\n  }),\n  effects: {\n    initialize: () => (state, { question }) => {\n      if (state.alreadyValidatedQuestion) {\n        state.validatedQuestion = true\n      }\n    },\n    toggleCorrectAnswersPicture: () => state => ({\n      modalCorrectAnswers: !state.modalCorrectAnswers,\n    }),\n    addQuestion: () => (state, props) => {\n      if (state.correctAnswers.length === 0) {\n        state.correctAnswersRequired = true\n      } else {\n        const questionData = {\n          [state.questionNum]: {\n            question: state.question,\n            answers: {\n              A: state.A,\n              B: state.B,\n              C: state.C,\n              D: state.D,\n              E: state.E,\n            },\n            correctAnswers: state.correctAnswers,\n          },\n        }\n        props.onAddQuestion(questionData)\n        state.validatedQuestion = true\n        state.firstRender = false\n      }\n    },\n    handleQuestionValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    handleCorrectAnswer: (_, selected) => state => {\n      state.correctAnswersRequired = false\n      const index = state.correctAnswers.indexOf(selected)\n      if (index < 0) {\n        state.correctAnswers.push(selected)\n      } else {\n        state.correctAnswers.splice(index, 1)\n      }\n      return {\n        ...state,\n        correctAnswers: [...state.correctAnswers],\n      }\n    },\n    toggleQuestion: () => state => {\n      state.validatedQuestion = !state.validatedQuestion\n    },\n  },\n  computed: {\n    alreadyValidatedQuestion: (_, { question }) => question,\n  },\n})\n\nconst QuestionForm = ({\n  effects,\n  state,\n  lastIndex,\n  onDeleteLastQuestion,\n  isLastQuestion,\n}) => (\n  <div>\n    <InputGroup style={{ marginBottom: '16px' }}>\n      <Input\n        style={{ fontWeight: 'bold' }}\n        disabled\n        value={`Question ${state.questionNum}`}\n      />\n      <Input disabled value={`Réponses ${state.correctAnswers}`} />\n      <InputGroupAddon addonType=\"prepend\">\n        <Button\n          onClick={effects.toggleQuestion}\n          disabled={!state.validatedQuestion}\n          outline\n        >\n          {!state.validatedQuestion ? <AngleDownIcon /> : <EditIcon />}\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n    <Collapse isOpen={!state.validatedQuestion}>\n      <Card body style={{ marginBottom: '30px' }}>\n        <Form id={`question-form-${lastIndex + 1}`}>\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{`Question ${\n                    state.questionNum\n                  }`}</InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  name=\"question\"\n                  onChange={effects.handleQuestionValues}\n                  required\n                  type=\"text\"\n                  placeholder=\"Question *\"\n                  value={state.question}\n                />\n              </InputGroup>\n              <FormGroup />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">A</InputGroupAddon>\n                  <Input\n                    name=\"A\"\n                    value={state.A}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition A\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">B</InputGroupAddon>\n                  <Input\n                    name=\"B\"\n                    value={state.B}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition B\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">C</InputGroupAddon>\n                  <Input\n                    name=\"C\"\n                    value={state.C}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition C\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">D</InputGroupAddon>\n                  <Input\n                    name=\"D\"\n                    value={state.D}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition D\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <FormGroup>\n                <InputGroup>\n                  <InputGroupAddon addonType=\"prepend\">E</InputGroupAddon>\n                  <Input\n                    name=\"E\"\n                    value={state.E}\n                    onChange={effects.handleQuestionValues}\n                    placeholder=\"Proposition E\"\n                    required\n                  />\n                </InputGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <span className=\"text-muted\">Bonne réponses &nbsp;</span>\n              <ButtonGroup>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('A')}\n                  active={state.correctAnswers.includes('A')}\n                >\n                  &nbsp;A&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('B')}\n                  active={state.correctAnswers.includes('B')}\n                >\n                  &nbsp;B&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('C')}\n                  active={state.correctAnswers.includes('C')}\n                >\n                  &nbsp;C&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('D')}\n                  active={state.correctAnswers.includes('D')}\n                >\n                  &nbsp;D&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={() => effects.handleCorrectAnswer('E')}\n                  active={state.correctAnswers.includes('E')}\n                >\n                  &nbsp;E&nbsp;\n                </Button>\n                <Button\n                  color=\"light\"\n                  onClick={effects.toggleCorrectAnswersPicture}\n                >\n                  <InfoIcon\n                    color=\"orange\"\n                    size=\"23\"\n                    style={{ verticalAlign: 'bottom' }}\n                  />\n                  {state.modalCorrectAnswers && (\n                    <ModalImg\n                      picture={CorrectAnswersPicture}\n                      onCloseImgModal={effects.toggleCorrectAnswersPicture}\n                    />\n                  )}\n                </Button>\n              </ButtonGroup>\n              &nbsp; &nbsp;\n              {state.correctAnswers.length > 0 && (\n                <Fragment>\n                  <span className=\"text-muted\">\n                    Réponses selectionnées &nbsp;\n                  </span>\n                  <span>\n                    {map(state.correctAnswers, answer => (\n                      <Badge key={answer} color=\"light\">\n                        {answer}\n                      </Badge>\n                    ))}\n                  </span>\n                </Fragment>\n              )}\n            </Col>\n          </Row>\n          {state.correctAnswersRequired && (\n            <Row>\n              <Col>\n                <span style={{ color: 'red' }}>\n                  Il faut choisir au moins une réponse :)\n                </span>\n              </Col>\n            </Row>\n          )}\n          <Row style={{ marginTop: '20px' }}>\n            <Col md=\"5\" />\n            <Col md=\"3\">\n              {isLastQuestion && (\n                <Button\n                  color=\"light\"\n                  block\n                  onClick={() => {\n                    const response = window.confirm(\n                      'Etes vous sûr de vouloir supprimer cette question ?'\n                    )\n                    if (response) {\n                      onDeleteLastQuestion()\n                    }\n                  }}\n                >\n                  Supprimer question <TrashIcon />\n                </Button>\n              )}\n            </Col>\n            <Col md=\"4\">\n              <ActionButton\n                text={\n                  <span>\n                    {!state.alreadyValidatedQuestion\n                      ? 'Ajouter question'\n                      : 'Modifier question'}{' '}\n                    <PlusIcon />\n                  </span>\n                }\n                color=\"info\"\n                block={true}\n                action={effects.addQuestion}\n                form={`question-form-${lastIndex + 1}`}\n              />\n            </Col>\n          </Row>\n        </Form>\n      </Card>\n    </Collapse>\n  </div>\n)\n\nexport default withState(injectState(QuestionForm))\n","import CheckIcon from 'react-icons/lib/fa/check'\nimport WarningIcon from 'react-icons/lib/fa/exclamation-triangle'\nimport CloseIcon from 'react-icons/lib/fa/close'\nimport DatePicker from 'react-datepicker'\nimport FloopyIcon from 'react-icons/lib/fa/floppy-o'\nimport PlusIcon from 'react-icons/lib/fa/plus'\nimport PlayIcon from 'react-icons/lib/fa/play'\nimport InfoIcon from 'react-icons/lib/fa/info-circle'\nimport React, { Fragment } from 'react'\nimport {\n  Alert,\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  UncontrolledTooltip,\n  Label,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport 'react-datepicker/dist/react-datepicker.css'\nimport Universities from '../data/cities'\nimport ActionButton from '../components/action-button'\nimport ExamDatePicture from '../imgs/exam-date.jpg'\nimport ModalImg from '../components/modal-img'\nimport Modules from '../data/modules'\nimport QuestionForm from '../question-form'\n\nimport './modal-img-style.css'\nimport './input-date-style.css'\n\nconst MIN_QUESTIONS_LENGTH = 2\n\nconst withState = provideState({\n  initialState: ({ data, verified, university }) => ({\n    module: (data && data.module) || '',\n    examDate: (data && data.examDate && new Date(data.examDate)) || '',\n    _university: (data && data.university) || university || '',\n    questions: (data && data.exam) || {},\n    moduleExists: !verified,\n    examCompleted: false,\n    modalExamPicture: false,\n    examProof: (data && data.examProof) || '',\n  }),\n  effects: {\n    addExam: effects => async (state, { onHideExamView }) => {\n      if (Object.keys(state.questions).length < MIN_QUESTIONS_LENGTH) {\n        effects.notifyError(\n          `Il faut au minimum ${MIN_QUESTIONS_LENGTH} questions pour commencer à ajouter un examen`\n        )\n      } else {\n        let creator = {}\n        if (state.authId !== '5c2e153a6071059caef396ac') {\n          creator = { creator: state.authId }\n        }\n        try {\n          await state.mongodb.updateOne(\n            {\n              module: state.module,\n              examDate: new Date(state.examDate).valueOf(),\n              university: state._university,\n            },\n            {\n              $set: {\n                type: 'exam',\n                examDate: new Date(state.examDate).valueOf(),\n                ...creator,\n                date: Date.now(),\n                completed: true,\n                approved: false, //TODO: make it always false\n                university: state._university,\n                examProof: state.examProof,\n                exam: {\n                  ...state.questions,\n                },\n              },\n            },\n            { upsert: true }\n          )\n          state.examCompleted = true\n          effects.notifySuccess(\n            'Merci, votre examen est ajouté avec succés !, Il sera vérifié et publier bientôt :)'\n          )\n          onHideExamView()\n          effects.getPostedExams()\n          effects.getLastPostedExams()\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n    },\n    toggleExamDatePicture: () => state => ({\n      ...state,\n      modalExamPicture: !state.modalExamPicture,\n    }),\n    handleExamValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    handleExamDate: (_, date) => state => {\n      state.examDate = new Date(date)\n    },\n    addQuestionView: () => state => {\n      const questionKeys = Object.keys(state.questions)\n      const lastKey = questionKeys.length > 0 ? +questionKeys.pop() : 0\n      state.questions = {\n        ...state.questions,\n        [lastKey + 1]: {},\n      }\n    },\n    deleteLastQuestion: () => state => {\n      const questionKeys = Object.keys(state.questions)\n      const lastKey = +questionKeys.pop()\n      let _questions = { ...state.questions }\n      delete _questions[lastKey]\n      state.questions = _questions\n    },\n    addQuestion: (_, questionData) => state => {\n      let questions = { ...state.questions }\n      questions = {\n        ...questions,\n        ...questionData,\n      }\n      return {\n        ...state,\n        questions,\n      }\n    },\n    saveExamForLater: (effects, close = true) => async (\n      state,\n      { onHideExamView }\n    ) => {\n      let creator = {}\n      if (state.authId !== '5c2e153a6071059caef396ac') {\n        creator = { creator: state.authId }\n      }\n      try {\n        await state.mongodb.updateOne(\n          {\n            module: state.module,\n            examDate: new Date(state.examDate).valueOf(),\n            university: state._university,\n          },\n          {\n            $set: {\n              type: 'exam',\n              examDate: new Date(state.examDate).valueOf(),\n              ...creator,\n              date: Date.now(),\n              completed: false,\n              approved: false,\n              university: state._university,\n              examProof: state.examProof,\n              exam: {\n                ...state.questions,\n              },\n            },\n          },\n          { upsert: true }\n        )\n        state.examCompleted = true\n        close &&\n          effects.notifySuccess(\n            \"l'examen est sauvegardé avec succées, vous pouvez le compléter dans votre tableau d'examen\"\n          )\n        close && onHideExamView()\n        effects.getPostedExams()\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    verifyModuleExisting: effects => async state => {\n      const cursor = await state.mongodb\n        .find({\n          module: state.module,\n          examDate: new Date(state.examDate).valueOf(),\n          university: state._university,\n        })\n        .iterator()\n      const res = await cursor.next()\n      if (res) {\n        effects.notifyError(\n          \"Cet examen est en cours d'être remplis par un autre utilisateur ou existe déjà :( S'il vous plait, choisisssez un autre examen :)\"\n        )\n        effects.notifyError(\"S'il vous plait, choisisssez un autre examen :)\")\n      } else {\n        effects.saveExamForLater(false)\n        return {\n          ...state,\n          moduleExists: false,\n        }\n      }\n    },\n  },\n  computed: {\n    validInitialExamData: ({ year, examDate, module, _university }) =>\n      examDate !== '' && module !== '' && _university !== '',\n    addExamStarted: ({ moduleExists }) => !moduleExists,\n    lastQuestionIndex: ({ questions }) => {\n      const questionKeys = Object.keys(questions)\n      return questionKeys.length > 0 ? +questionKeys.pop() : 0\n    },\n  },\n})\n\nconst ExamForm = ({ effects, state, onHideExamView }) => {\n  const datePickerProps = {\n    dateFormat: 'dd/MM/yyyy',\n    onChange: effects.handleExamDate,\n    placeholderText: 'Date examen *',\n    className: 'input-date-style',\n    disabled: state.addExamStarted,\n  }\n  if (state.examDate !== '') {\n    datePickerProps.selected = state.examDate\n  }\n  return (\n    <div>\n      <Form id=\"exam-form\">\n        <Row>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">Module</Label>\n              <Input\n                name=\"module\"\n                onChange={effects.handleExamValues}\n                required\n                type=\"select\"\n                value={state.module}\n                disabled={state.addExamStarted}\n              >\n                <option value=\"\">Module *</option>\n                {Modules &&\n                  map(Modules, module => (\n                    <option key={module} value={module}>\n                      {module}\n                    </option>\n                  ))}\n              </Input>\n            </FormGroup>\n          </Col>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">Université</Label>\n              <Input\n                name=\"_university\"\n                onChange={effects.handleExamValues}\n                required\n                type=\"select\"\n                value={state._university}\n                disabled={state.addExamStarted}\n              >\n                <option value=\"\">Université *</option>\n                {Universities &&\n                  map(Universities, university => (\n                    <option key={university.code} value={university.nom}>\n                      {`${university.code} - ${university.nom}`}\n                    </option>\n                  ))}\n              </Input>\n            </FormGroup>\n          </Col>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">Date - Session</Label>\n              <InputGroup>\n                <DatePicker {...datePickerProps} />\n                <InputGroupAddon\n                  addonType=\"append\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={effects.toggleExamDatePicture}\n                >\n                  <InputGroupText>\n                    <InfoIcon color=\"orange\" size=\"20\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </FormGroup>\n          </Col>\n          <Col md=\"3\">\n            <FormGroup>\n              <Label className=\"text-muted\">&nbsp;</Label>\n              <ActionButton\n                text={\n                  <span>\n                    Commencer &nbsp; <PlayIcon />\n                  </span>\n                }\n                color=\"success\"\n                action={effects.verifyModuleExisting}\n                block={true}\n                disabled={!state.validInitialExamData || !state.moduleExists}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <br />\n        {!state.moduleExists && (\n          <Fragment>\n            {map(state.questions, (questData, index) => (\n              <QuestionForm\n                question={questData.question}\n                answers={questData.answers}\n                correctAnswers={questData.correctAnswers}\n                key={+index}\n                lastIndex={+index}\n                onAddQuestion={effects.addQuestion}\n                onDeleteLastQuestion={effects.deleteLastQuestion}\n                isLastQuestion={state.lastQuestionIndex === +index}\n              />\n            ))}\n            <Row>\n              <Col md=\"8\" />\n              <Col md=\"4\">\n                <Button\n                  className=\"float-right\"\n                  onClick={effects.addQuestionView}\n                  disabled={!state.validInitialExamData}\n                  outline\n                  color=\"info\"\n                >\n                  Ajouter une question <PlusIcon />\n                </Button>\n                &nbsp;\n                <Button\n                  color=\"light\"\n                  className=\"float-right\"\n                  id=\"delete-info\"\n                  onClick={() => {}}\n                >\n                  <InfoIcon\n                    color=\"orange\"\n                    size=\"23\"\n                    style={{ verticalAlign: 'bottom' }}\n                  />\n                </Button>\n                <UncontrolledTooltip placement=\"left\" target=\"delete-info\">\n                  Pour Respecter l'ordre des questions ajoutées, Nous vous\n                  offrons la possiblité de supprimer seulement la dernière\n                  question ajoutée\n                </UncontrolledTooltip>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <Label className=\"text-muted\">Preuve d'examen</Label>\n                  <Input\n                    name=\"examProof\"\n                    placeholder=\"Peut être le lien de l'examen dans Drive ou Dropbox. Exemple https://drive.google.com/open?id=1Q3sMhD_BwAczA6gsTVhq_Q43TZTigZXk\"\n                    onChange={effects.handleExamValues}\n                    required\n                    type=\"text\"\n                    value={state.examProof}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Alert color=\"warning\">\n                  <WarningIcon /> Vous avez que 7 jours pour terminer la saisie\n                  de cet examen\n                </Alert>\n              </Col>\n            </Row>\n          </Fragment>\n        )}\n        <br />\n        <br />\n        {state.addExamStarted && (\n          <Row>\n            <Col md=\"2\">\n              <Button\n                className=\"float-left\"\n                color=\"warning\"\n                block\n                onClick={() => {\n                  const response = window.confirm(\n                    \"Etes vous sûr de vouloir quitter sans sauvegarder l'examen pour plus tard ?\"\n                  )\n                  if (response) {\n                    onHideExamView()\n                  }\n                }}\n              >\n                Quitter <CloseIcon color=\"red\" />\n              </Button>\n            </Col>\n            <Col md=\"2\" />\n            <Col md=\"4\">\n              <ActionButton\n                text={\n                  <span>\n                    Sauvegarder pour plus tard <FloopyIcon />\n                  </span>\n                }\n                action={effects.saveExamForLater}\n                disabled={!state.addExamStarted}\n                block={true}\n              />\n            </Col>\n            <Col md=\"4\">\n              <ActionButton\n                text={\n                  <span>\n                    Ajouter l'examen <CheckIcon />\n                  </span>\n                }\n                color=\"success\"\n                action={effects.addExam}\n                form=\"exam-form\"\n                disabled={!state.addExamStarted}\n                block={true}\n              />\n            </Col>\n          </Row>\n        )}\n      </Form>\n      {state.modalExamPicture && (\n        <ModalImg\n          picture={ExamDatePicture}\n          onCloseImgModal={effects.toggleExamDatePicture}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default withState(injectState(ExamForm))\n","import PlusIcon from 'react-icons/lib/fa/plus'\nimport GlobeIcon from 'react-icons/lib/fa/globe'\nimport React from 'react'\nimport { Button, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport UserAddedExams from '../user-added-exams'\nimport ExamForm from '../exam-form'\nimport LoadingIcon from '../imgs/button-spinner.gif'\n\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  initialState: () => ({\n    addExamView: false,\n    initialExamData: undefined,\n    examLoading: false,\n    queryString: false,\n  }),\n  effects: {\n    initialize: effects => async (state, { match }) => {\n      const examId = match && match.params && match.params.examId\n      if (examId) {\n        state.examLoading = true\n        const objectId = new ObjectId(examId)\n        const exam = await state.mongodb.find({ _id: objectId }).asArray()\n        state.initialExamData = exam.pop()\n        state.examLoading = false\n        state.addExamView = true\n      }\n      const params = new URLSearchParams(window.location.hash.split('?')[1])\n      const _module = params.get('module')\n      const university = params.get('university')\n      if (_module && university) {\n        state.queryString = true\n        state.initialExamData = {\n          module: _module,\n          university: university,\n        }\n        effects.displayExamView()\n      }\n    },\n    displayExamView: () => state => ({\n      ...state,\n      addExamView: true,\n    }),\n    hideExamView: () => state => ({\n      ...state,\n      addExamView: false,\n    }),\n  },\n})\n\nconst Contribuate = ({ effects, state }) => (\n  <div style={{ marginTop: '20px' }}>\n    <Row>\n      <Col md=\"9\">\n        <h5 className=\"text-muted\">\n          Le monde n'a pas été crée en un jour{' '}\n          <GlobeIcon style={{ color: '#0e627f' }} />\n        </h5>\n      </Col>\n      <Col md=\"3\">\n        <Button\n          className=\"float-right\"\n          onClick={effects.displayExamView}\n          disabled={state.addExamView}\n          block\n          color=\"success\"\n        >\n          Ajouter un examen <PlusIcon color=\"white\" />\n        </Button>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        {state.examLoading ? (\n          <Row className=\"my-3\">\n            <Col md={{ size: 2, offset: 5 }}>\n              <br />\n              <div className=\"text-center\">\n                <img\n                  src={LoadingIcon}\n                  width=\"50\"\n                  height=\"50\"\n                  alt=\"Loading...\"\n                />\n              </div>\n              <p className=\"text-muted text-center\">Examen en chargement ...</p>\n            </Col>\n          </Row>\n        ) : (\n          state.addExamView && (\n            <ExamForm\n              data={state.initialExamData}\n              onHideExamView={effects.hideExamView}\n              verified={\n                state.queryString ? false : state.initialExamData ? true : false\n              }\n              university={state.university}\n            />\n          )\n        )}\n      </Col>\n    </Row>\n    <br />\n    <hr />\n    {state.authId && (\n      <Row>\n        <Col>\n          <p className=\"text-muted\" style={{ fontWeight: 'bold' }}>\n            Mes examens postés\n          </p>\n          <UserAddedExams exams={state.postedExams} />\n        </Col>\n      </Row>\n    )}\n  </div>\n)\n\nexport default withState(injectState(Contribuate))\n","import EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport PlaneIcon from 'react-icons/lib/fa/paper-plane'\nimport React from 'react'\nimport {\n  Card,\n  CardBody,\n  Button,\n  CardTitle,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n  CardImg,\n  UncontrolledTooltip,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport ActionButton from '../components/action-button'\nimport CuteKoala from '../imgs/cute_koala.jpg'\n\nconst withState = provideState({\n  initialState: () => ({\n    name: '',\n    email: '',\n    message: '',\n    messageSent: false,\n  }),\n  effects: {\n    handleContactUsValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    sendMessage: effects => async state => {\n      let creator = {}\n      if (state.authId) {\n        creator = {\n          creator: state.authId,\n        }\n      }\n      try {\n        await state.mongodb.insertOne({\n          type: 'message',\n          ...creator,\n          name: state.name,\n          email: state.email,\n          message: state.message,\n          date: Date.now(),\n        })\n        state.messageSent = true\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n  },\n})\n\nconst ContactUs = ({ effects, state }) =>\n  state.messageSent ? (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Contactez-nous\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\" style={{ fontSize: '18px' }}>\n          <CheckIcon color=\"green\" /> &nbsp; Votre message est envoyé avec\n          succés, il sera lu dans les plus bref délais\n        </p>\n        <div className=\"text-center\">\n          <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n        </div>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        className=\"text-center\"\n        style={{\n          backgroundColor: '#7bc3d1',\n          color: 'white',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n      >\n        <h5 style={{ marginTop: '10px' }}>\n          Contactez-nous&nbsp;\n          <EnvelopeIcon size=\"22\" />\n        </h5>\n      </span>\n      <CardBody>\n        <CardText>\n          <Form id=\"contact-us-form\">\n            <FormGroup>\n              <Label className=\"text-muted\">Nom</Label>\n              <Input\n                name=\"name\"\n                onChange={effects.handleContactUsValues}\n                required\n                type=\"text\"\n                placeholder=\"Votre nom ! *\"\n                value={state.name}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label className=\"text-muted\">Email</Label>\n              <Input\n                name=\"email\"\n                onChange={effects.handleContactUsValues}\n                required\n                type=\"email\"\n                placeholder=\"Votre email ! *\"\n                value={state.email}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label className=\"text-muted\">Message</Label>\n              <Input\n                name=\"message\"\n                onChange={effects.handleContactUsValues}\n                required\n                type=\"textarea\"\n                placeholder=\"Message *\"\n                value={state.message}\n                style={{ height: '200px' }}\n              />\n            </FormGroup>\n            <Row>\n              <Col md=\"4\" />\n              <Col md=\"4\" />\n              <Col>\n                <ActionButton\n                  text={\n                    <span style={{ fontWeight: 'bold' }}>\n                      Envoyer <PlaneIcon />\n                    </span>\n                  }\n                  color=\"info\"\n                  action={effects.sendMessage}\n                  form=\"contact-us-form\"\n                />\n              </Col>\n            </Row>\n          </Form>\n        </CardText>\n      </CardBody>\n    </Card>\n  )\n\nexport default withState(injectState(ContactUs))\n","import React from 'react'\nimport { Card, CardBody, Button, CardText, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport CuteKoala from '../imgs/cute_koala.jpg'\n\nconst ContestExam = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        <Row>\n          <Col>\n            Il y a pas assez d'examens saisis pour commencer un concours :(\n          </Col>\n        </Row>\n        <Row>\n          <Col>S'il vous plait, pensez à en ajouter un :)</Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <Button\n              color=\"info\"\n              onClick={() => {\n                if (state.logged) {\n                  history.push('/contribuer')\n                } else {\n                  history.push('/authenticate')\n                }\n              }}\n            >\n              Ajouter un examen\n            </Button>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col>\n            <div className=\"text-center\">\n              <img src={CuteKoala} alt=\"cute koala\" height=\"200\" width=\"200\" />\n            </div>\n          </Col>\n        </Row>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ContestExam)\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport PuzzleIcon from 'react-icons/lib/fa/puzzle-piece'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardTitle,\n  CardText,\n  CardImg,\n  UncontrolledTooltip,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport ContributeImg from '../imgs/contribute.png'\n\nconst ContributeCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardImg\n      top\n      width=\"100%\"\n      src={ContributeImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n    />\n    <span\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Contribuer&nbsp;\n        <PuzzleIcon size=\"22\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText style={{ textAlign: 'center' }}>\n        Vous avez passez un examen ? Pourquoi pas l'ajouter pour que vos\n        succusseurs en bénéficieront, ou peut être vous le trouverez quand vous\n        réviserez pour le concours. Vivez l'expérience du bénévolat et regardez\n        l'ampleur de votre contribution <EyeIcon /> avec Med QCM\n        <div style={{ marginTop: '10px' }}>\n          <Button\n            id=\"contribute-tooltip\"\n            color=\"dark\"\n            onClick={() => {\n              if (state.logged) {\n                history.push('/contribuer')\n              } else {\n                history.push('/authenticate')\n              }\n            }}\n          >\n            Contribuer\n          </Button>\n          <UncontrolledTooltip placement=\"top\" target=\"contribute-tooltip\">\n            Dieu a dit: Quiconque viendra avec le bien aura dix fois autant. Al\n            An-aam-6-160\n          </UncontrolledTooltip>\n        </div>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ContributeCard)\n","import GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardTitle,\n  CardText,\n  CardImg,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport ExamImg from '../imgs/exam.png'\n\nconst ExamCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardImg\n      top\n      width=\"100%\"\n      style={{ cursor: 'pointer' }}\n      src={ExamImg}\n      alt=\"Card image cap\"\n      onClick={() => {\n        history.push('/examen')\n      }}\n    />\n    <span\n      onClick={() => {\n        history.push('/examen')\n      }}\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Passer un examen&nbsp;\n        <GraduateIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText style={{ textAlign: 'center' }}>\n        Passez des examens en ligne et voyez votre les résultats de votre\n        révision.\n        <div style={{ marginTop: '10px' }}>\n          <Button\n            color=\"dark\"\n            onClick={() => {\n              history.push('/examen')\n            }}\n          >\n            Passer un examen\n          </Button>\n        </div>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ExamCard)\n","import React from 'react'\nimport { Card, CardBody, Button, CardText, CardImg, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PileStackIdeaImg from '../../imgs/pile-stack-idea.jpg'\n\nconst IdeaCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardImg\n      top\n      width=\"100%\"\n      src={PileStackIdeaImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Dites au revoir aux papeparasses, créez votre monde par vous même en\n        partageant les examens avec vos collègues ainsi pour les générations à\n        venir\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(IdeaCard)\n","import React from 'react'\nimport { Card, CardBody, Button, CardText, CardImg, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PilePassword from '../../imgs/pile-password.jpg'\n\nconst SecurityCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardImg\n      top\n      width=\"100%\"\n      src={PilePassword}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Créez un compte et suivez votre révision jusqu'au concours\n      </CardText>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Hakima QCM vous aide à vous focaliser sur vos faiblesses\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SecurityCard)\n","import React from 'react'\nimport { Card, CardBody, Button, CardText, CardImg, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PileStackLampImg from '../../imgs/pile-stack-lamp.jpg'\n\nconst SolutionCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardImg\n      top\n      width=\"100%\"\n      src={PileStackLampImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Hakima QCM vous aide à mieux réviser en organisant et triant les examens\n        à votre place\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SolutionCard)\n","import React from 'react'\nimport { Card, CardBody, Button, CardText, CardImg, Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport PileStackImg from '../../imgs/pile-stack.jpg'\n\nconst SolutionCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <CardImg\n      top\n      width=\"100%\"\n      src={PileStackImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Etudiant(e) en médecine ?\n      </CardText>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Marre d'acheter des EMD ?\n      </CardText>\n      <CardText style={{ textAlign: 'center', fontSize: '20px' }}>\n        Fatigué d'organiser votre révision ?\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SolutionCard)\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState } from 'reaclette'\n\nimport IdeaCard from './idea-card'\nimport SecurityCard from './security-card'\nimport SolutionCard from './solution-card'\nimport ProblemCard from './problem-card'\n\nconst IllustrationIdeaCard = ({ history, state }) => (\n  <Row>\n    <Col md=\"3\" xs=\"12\">\n      <ProblemCard />\n    </Col>\n    <Col md=\"3\" xs=\"12\">\n      <SolutionCard />\n    </Col>\n    <Col md=\"3\" xs=\"12\">\n      <IdeaCard />\n    </Col>\n    <Col md=\"3\" xs=\"12\">\n      <SecurityCard />\n    </Col>\n  </Row>\n)\n\nexport default injectState(IllustrationIdeaCard)\n","import React from 'react'\nimport BankIcon from 'react-icons/lib/fa/bank'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport moment from 'moment'\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardText,\n  Table,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport { map } from 'lodash'\nimport PublishedIcon from 'react-icons/lib/fa/cloud-upload'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\n\nconst PublishedExams = ({ state, history }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Examens ajoutés Récements&nbsp;&nbsp;\n        <PublishedIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <Table>\n        <tbody>\n          {!state.lastPostedExams ? (\n            <Row className=\"my-3\">\n              <Col md={{ size: 2, offset: 5 }}>\n                <br />\n                <div className=\"text-center\">\n                  <img\n                    src={LoadingIcon}\n                    width=\"50\"\n                    height=\"50\"\n                    alt=\"Loading...\"\n                  />\n                </div>\n              </Col>\n            </Row>\n          ) : state.lastPostedExams && state.lastPostedExams.length === 0 ? (\n            <h3 className=\"text-center text-muted\">\n              <br />\n              Pas d'examens ajoutés :( &nbsp;\n              <ExclamationIcon size=\"30\" />\n              <br />\n            </h3>\n          ) : (\n            map(state.lastPostedExams, exam => (\n              <tr>\n                <td className=\"d-flex align-items-center\">\n                  <ModuleIcon />\n                  &nbsp;&nbsp;{exam.module}\n                </td>\n                <td>\n                  <Button color=\"dark\" disabled>\n                    {moment(exam.examDate).format('DD-MM-YYYY')}\n                  </Button>\n                </td>\n                <td>\n                  <Button color=\"light\" disabled>\n                    <BankIcon /> {exam.university}\n                  </Button>\n                </td>\n                <td>\n                  <EyeIcon size=\"18\" color=\"gray\" />{' '}\n                  <Badge color=\"light\">{exam.seen || 0}</Badge>\n                </td>\n                <td>\n                  <Button\n                    className=\"float-right\"\n                    color=\"light\"\n                    onClick={() => {\n                      history.push(`/examen/${exam._id}`)\n                    }}\n                  >\n                    &nbsp;\n                    <StartIcon size=\"23\" />\n                    &nbsp;\n                  </Button>\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </Table>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(PublishedExams)\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport PuzzleIcon from 'react-icons/lib/fa/puzzle-piece'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardTitle,\n  CardText,\n  CardImg,\n  UncontrolledTooltip,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport ShareExamImg from '../imgs/share-exam.png'\n\nconst ShareExamCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Partager un examen&nbsp;\n        <PuzzleIcon size=\"22\" />\n      </h5>\n    </span>\n    <CardImg\n      top\n      width=\"100%\"\n      src={ShareExamImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center' }}>\n        Vous avez passez un examen ? Pourquoi pas l'ajouter pour que vos\n        succusseurs en bénéficieront, ou peut être vous le trouverez quand vous\n        réviserez pour le concours. Vivez l'expérience du bénévolat et regardez\n        l'ampleur de votre contribution <EyeIcon /> avec Med QCM\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ShareExamCard)\n","import EyeIcon from 'react-icons/lib/fa/eye'\nimport PuzzleIcon from 'react-icons/lib/fa/puzzle-piece'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardTitle,\n  CardText,\n  CardImg,\n  UncontrolledTooltip,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport ShareExamImg from '../imgs/search-exam.png'\n\nconst SearchExamCard = ({ history, state }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      onClick={() => {\n        if (state.logged) {\n          history.push('/contribuer')\n        } else {\n          history.push('/authenticate')\n        }\n      }}\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ marginTop: '10px' }}>\n        Chercher un examen&nbsp;\n        <PuzzleIcon size=\"22\" />\n      </h5>\n    </span>\n    <CardImg\n      top\n      width=\"100%\"\n      src={ShareExamImg}\n      style={{ cursor: 'pointer' }}\n      alt=\"Card image cap\"\n      onClick={() => {\n        history.push('/examen')\n      }}\n    />\n    <CardBody>\n      <CardText style={{ textAlign: 'center' }}>\n        Vous avez passez un examen ? Pourquoi pas l'ajouter pour que vos\n        succusseurs en bénéficieront, ou peut être vous le trouverez quand vous\n        réviserez pour le concours. Vivez l'expérience du bénévolat et regardez\n        l'ampleur de votre contribution <EyeIcon /> avec Med QCM\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(SearchExamCard)\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport AuthOrCreate from '../auth-or-create'\nimport ContributeCard from '../contribute-card'\nimport ExamCard from '../exam-card'\nimport IllustrationIdeaCard from '../illustration-idea-cards'\nimport PublishedExams from '../published-exams'\nimport ShareExamCard from '../share-exam-card'\nimport SearchExamCard from '../search-exam-card'\n\nconst withState = provideState({\n  initialState: () => ({\n    activeTab: 'authentication',\n  }),\n  effects: {\n    toggle: (_, activeTab) => state => ({\n      ...state,\n      activeTab,\n    }),\n  },\n})\n\nconst Home = ({ effects, state, history }) => (\n  <div>\n    <IllustrationIdeaCard />\n    <br />\n    <Row>\n      <Col md=\"6\">\n        <PublishedExams history={history} />\n      </Col>\n      <Col md=\"3\">\n        <ContributeCard history={history} />\n      </Col>\n      <Col md=\"3\">\n        <ExamCard history={history} />\n      </Col>\n    </Row>\n    <br />\n    <Row>\n      <Col>\n        <SearchExamCard history={history} />\n      </Col>\n    </Row>\n    <br />\n    <Row>\n      <Col>\n        <ShareExamCard history={history} />\n      </Col>\n    </Row>\n  </div>\n)\n\nexport default withState(injectState(Home))\n","import Cookies from 'js-cookie'\nimport EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport ResendIcon from 'react-icons/lib/fa/refresh'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport React from 'react'\nimport { Alert, Button, Card, CardBody, CardTitle, Col, Row } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    confirmed: false,\n    loading: false,\n    emailResent: false,\n  }),\n  effects: {\n    initialize: effects => async state => {\n      const url = window.location.hash.split('?')[1]\n      const params = new URLSearchParams(url)\n      const token = params.get('token')\n      const tokenId = params.get('tokenId')\n      if (token && tokenId) {\n        state.loading = true\n        const emailPassClient = state.serverInstance.auth.getProviderClient(\n          UserPasswordAuthProviderClient.factory\n        )\n        try {\n          await emailPassClient.confirmUser(token, tokenId)\n          state.confirmed = true\n        } catch (err) {\n          effects.handleError(err)\n        }\n        state.loading = false\n      }\n    },\n    redirectToAuthenticate: () => (_, { history }) => {\n      history.push('/authenticate')\n    },\n    resendEmail: effects => async state => {\n      const emailPassClient = state.serverInstance.auth.getProviderClient(\n        UserPasswordAuthProviderClient.factory\n      )\n      const userEmail = Cookies.get('authEmail')\n      if (userEmail) {\n        try {\n          console.log('Mail resent to ', userEmail)\n          await emailPassClient.resendConfirmationEmail(userEmail)\n          state.emailResent = true\n        } catch (err) {\n          effects.handleError(err)\n        }\n      }\n    },\n  },\n})\n\nconst ConfirmPage = ({ effects, state }) => {\n  return state.loading ? (\n    <Col md={{ size: 2, offset: 5 }}>\n      <img src={LoadingIcon} alt=\"Loading...\" height=\"100\" width=\"100\" />\n    </Col>\n  ) : state.confirmed ? (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Confirmation de l'inscription\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\" style={{ fontSize: '18px' }}>\n          <CheckIcon color=\"green\" /> &nbsp; Votre inscription est confrimé avec\n          succés, veuillez vous identifier pour activer votre compte\n        </p>\n        <div className=\"text-center\">\n          <Button color=\"warning\" onClick={effects.redirectToAuthenticate}>\n            S'authentifier\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Confirmation de l'inscription\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\" style={{ fontSize: '18px' }}>\n          Vite! vite! Consultez votre email pour confirmer votre inscription{' '}\n          <EnvelopeIcon />\n        </p>\n        <Row>\n          <Col md={{ size: 4, offset: 4 }}>\n            <ActionButton\n              text={\n                <span>\n                  Renvoyer l'email de confirmation <ResendIcon />\n                </span>\n              }\n              action={effects.resendEmail}\n            />\n            <br />\n            {state.emailResent && (\n              <Alert color=\"success\" className=\"text-center\">\n                Email renvoyer avec succés\n              </Alert>\n            )}\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default withState(injectState(ConfirmPage))\n","import ResendIcon from 'react-icons/lib/fa/refresh'\nimport CheckIcon from 'react-icons/lib/fa/check'\nimport React from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Row,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { UserPasswordAuthProviderClient } from 'mongodb-stitch-browser-sdk'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport ActionButton from '../components/action-button'\n\nconst withState = provideState({\n  initialState: () => ({\n    confirmed: false,\n    loading: false,\n    newPassword: '',\n  }),\n  effects: {\n    confirmResetPassword: effects => async state => {\n      const url = window.location.hash.split('?')[1]\n      const params = new URLSearchParams(url)\n      const token = params.get('token')\n      const tokenId = params.get('tokenId')\n      if (token && tokenId) {\n        state.loading = true\n        const emailPassClient = state.serverInstance.auth.getProviderClient(\n          UserPasswordAuthProviderClient.factory\n        )\n        try {\n          await emailPassClient.resetPassword(token, tokenId, state.newPassword)\n          state.confirmed = true\n          effects.clearAccountConfirmtion()\n        } catch (err) {\n          effects.handleError(err)\n        }\n        state.loading = false\n      }\n    },\n    handleNewPassword: (_, { target: { value } }) => state => ({\n      ...state,\n      newPassword: value,\n    }),\n    redirectToAuthenticate: () => (_, { history }) => {\n      history.push('/authenticate')\n    },\n  },\n})\n\nconst ConfirmReset = ({ effects, state }) => {\n  return state.loading ? (\n    <Col md={{ size: 2, offset: 5 }}>\n      <img src={LoadingIcon} alt=\"Loading...\" height=\"100\" width=\"100\" />\n    </Col>\n  ) : state.confirmed ? (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Confirmation de l'inscription\n      </CardTitle>\n      <CardBody>\n        <p className=\"text-center\">\n          <CheckIcon color=\"green\" /> &nbsp; Votre mot de passe a été bien\n          réinitialisé\n        </p>\n        <div className=\"text-center\">\n          <Button color=\"light\" onClick={effects.redirectToAuthenticate}>\n            S'authentifier <ResendIcon />\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  ) : (\n    <Card body>\n      <CardTitle className=\"text-center\" style={{ fontWeight: 'bold' }}>\n        Réinitialisation du mot de passe\n      </CardTitle>\n      <CardBody>\n        <Row>\n          <Col md={{ size: 4, offset: 4 }}>\n            <Form id=\"confirm-reset-password\">\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Entrez votre nouveau mot de passe!\"\n                  value={state.newPassword}\n                  onChange={effects.handleNewPassword}\n                  required\n                />\n              </FormGroup>\n              <ActionButton\n                text={\n                  <span style={{ fontWeight: 'bold' }}>Reset password</span>\n                }\n                color=\"success\"\n                form=\"confirm-reset-password\"\n                action={effects.confirmResetPassword}\n              />\n            </Form>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default withState(injectState(ConfirmReset))\n","import React from 'react'\nimport CheckIcon from 'react-icons/lib/fa/check-circle'\n\nconst Footer = () => (\n  <footer\n    className=\"navbar fixed-bottom text-muted\"\n    style={{\n      backgroundColor: '#efefef',\n    }}\n  >\n    <div>\n      Tous les examens publiés sont vérfiés <CheckIcon size=\"20\" color=\"green\"/>{' '}\n    </div>\n    <div>© copyright Datcha Group</div>\n  </footer>\n)\n\nexport default Footer\n","import GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport moment from 'moment'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport LoadingIcon from '../../imgs/button-spinner.gif'\nimport { map, remove, isEmpty, difference } from 'lodash'\n\nimport { ObjectId } from 'bson'\n\nconst RED_COLOR = '#bc1e10'\nconst GREEN_COLOR = '#408f0a'\n\nconst withState = provideState({\n  initialState: ({ examData }) => ({ examData }),\n})\n\nconst Exam = ({ state, effects, history }) => {\n  return (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        className=\"text-center\"\n        style={{\n          backgroundColor: '#f5c018',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n      >\n        <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n          QCM&nbsp;\n          <GraduateIcon size=\"25\" />\n        </h5>\n      </span>\n      <CardBody>\n        <div>\n          <Row>\n            <Col>\n              <h4>\n                <Badge color=\"light\" className=\"float-left\">\n                  {state.examData && state.examData.university}\n                </Badge>\n              </h4>\n            </Col>\n            <Col>\n              <h4 className=\"text-center\">\n                <Badge color=\"dark\">\n                  {state.examData && state.examData.module}\n                </Badge>\n              </h4>\n            </Col>\n            <Col>\n              <h4>\n                <Badge color=\"light\" className=\"float-right\">\n                  {moment(state.examData && state.examData.examDate).format(\n                    'DD-MM-YYYY'\n                  )}\n                </Badge>\n              </h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={{ size: 8, offset: 2 }}>\n              {map(\n                state.examData.exam,\n                (currentQuestion, currentQuestionNum) => (\n                  <Card body style={{ marginBottom: '10px' }}>\n                    {state.currentQuestion && (\n                      <div style={{ marginBottom: '10px' }}>\n                        <h5>\n                          {currentQuestionNum}. {currentQuestion.question}\n                        </h5>\n                        <br />\n                        <ListGroup>\n                          {map(currentQuestion.answers, (answer, key) => (\n                            <div style={{ marginBottom: '8px' }}>\n                              <ListGroupItem\n                                style={\n                                  currentQuestion.correctAnswers.includes(key)\n                                    ? {\n                                        backgroundColor: GREEN_COLOR,\n                                        cursor: 'pointer',\n                                        color: 'white',\n                                        borderRadius: '10px',\n                                      }\n                                    : {\n                                        cursor: 'pointer',\n                                        borderRadius: '10px',\n                                      }\n                                }\n                              >\n                                {key}. {answer}\n                              </ListGroupItem>\n                            </div>\n                          ))}\n                        </ListGroup>\n                      </div>\n                    )}\n                  </Card>\n                )\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className=\"text-center\">\n                <Button color=\"dark\" onClick={effects.setExamMode}>\n                  Passer cet examen\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default withState(injectState(Exam))\n","import ResendIcon from 'react-icons/lib/fa/refresh'\nimport GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport moment from 'moment'\nimport React from 'react'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  CardText,\n  ListGroup,\n  ListGroupItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport LoadingIcon from '../../imgs/button-spinner.gif'\nimport ExamWithAnswers from '../exam-with-answers'\nimport ReportExam from './report-exam'\nimport { map, remove, isEmpty, difference } from 'lodash'\nimport { ObjectId } from 'bson'\n\nimport CuteKoala from '../../imgs/cute_koala.jpg'\n\nconst RED_COLOR = '#bc1e10'\nconst GREEN_COLOR = '#408f0a'\n\nconst withState = provideState({\n  initialState: () => ({\n    examData: undefined,\n    examLoading: false,\n    badAnsweredQuestions: {},\n    currentQuestionNum: 1,\n    selectedAnswers: [],\n    answered: false,\n    note: 0,\n    examEnd: false,\n    examMode: true,\n  }),\n  effects: {\n    initialize: effects => async (state, { match }) => {\n      const examId = match && match.params && match.params.examId\n      if (examId) {\n        state.examLoading = true\n        try {\n          const objectId = new ObjectId(examId)\n          const exam = await state.mongodb.find({ _id: objectId }).asArray()\n          state.examData = exam.pop()\n          effects.incrementViews(objectId, state.examData.seen || 0)\n        } catch (error) {\n          effects.handleError(error)\n        }\n        state.examLoading = false\n      }\n    },\n    incrementViews: (effects, examId, views) => async state => {\n      try {\n        await state.mongodb.updateOne(\n          {\n            _id: examId,\n          },\n          {\n            $set: {\n              seen: views + 1,\n            },\n          },\n          { upsert: true }\n        )\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    selectAnswer: (effects, answer) => state => {\n      if (state.selectedAnswers.includes(answer)) {\n        const _selectedAnswers = [...state.selectedAnswers]\n        remove(_selectedAnswers, ans => ans === answer)\n        state.selectedAnswers = _selectedAnswers\n      } else {\n        state.selectedAnswers = [...state.selectedAnswers, answer]\n      }\n    },\n    nextQuestion: () => state => {\n      if (state.isLastQuestion && state.answered) {\n        state.examEnd = true\n      }\n      if (!state.isLastQuestion && state.answered) {\n        state.selectedAnswers = []\n        const questionsIndexes = Object.keys(state.examData.exam)\n        const indexOfCurrentQuestion = questionsIndexes.indexOf(\n          String(state.currentQuestionNum)\n        )\n        state.currentQuestionNum = +questionsIndexes[indexOfCurrentQuestion + 1]\n        state.answered = false\n      } else if (!state.answered) {\n        state.answered = true\n        const diff = difference(\n          state.currentQuestion.correctAnswers,\n          state.selectedAnswers\n        )\n        if (isEmpty(diff)) {\n          // Good answer\n          state.note = state.note + 1\n        } else {\n          // Bad answer\n          state.badAnsweredQuestions = {\n            ...state.badAnsweredQuestions,\n            [state.currentQuestionNum]: state.currentQuestion,\n          }\n        }\n      }\n    },\n    displayAllAnswers: () => state => ({\n      ...state,\n      examMode: false,\n    }),\n    repassBadAnsweredQuestion: () => state => {\n      state.examData = { ...state.examData, exam: state.badAnsweredQuestions }\n      state.selectedAnswers = []\n      state.currentQuestionNum = +Object.keys(\n        state.badAnsweredQuestions\n      ).shift()\n      state.answered = false\n      state.examEnd = false\n      state.note = 0\n      state.badAnsweredQuestions = {}\n    },\n    setExamMode: () => state => ({\n      ...state,\n      examMode: true,\n    }),\n  },\n  computed: {\n    currentQuestion: ({ examData, currentQuestionNum }) => {\n      if (examData) {\n        return examData.exam[currentQuestionNum]\n      }\n    },\n    isLastQuestion: ({ questionsLength, currentQuestionNum }) =>\n      questionsLength === currentQuestionNum,\n    questionsLength: ({ examData }) =>\n      examData ? Object.keys(examData.exam).length : 0,\n    allAnswersAreCorrect: ({ questionsLength, note }) =>\n      questionsLength === note,\n  },\n})\n\nconst Exam = ({ state, effects, history }) => {\n  const questionStyle = key => {\n    if (state.answered && state.currentQuestion.correctAnswers.includes(key)) {\n      return {\n        backgroundColor: GREEN_COLOR,\n        cursor: 'pointer',\n        color: 'white',\n        borderRadius: '10px',\n      }\n    } else if (\n      state.answered &&\n      !state.currentQuestion.correctAnswers.includes(key) &&\n      state.selectedAnswers.includes(key)\n    ) {\n      return {\n        backgroundColor: RED_COLOR,\n        cursor: 'pointer',\n        color: 'white',\n        borderRadius: '10px',\n      }\n    } else if (!state.answered && state.selectedAnswers.includes(key)) {\n      return {\n        backgroundColor: '#7bc3d1',\n        cursor: 'pointer',\n        borderRadius: '10px',\n      }\n    } else {\n      return { cursor: 'pointer', borderRadius: '10px' }\n    }\n  }\n  return state.examMode ? (\n    <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n      <span\n        className=\"text-center\"\n        style={{\n          backgroundColor: '#7bc3d1',\n          color: 'white',\n          display: 'block',\n          cursor: 'pointer',\n        }}\n      >\n        <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n          QCM&nbsp;\n          <GraduateIcon size=\"25\" />\n        </h5>\n      </span>\n      <CardBody>\n        {state.examLoading ? (\n          <Row className=\"my-3\">\n            <Col md={{ size: 2, offset: 5 }}>\n              <br />\n              <div className=\"text-center\">\n                <img\n                  src={LoadingIcon}\n                  width=\"50\"\n                  height=\"50\"\n                  alt=\"Loading...\"\n                />\n              </div>\n              <p className=\"text-muted text-center\">Examen en chargement ...</p>\n            </Col>\n          </Row>\n        ) : state.examEnd ? (\n          <div style={{ marginTop: '20px' }}>\n            <h4 className=\"text-center\">\n              <Badge color=\"light\">\n                Note&nbsp;&nbsp;\n                <Badge color=\"dark\">\n                  {state.note} / {state.questionsLength}\n                </Badge>\n              </Badge>\n            </h4>\n            <div className=\"text-center\" style={{ margin: '15px' }}>\n              <ButtonGroup vertical>\n                {!state.allAnswersAreCorrect && (\n                  <Button outline onClick={effects.repassBadAnsweredQuestion}>\n                    Repasser les questions mal répondus <ResendIcon />\n                  </Button>\n                )}\n                <Button\n                  outline\n                  onClick={() => {\n                    history.push('/examen')\n                  }}\n                >\n                  Passer un autre examen\n                </Button>\n                <Button outline onClick={effects.displayAllAnswers}>\n                  Afficher toutes les réponses\n                </Button>\n              </ButtonGroup>\n            </div>\n            <div className=\"text-center\">\n              <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n            </div>\n          </div>\n        ) : (\n          <div>\n            <Row>\n              <Col>\n                <h4>\n                  <Badge color=\"light\" className=\"float-left\">\n                    {state.examData && state.examData.university}\n                  </Badge>\n                </h4>\n              </Col>\n              <Col>\n                <h4 className=\"text-center\">\n                  <Badge color=\"dark\">\n                    {state.examData && state.examData.module}\n                  </Badge>\n                </h4>\n              </Col>\n              <Col>\n                <h4>\n                  <Badge color=\"light\" className=\"float-right\">\n                    {moment(state.examData && state.examData.examDate).format(\n                      'DD-MM-YYYY'\n                    )}\n                  </Badge>\n                </h4>\n              </Col>\n            </Row>\n            <Row style={{ marginBottom: '10px' }}>\n              <Col md={{ size: 8, offset: 2 }}>\n                <div className=\"float-left\">\n                  <Button\n                    size=\"xs\"\n                    color=\"success\"\n                    outline\n                    onClick={effects.displayAllAnswers}\n                  >\n                    Afficher toutes les réponses\n                  </Button>\n                </div>\n                <h4 className=\"float-right\">\n                  <Badge color=\"light\">\n                    {state.currentQuestionNum} / {state.questionsLength}{' '}\n                    <span className=\"text-muted\">Questions</span>\n                  </Badge>\n                </h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={{ size: 8, offset: 2 }}>\n                <Card body>\n                  {state.currentQuestion && (\n                    <div style={{ marginBottom: '10px' }}>\n                      <h5>\n                        {state.currentQuestionNum}.{' '}\n                        {state.currentQuestion.question}\n                      </h5>\n                      <br />\n                      <ListGroup>\n                        {map(state.currentQuestion.answers, (answer, key) => (\n                          <div style={{ marginBottom: '8px' }}>\n                            <ListGroupItem\n                              style={questionStyle(key)}\n                              onClick={() => effects.selectAnswer(key)}\n                            >\n                              {key}. {answer}\n                            </ListGroupItem>\n                          </div>\n                        ))}\n                      </ListGroup>\n                    </div>\n                  )}\n                  <Row>\n                    <Col>\n                      <span className=\"float-left\">\n                        <ReportExam\n                          _module={state.examData && state.examData.module}\n                          examId={state.examData && state.examData._id}\n                          questionNum={state.currentQuestionNum}\n                          examDate={moment(\n                            state.examData && state.examData.examDate\n                          ).format('DD-MM-YYYY')}\n                        />\n                      </span>\n                    </Col>\n                    <Col>\n                      <Button\n                        color=\"dark\"\n                        className=\"float-right\"\n                        onClick={effects.nextQuestion}\n                      >\n                        {state.isLastQuestion && state.answered\n                          ? 'Terminer'\n                          : 'Suivant >>'}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </CardBody>\n    </Card>\n  ) : (\n    <ExamWithAnswers examData={state.examData} />\n  )\n}\n\nexport default withState(injectState(Exam))\n","import HistoryIcon from 'react-icons/lib/fa/history'\nimport React from 'react'\nimport { Card, CardBody, Button, CardText } from 'reactstrap'\nimport { injectState } from 'reaclette'\n\nconst PassedExams = ({ history }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#f5c018',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n        Examens déjà passé&nbsp;\n        <HistoryIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText style={{ textAlign: 'center' }} />\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(PassedExams)\n","import GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport PlusIcon from 'react-icons/lib/fa/plus-square-o'\nimport MinusIcon from 'react-icons/lib/fa/minus-square-o'\nimport React from 'react'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport moment from 'moment'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport { Badge, Button, Row, Col, Table } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport LoadingIcon from '../../../imgs/button-spinner.gif'\n\nconst withState = provideState({\n  initialState: () => ({\n    collapseExams: false,\n    loadingExams: false,\n    exams: undefined,\n  }),\n  effects: {\n    toggleExams: effects => async state => {\n      if (!state.collapseExams) {\n        await effects.getExamsByYearAndUniv()\n      }\n      return {\n        ...state,\n        collapseExams: !state.collapseExams,\n      }\n    },\n    getExamsByYearAndUniv: () => async (\n      state,\n      { year, university, _module }\n    ) => {\n      state.loadingExams = true\n      const result = await state.mongodb\n        .find(\n          {\n            module: _module,\n            university: university,\n            examDate: {\n              $lte: moment(`30/12/${year}`, 'DD-MM-YYYY').valueOf(),\n              $gte: moment(`01/01/${year}`, 'DD-MM-YYYY').valueOf(),\n            },\n          },\n          { sort: { examDate: -1 } }\n        )\n        .asArray()\n      state.exams = result\n      state.loadingExams = false\n    },\n  },\n})\n\nconst UnivByYear = ({ state, effects, history, university }) => (\n  <Row>\n    <Col>\n      <span style={{ cursor: 'pointer' }} onClick={effects.toggleExams}>\n        {state.loadingExams ? (\n          <img src={LoadingIcon} alt=\"loading\" height=\"20\" width=\"20\" />\n        ) : !state.collapseExams ? (\n          <PlusIcon size=\"20\" />\n        ) : (\n          <MinusIcon size=\"20\" />\n        )}\n        {university}\n      </span>\n      {state.collapseExams && state.exams && state.exams.length === 0 && (\n        <div style={{ marginLeft: '10px' }} className=\"text-muted\">\n          Pas d'examens trouvés\n        </div>\n      )}\n      {state.collapseExams && state.exams && state.exams.length > 0 && (\n        <Table>\n          <tbody>\n            {map(state.exams, exam => (\n              <tr>\n                <td>\n                  <strong>{exam.module}</strong>\n                </td>\n                <td>\n                  <Button color=\"dark\" disabled>\n                    {moment(exam.examDate).format('DD-MM-YYYY')}\n                  </Button>\n                </td>\n                <td>\n                  <h5>\n                    <Badge color=\"light\">{exam.seen || 0}</Badge> &nbsp;\n                    <EyeIcon size=\"20\" />\n                  </h5>\n                </td>\n                <td>\n                  <Button\n                    color=\"dark\"\n                    onClick={() => {\n                      history.push(`/examen/${exam._id}`)\n                    }}\n                  >\n                    Commencer <StartIcon />\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(UnivByYear))\n","import PlusIcon from 'react-icons/lib/fa/plus-square-o'\nimport MinusIcon from 'react-icons/lib/fa/minus-square-o'\nimport React from 'react'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport moment from 'moment'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport {\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  ListGroup,\n  ListGroupItem,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport Universities from '../../../data/cities'\nimport ExamsByYearUniv from '../exams-by-year-univ'\n\nconst withState = provideState({\n  initialState: () => ({\n    collapse: false,\n  }),\n  effects: {\n    toggle: () => state => {\n      state.collapse = !state.collapse\n    },\n  },\n})\n\nconst UnivByYear = ({ state, effects, year, _module, history }) => (\n  <Row>\n    <Col>\n      <span style={{ cursor: 'pointer' }} onClick={effects.toggle}>\n        {!state.collapse ? <PlusIcon size=\"20\" /> : <MinusIcon size=\"20\" />}{' '}\n        {year}\n      </span>\n      {state.collapse &&\n        map(Universities, university => (\n          <div style={{ marginLeft: '10px' }}>\n            <ExamsByYearUniv\n              _module={_module}\n              year={year}\n              university={university.nom}\n              history={history}\n            />\n          </div>\n        ))}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(UnivByYear))\n","import PlusIcon from 'react-icons/lib/fa/plus-square-o'\nimport MinusIcon from 'react-icons/lib/fa/minus-square-o'\nimport React from 'react'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport moment from 'moment'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport {\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  ListGroup,\n  ListGroupItem,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\nimport Universities from '../../../data/cities'\nimport UnivByYear from '../univ-by-year'\n\nconst generateYears = () => {\n  const years = []\n  for (\n    let y = new Date().getFullYear();\n    y > new Date().getFullYear() - 15;\n    y--\n  ) {\n    years.push(y)\n  }\n  return years\n}\n\nconst withState = provideState({\n  initialState: () => ({\n    collapse: false,\n  }),\n  effects: {\n    toggle: () => state => {\n      state.collapse = !state.collapse\n    },\n  },\n})\n\nconst ModuleByYear = ({ state, effects, history, _module }) => (\n  <Row>\n    <Col>\n      <span style={{ cursor: 'pointer' }} onClick={effects.toggle}>\n        {!state.collapse ? <PlusIcon size=\"20\" /> : <MinusIcon size=\"20\" />}{' '}\n        {_module}\n      </span>\n      {state.collapse &&\n        map(generateYears(), year => (\n          <div style={{ marginLeft: '10px' }}>\n            <UnivByYear _module={_module} year={year} history={history} />\n          </div>\n        ))}\n    </Col>\n  </Row>\n)\n\nexport default withState(injectState(ModuleByYear))\n","import BankIcon from 'react-icons/lib/fa/bank'\nimport BookIcon from 'react-icons/lib/fa/book'\nimport React from 'react'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport moment from 'moment'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport Modules from '../../data/modules'\nimport {\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  ListGroup,\n  ListGroupItem,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { injectState } from 'reaclette'\nimport { map } from 'lodash'\nimport ModuleByYear from './module-by-year'\n\nconst ExamExplorer = ({ state, history }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n        Explorateur d'examens&nbsp;\n        <BookIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody\n      style={{\n        height: '300px',\n        overflow: 'scroll',\n        overflowX: 'hidden',\n        fontSize: '18px',\n      }}\n    >\n      {map(Modules, _module => (\n        <ModuleByYear history={history} _module={_module} />\n      ))}\n    </CardBody>\n  </Card>\n)\n\nexport default injectState(ExamExplorer)\n","import AddExamIcon from 'react-icons/lib/md/control-point'\nimport ExclamationIcon from 'react-icons/lib/fa/exclamation'\nimport ModuleIcon from 'react-icons/lib/fa/medkit'\nimport SearchIcon from 'react-icons/lib/fa/search'\nimport StartIcon from 'react-icons/lib/fa/play-circle-o'\nimport React, { Fragment } from 'react'\nimport EyeIcon from 'react-icons/lib/fa/eye'\nimport moment from 'moment'\nimport {\n  Badge,\n  Card,\n  CardBody,\n  Button,\n  CardText,\n  Form,\n  FormGroup,\n  ListGroup,\n  ListGroupItem,\n  Input,\n  Row,\n  Col,\n  Table,\n} from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\nimport { map } from 'lodash'\n\nimport ActionButton from '../../components/action-button'\nimport CuteKoala from '../../imgs/cute_koala.jpg'\nimport Universities from '../../data/cities'\nimport Modules from '../../data/modules'\n\nconst generateYears = () => {\n  const years = []\n  for (\n    let y = new Date().getFullYear();\n    y > new Date().getFullYear() - 25;\n    y--\n  ) {\n    years.push(y)\n  }\n  return years\n}\n\nconst withState = provideState({\n  initialState: () => ({\n    module: '',\n    year: '',\n    _university: '',\n    searchResult: undefined,\n  }),\n  effects: {\n    handleExamValues: (_, { target }) => state => ({\n      ...state,\n      [target.name]: target.value,\n    }),\n    handleSearchExam: () => async state => {\n      let _examDate = {}\n      if (state.year !== '') {\n        _examDate = {\n          examDate: {\n            $lte: moment(`30/12/${state.year}`, 'DD-MM-YYYY').valueOf(),\n            $gte: moment(`01/01/${state.year}`, 'DD-MM-YYYY').valueOf(),\n          },\n        }\n      }\n      const result = await state.mongodb\n        .find({\n          module: state.module,\n          university: state._university,\n          ..._examDate,\n        })\n        .asArray()\n      state.searchResult = result\n    },\n  },\n})\n\nconst SearchExams = ({ history, state, effects }) => (\n  <Card style={{ boxShadow: '0 3px 5px rgba(0,0,0,.1)' }} className=\"h-100\">\n    <span\n      className=\"text-center\"\n      style={{\n        backgroundColor: '#7bc3d1',\n        color: 'white',\n        display: 'block',\n        cursor: 'pointer',\n      }}\n    >\n      <h5 style={{ fontWeight: 'bold', marginTop: '10px' }}>\n        Chercher un examen &nbsp;\n        <SearchIcon size=\"25\" />\n      </h5>\n    </span>\n    <CardBody>\n      <CardText>\n        <Form id=\"search-exam-form\">\n          <FormGroup>\n            <Input\n              name=\"module\"\n              onChange={effects.handleExamValues}\n              required\n              type=\"select\"\n              value={state.module}\n              disabled={state.addExamStarted}\n            >\n              <option value=\"\">Module *</option>\n              {Modules &&\n                map(Modules, module => (\n                  <option key={module} value={module}>\n                    {module}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              name=\"_university\"\n              onChange={effects.handleExamValues}\n              required\n              type=\"select\"\n              value={state._university}\n              disabled={state.addExamStarted}\n            >\n              <option value=\"\">Université *</option>\n              {Universities &&\n                map(Universities, university => (\n                  <option key={university.code} value={university.nom}>\n                    {`${university.code} - ${university.nom}`}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              name=\"year\"\n              onChange={effects.handleExamValues}\n              type=\"select\"\n              value={state.year}\n            >\n              <option value=\"\">Année</option>\n              {Modules &&\n                map(generateYears(), year => (\n                  <option key={year} value={year}>\n                    {year}\n                  </option>\n                ))}\n            </Input>\n          </FormGroup>\n          <ActionButton\n            text={\n              <span>\n                Chercher &nbsp; <SearchIcon />\n              </span>\n            }\n            action={effects.handleSearchExam}\n            block={true}\n            form=\"search-exam-form\"\n          />\n        </Form>\n        <br />\n        {state.searchResult !== undefined ? (\n          <Fragment>\n            <span className=\"text-muted\">Résultat de recherches</span>\n            <hr />\n          </Fragment>\n        ) : (\n          <div className=\"text-center\">\n            <img src={CuteKoala} alt=\"koala\" height=\"200\" width=\"200\" />\n          </div>\n        )}\n        <div>\n          {state.searchResult && state.searchResult.length === 0 ? (\n            <div className=\"text-center text-muted\">\n              <br />\n              <h3>\n                Pas d'examens trouvés :( &nbsp;\n                <ExclamationIcon size=\"30\" />\n              </h3>\n              <br />\n              <div>\n                <Button\n                  color=\"warning\"\n                  onClick={() => {\n                    if (state.logged) {\n                      history.push(\n                        `/contribuer?module=${state.module}&university=${\n                          state._university\n                        }`\n                      )\n                    } else {\n                      history.push('/authenticate')\n                    }\n                  }}\n                >\n                  Saisir cet examen <AddExamIcon size=\"18\" />\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <Table>\n              <tbody>\n                {map(state.searchResult, exam => (\n                  <tr>\n                    <td>\n                      <ModuleIcon />\n                      &nbsp;&nbsp;{exam.module}\n                    </td>\n                    <td>\n                      <Button color=\"dark\" disabled>\n                        {moment(exam.examDate).format('DD-MM-YYYY')}\n                      </Button>\n                    </td>\n                    <td>\n                      <h5>\n                        <Badge color=\"light\">{exam.seen || 0}</Badge> &nbsp;\n                        <EyeIcon size=\"20\" />\n                      </h5>\n                    </td>\n                    <td>\n                      <Button\n                        color=\"dark\"\n                        onClick={() => {\n                          history.push(`/examen/${exam._id}`)\n                        }}\n                      >\n                        Commencer <StartIcon />\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </div>\n      </CardText>\n    </CardBody>\n  </Card>\n)\n\nexport default withState(injectState(SearchExams))\n","import PlusIcon from 'react-icons/lib/fa/plus'\nimport React from 'react'\nimport { Button, Row, Col } from 'reactstrap'\nimport { injectState, provideState } from 'reaclette'\n\nimport LoadingIcon from '../imgs/button-spinner.gif'\nimport Exam from './exam'\nimport PassedExams from './passed-exams'\nimport ExamExplorer from './exam-explorer'\nimport SearchExams from './search-exam'\n\nimport { ObjectId } from 'bson'\n\nconst withState = provideState({\n  initialState: () => ({\n    addExamView: false,\n    initialExamData: undefined,\n    examLoading: false,\n  }),\n  effects: {\n    displayExamView: () => state => ({\n      ...state,\n      addExamView: true,\n    }),\n    hideExamView: () => state => ({\n      ...state,\n      addExamView: false,\n    }),\n  },\n})\n\nconst PassExam = ({ effects, state, history }) => (\n  <div style={{ marginTop: '20px' }}>\n    <Row>\n      <Col md=\"6\">\n        <Row>\n          <Col>\n            <SearchExams history={history} />\n          </Col>\n        </Row>\n      </Col>\n      <Col md=\"6\">\n        <ExamExplorer history={history} />\n      </Col>\n    </Row>\n  </div>\n)\n\nexport default withState(injectState(PassExam))\n","import Cookies from 'js-cookie'\nimport React, { Fragment } from 'react'\nimport ContributeIcon from 'react-icons/lib/fa/puzzle-piece'\nimport GraduateIcon from 'react-icons/lib/fa/graduation-cap'\nimport EnvelopeIcon from 'react-icons/lib/fa/envelope'\nimport HomeIcon from 'react-icons/lib/fa/home'\nimport ConcoursIcon from 'react-icons/lib/fa/file-text-o'\nimport {\n  Stitch,\n  RemoteMongoClient,\n  StitchServiceError,\n  AnonymousCredential,\n} from 'mongodb-stitch-browser-sdk'\nimport { Helmet } from 'react-helmet'\nimport {\n  Badge,\n  Button,\n  Container,\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  Row,\n  Col,\n} from 'reactstrap'\nimport { ToastContainer, toast } from 'react-toastify'\nimport {\n  HashRouter as Router,\n  Link,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport { provideState, injectState } from 'reaclette'\nimport { isEmpty } from 'lodash'\n\nimport Admin from './admin'\nimport AdminExams from './admin/admin-exams'\nimport AdminMessages from './admin/admin-messages'\nimport AdminReports from './admin/admin-reports'\nimport AuthOrCreate from './auth-or-create'\nimport AppIcon from './imgs/app-icon-brand.png'\nimport AccountMenu from './account-menu'\nimport Contribuate from './contribuate'\nimport ContactUs from './contact-us'\nimport ContestExam from './contest-exam'\nimport HomePage from './home'\nimport ConfirmPage from './confirm-page'\nimport ConfirmReset from './confirm-reset'\nimport Footer from './footer'\nimport LoadingIcon from './imgs/button-spinner.gif'\nimport PassExam from './pass-exam'\nimport Exam from './pass-exam/exam'\n\nconst withState = provideState({\n  initialState: () => ({\n    authId: undefined,\n    authEmail: undefined,\n    university: undefined,\n    mongodb: undefined,\n    serverInstance: undefined,\n    userNotConfirmed: undefined,\n    postedExams: undefined,\n    adminLogged: false,\n    lastPostedExams: undefined,\n    noNeedToAuthenticate: false,\n    authLoading: false,\n    navbarCollapse: true,\n  }),\n  effects: {\n    initialize: effects => async state => {\n      state.authLoading = true\n      const server = Stitch.initializeDefaultAppClient('med-dz-qcm-idjwm')\n      state.serverInstance = server\n      state.mongodb = server\n        .getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas')\n        .db('med-dz-qcm')\n        .collection('qcm')\n      if (server.auth.user) {\n        // logged\n        if (server.auth.user.loggedInProviderName !== 'anon-user') {\n          effects.signIn(server.auth.user.id)\n        }\n      } else {\n        // user not logged\n        try {\n          const user = await server.auth.loginWithCredential(\n            new AnonymousCredential()\n          )\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n      await effects.handleAppQueryString()\n      state.authLoading = false\n      await effects.getLastPostedExams()\n      // await state.mongodb.deleteMany({ creator: state.authId })\n      // console.log(await state.mongodb.find({}).asArray())\n    },\n    setAuthEmail: (_, authEmail) => state => ({\n      ...state,\n      authEmail,\n    }),\n    setAdminLogged: effects => state => {\n      state.adminLogged = true\n    },\n    logOut: () => state => {\n      state.serverInstance.auth.logout()\n      state.authId = undefined\n    },\n    getPostedExams: effects => async state => {\n      try {\n        state.postedExams = undefined\n        const exams = await state.mongodb\n          .find({ creator: state.authId })\n          .asArray()\n        state.postedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    getLastPostedExams: effects => async state => {\n      try {\n        state.lastPostedExams = undefined\n        const exams = await state.mongodb\n          .find({ approved: true }, { limit: 7, sort: { date: -1 } })\n          .asArray()\n        state.lastPostedExams = exams\n      } catch (error) {\n        effects.handleError(error)\n      }\n    },\n    handleAppQueryString: () => state => {\n      console.log(window.location)\n      const url = window.location.search\n      const params = new URLSearchParams(url)\n      const token = params.get('token')\n      const tokenId = params.get('tokenId')\n\n      if (token && tokenId) {\n        state.noNeedToAuthenticate = true\n        if (window.location.pathname === '/confirm') {\n          const route = `${window.location.protocol}//${\n            window.location.host\n          }/#/confirm?token=${token}&tokenId=${tokenId}`\n          window.location.replace(route)\n        }\n\n        if (window.location.pathname === '/reset') {\n          const route = `${window.location.protocol}//${\n            window.location.host\n          }/#/reset?token=${token}&tokenId=${tokenId}`\n          window.location.replace(route)\n        }\n      }\n    },\n    notifyError: (_, errorMessage) => state => {\n      toast.error(errorMessage, {\n        position: 'top-right',\n        autoClose: 15000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n    },\n    notifySuccess: (_, errorMessage) => state => {\n      toast.success(errorMessage, {\n        position: 'top-right',\n        autoClose: 15000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      })\n    },\n    handleError: async (effects, error) => {\n      console.log(error)\n      if (error instanceof StitchServiceError) {\n        await effects.notifyError(error.message)\n      } else {\n        await effects.notifyError(\n          \"Oops, something went wrong! Don't worry, our team is already on it\"\n        )\n      }\n    },\n    getUserAccount: (effects, authId) => async state => {\n      const university = Cookies.get('university') || 'Alger'\n      state.university = university\n      let user\n      try {\n        user = await state.mongodb\n          .find({ type: 'user', authId, university })\n          .asArray()\n      } catch (error) {\n        effects.handleError(error)\n      }\n      if (isEmpty(user)) {\n        try {\n          await state.mongodb.insertOne({ type: 'user', authId, university })\n        } catch (error) {\n          effects.handleError(error)\n        }\n      }\n    },\n    signIn: (effects, authId) => async state => {\n      await effects.getUserAccount(authId)\n      Cookies.set('authId', authId)\n      state.authId = authId\n      effects.getPostedExams()\n    },\n    toggleNavbar: () => state => ({\n      ...state,\n      navbarCollapse: !state.navbarCollapse,\n    }),\n  },\n  computed: {\n    logged: ({ authId }) => Boolean(authId),\n  },\n})\n\nconst App = ({ effects, state }) => (\n  <div className=\"App\">\n    <Helmet>\n      <title>Hakima QCM</title>\n    </Helmet>\n    <ToastContainer\n      position=\"top-center\"\n      autoClose={20000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnVisibilityChange\n      draggable\n      pauseOnHover\n    />\n    {state.authLoading ? (\n      <Row className=\"my-3\">\n        <Col md={{ size: 2, offset: 5 }}>\n          <br />\n          <div className=\"text-center\">\n            <img src={LoadingIcon} width=\"50\" height=\"50\" alt=\"Loading...\" />\n          </div>\n          <p className=\"text-muted text-center\">\n            Application en chargement ...\n          </p>\n        </Col>\n      </Row>\n    ) : (\n      state.mongodb &&\n      state.serverInstance && (\n        <Router>\n          <Row>\n            <Col xs=\"12\" md=\"12\">\n              <Navbar\n                light\n                expand=\"lg\"\n                style={{\n                  backgroundColor: '#222534',\n                  fontSize: '16px',\n                  boxShadow: '0 3px 5px rgba(0,0,0,.1)',\n                }}\n              >\n                <NavbarBrand href=\"#\" style={{ margin: 0 }}>\n                  <img src={AppIcon} alt=\"icon\" height=\"50\" width=\"60\" />{' '}\n                  <span\n                    style={{\n                      color: 'white',\n                      fontSize: '22px',\n                      verticalAlign: 'middle',\n                    }}\n                  >\n                    Haki<strong style={{ color: '#7bc3d1' }}>ma</strong> QCM\n                  </span>\n                </NavbarBrand>\n                <NavbarToggler\n                  onClick={effects.toggleNavbar}\n                  className=\"mr-2\"\n                  style={{ backgroundColor: '#e2e3e4' }}\n                />\n                <Collapse isOpen={!state.navbarCollapse} navbar>\n                  <Nav className=\"ml-auto\" navbar>\n                    <NavItem active={false}>\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/accueil\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <HomeIcon size=\"20\" /> Accueil\n                      </NavLink>\n                    </NavItem>\n                    {state.logged && (\n                      <NavItem>\n                        <NavLink\n                          className=\"nav-link\"\n                          to=\"/contribuer\"\n                          style={{\n                            color: '#e2e3e4',\n                          }}\n                          activeStyle={{ color: '#7bc3d1' }}\n                        >\n                          <ContributeIcon size=\"20\" /> Contribuer\n                        </NavLink>\n                      </NavItem>\n                    )}\n                    <NavItem>\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/examen\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <GraduateIcon size=\"20\" /> Réviser un module\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/concours\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <ConcoursIcon size=\"20\" /> Passer un concours{' '}\n                        <Badge color=\"warning\">New</Badge>\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        className=\"nav-link\"\n                        to=\"/contacteznous\"\n                        style={{\n                          color: '#e2e3e4',\n                        }}\n                        activeStyle={{ color: '#7bc3d1' }}\n                      >\n                        <EnvelopeIcon size=\"20\" /> Contacter nous\n                      </NavLink>\n                    </NavItem>\n                    &nbsp;\n                    {!state.logged && (\n                      <Fragment>\n                        <Link\n                          className=\"btn btn-light\"\n                          to={`/authenticate?toggle=createAccount`}\n                        >\n                          S'inscrire\n                        </Link>\n                        &nbsp;\n                        <Link\n                          className=\"btn btn-info\"\n                          to={`/authenticate?toggle=authentication`}\n                        >\n                          Se connecter\n                        </Link>\n                      </Fragment>\n                    )}\n                    {state.logged && <AccountMenu size=\"20\" />}\n                  </Nav>\n                </Collapse>\n              </Navbar>\n              <Container fluid style={{ marginTop: '20px' }}>\n                <Row>\n                  <Col md={{ size: 10, offset: 1 }} xs=\"12\">\n                    <Switch>\n                      <Route exact path=\"/accueil\" component={HomePage} />\n                      <Route exact path=\"/\" component={HomePage} />\n                      <Route path=\"/admin\" component={Admin} />\n                      <Route path=\"/confirm\" component={ConfirmPage} />\n                      <Route path=\"/contacteznous\" component={ContactUs} />\n                      <Route path=\"/concours\" component={ContestExam} />\n                      <Route path=\"/reset\" component={ConfirmReset} />\n                      <Route path=\"/authenticate\" component={AuthOrCreate} />\n                      <Route exact path=\"/examen\" component={PassExam} />\n                      <Route path=\"/examen/:examId\" component={Exam} />\n                      <Route exact path=\"/contribuer\" component={Contribuate} />\n                      <Route\n                        path=\"/contribuer/:examId\"\n                        component={Contribuate}\n                      />\n                      <Route exact component={HomePage} />\n                    </Switch>\n                  </Col>\n                </Row>\n              </Container>\n            </Col>\n          </Row>\n        </Router>\n      )\n    )}\n    <Footer />\n  </div>\n)\n\nexport default withState(injectState(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style/general-style.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cute_koala.4127e90e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/app-icon-brand.994f2fd5.png\";"],"sourceRoot":""}